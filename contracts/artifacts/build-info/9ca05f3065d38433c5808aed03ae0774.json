{
	"id": "9ca05f3065d38433c5808aed03ae0774",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BonDeFiToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n    bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\");\n    address public immutable stableCoin;\n    address public immutable interestCoin;\n    uint256 public immutable unitSize;\n    uint256 public immutable maturityDate;\n    constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin,\n    uint256 faceValue, uint256 _maturityDate, uint256 _unitSize) \n        ERC20(\"BonDeFiToken\", \"BDF\")\n    {\n        _grantRole(ADMIN, administrator);\n        _grantRole(BOND_ISSUER, bondIssuer);\n        stableCoin = _stableCoin;\n        interestCoin = _interestCoin;\n        unitSize = _unitSize;\n        maturityDate = _maturityDate;\n        _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals());\n    }\n\n    function buyBond(uint256 amountTokens) public{\n        require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize),\"Stable coin transfer failed\");\n        require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\");\n    }\n\n    function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){\n        require(IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount),\"Transfer failed\");\n    }\n\n    function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {\n        require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\");\n        for (uint256 i = 0; i < tokenHolders.length; i++) {\n            require(IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\");\n        }\n    }\n\n    function claimInvestorFunds() public onlyRole(BOND_ISSUER){\n        uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this));\n        require(amountInvestorCoins > 0,\"No investor funds available.\");\n        require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\");\n    }\n\n    function claimFaceValue(uint256 amountTokens) public{\n        //check maturity\n        require(block.timestamp >= maturityDate,\"Maturity not yet reached\");\n        //execute transfer\n        require(amountTokens > 0,\"Can't claim zero coins\");\n        require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\");\n        require(IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize),\"Stable coin transfer failed\");\n        //burn coins\n        _burn(address(this),amountTokens);\n    }\n\n    // The following functions are overrides required by Solidity.\n    // Override required for pausable\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n        function pause() public onlyRole(ADMIN) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(ADMIN) {\n        _unpause();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BonDeFiToken.sol": {
				"BonDeFiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "administrator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "bondIssuer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_interestCoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "faceValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maturityDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_unitSize",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOND_ISSUER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "buyBond",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "claimFaceValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInvestorFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokenHolders",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "distributeInterestAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maturityDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unitSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BonDeFiToken.sol\":373:3445  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/BonDeFiToken.sol\":745:1255  constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin,... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x426f6e44654669546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4244460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BonDeFiToken.sol\":960:992  _grantRole(ADMIN, administrator) */\n  tag_13\n    /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n  0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n    /* \"contracts/BonDeFiToken.sol\":978:991  administrator */\n  dup9\n    /* \"contracts/BonDeFiToken.sol\":960:970  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/BonDeFiToken.sol\":960:992  _grantRole(ADMIN, administrator) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1002:1037  _grantRole(BOND_ISSUER, bondIssuer) */\n  tag_15\n    /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n  0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n    /* \"contracts/BonDeFiToken.sol\":1026:1036  bondIssuer */\n  dup8\n    /* \"contracts/BonDeFiToken.sol\":1002:1012  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/BonDeFiToken.sol\":1002:1037  _grantRole(BOND_ISSUER, bondIssuer) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1060:1071  _stableCoin */\n  dup5\n    /* \"contracts/BonDeFiToken.sol\":1047:1071  stableCoin = _stableCoin */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1096:1109  _interestCoin */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":1081:1109  interestCoin = _interestCoin */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1130:1139  _unitSize */\n  dup1\n    /* \"contracts/BonDeFiToken.sol\":1119:1139  unitSize = _unitSize */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1164:1177  _maturityDate */\n  dup2\n    /* \"contracts/BonDeFiToken.sol\":1149:1177  maturityDate = _maturityDate */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1187:1248  _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals()) */\n  tag_16\n    /* \"contracts/BonDeFiToken.sol\":1193:1203  msg.sender */\n  caller\n    /* \"contracts/BonDeFiToken.sol\":1237:1247  decimals() */\n  tag_17\n    /* \"contracts/BonDeFiToken.sol\":1237:1245  decimals */\n  shl(0x20, tag_18)\n    /* \"contracts/BonDeFiToken.sol\":1237:1247  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/BonDeFiToken.sol\":1231:1233  10 */\n  0x0a\n    /* \"contracts/BonDeFiToken.sol\":1231:1247  10 ** decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/BonDeFiToken.sol\":1218:1227  _unitSize */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":1206:1215  faceValue */\n  dup7\n    /* \"contracts/BonDeFiToken.sol\":1206:1227  faceValue / _unitSize */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/BonDeFiToken.sol\":1205:1247  (faceValue / _unitSize) * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/BonDeFiToken.sol\":1187:1192  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/BonDeFiToken.sol\":1187:1248  _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/BonDeFiToken.sol\":745:1255  constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin,... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":373:3445  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/BonDeFiToken.sol\":3129:3294  function _update(address from, address to, uint256 value)... */\ntag_40:\n    /* \"contracts/BonDeFiToken.sol\":3257:3287  super._update(from, to, value) */\n  tag_44\n    /* \"contracts/BonDeFiToken.sol\":3271:3275  from */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3277:3279  to */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3281:3286  value */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3257:3270  super._update */\n  shl(0x20, tag_45)\n    /* \"contracts/BonDeFiToken.sol\":3257:3287  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"contracts/BonDeFiToken.sol\":3129:3294  function _update(address from, address to, uint256 value)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_47\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  tag_50\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n  shl(0x20, tag_51)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  tag_53\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n  shl(0x20, tag_54)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_60)\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_61\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_62\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_65)\ntag_64:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_70:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_72:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_73:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_112\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_72\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_74:\n    /* \"#utility.yul\":641:665   */\n  tag_114\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_73\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_115:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_75:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_117\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_74\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_76:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_77:\n    /* \"#utility.yul\":1001:1025   */\n  tag_120\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_76\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_121:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_78:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_123\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_77\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2496   */\ntag_3:\n    /* \"#utility.yul\":1329:1335   */\n  0x00\n    /* \"#utility.yul\":1337:1343   */\n  dup1\n    /* \"#utility.yul\":1345:1351   */\n  0x00\n    /* \"#utility.yul\":1353:1359   */\n  dup1\n    /* \"#utility.yul\":1361:1367   */\n  0x00\n    /* \"#utility.yul\":1369:1375   */\n  dup1\n    /* \"#utility.yul\":1377:1383   */\n  0x00\n    /* \"#utility.yul\":1426:1429   */\n  0xe0\n    /* \"#utility.yul\":1414:1423   */\n  dup9\n    /* \"#utility.yul\":1405:1412   */\n  dup11\n    /* \"#utility.yul\":1401:1424   */\n  sub\n    /* \"#utility.yul\":1397:1430   */\n  slt\n    /* \"#utility.yul\":1394:1514   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":1433:1512   */\n  tag_126\n  tag_70\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1394:1514   */\ntag_125:\n    /* \"#utility.yul\":1553:1554   */\n  0x00\n    /* \"#utility.yul\":1578:1642   */\n  tag_127\n    /* \"#utility.yul\":1634:1641   */\n  dup11\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1614:1623   */\n  dup12\n    /* \"#utility.yul\":1610:1632   */\n  add\n    /* \"#utility.yul\":1578:1642   */\n  tag_75\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1568:1642   */\n  swap8\n  pop\n    /* \"#utility.yul\":1524:1652   */\n  pop\n    /* \"#utility.yul\":1691:1693   */\n  0x20\n    /* \"#utility.yul\":1717:1781   */\n  tag_128\n    /* \"#utility.yul\":1773:1780   */\n  dup11\n    /* \"#utility.yul\":1764:1770   */\n  dup3\n    /* \"#utility.yul\":1753:1762   */\n  dup12\n    /* \"#utility.yul\":1749:1771   */\n  add\n    /* \"#utility.yul\":1717:1781   */\n  tag_75\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":1707:1781   */\n  swap7\n  pop\n    /* \"#utility.yul\":1662:1791   */\n  pop\n    /* \"#utility.yul\":1830:1832   */\n  0x40\n    /* \"#utility.yul\":1856:1920   */\n  tag_129\n    /* \"#utility.yul\":1912:1919   */\n  dup11\n    /* \"#utility.yul\":1903:1909   */\n  dup3\n    /* \"#utility.yul\":1892:1901   */\n  dup12\n    /* \"#utility.yul\":1888:1910   */\n  add\n    /* \"#utility.yul\":1856:1920   */\n  tag_75\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":1846:1920   */\n  swap6\n  pop\n    /* \"#utility.yul\":1801:1930   */\n  pop\n    /* \"#utility.yul\":1969:1971   */\n  0x60\n    /* \"#utility.yul\":1995:2059   */\n  tag_130\n    /* \"#utility.yul\":2051:2058   */\n  dup11\n    /* \"#utility.yul\":2042:2048   */\n  dup3\n    /* \"#utility.yul\":2031:2040   */\n  dup12\n    /* \"#utility.yul\":2027:2049   */\n  add\n    /* \"#utility.yul\":1995:2059   */\n  tag_75\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":1985:2059   */\n  swap5\n  pop\n    /* \"#utility.yul\":1940:2069   */\n  pop\n    /* \"#utility.yul\":2108:2111   */\n  0x80\n    /* \"#utility.yul\":2135:2199   */\n  tag_131\n    /* \"#utility.yul\":2191:2198   */\n  dup11\n    /* \"#utility.yul\":2182:2188   */\n  dup3\n    /* \"#utility.yul\":2171:2180   */\n  dup12\n    /* \"#utility.yul\":2167:2189   */\n  add\n    /* \"#utility.yul\":2135:2199   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2125:2199   */\n  swap4\n  pop\n    /* \"#utility.yul\":2079:2209   */\n  pop\n    /* \"#utility.yul\":2248:2251   */\n  0xa0\n    /* \"#utility.yul\":2275:2339   */\n  tag_132\n    /* \"#utility.yul\":2331:2338   */\n  dup11\n    /* \"#utility.yul\":2322:2328   */\n  dup3\n    /* \"#utility.yul\":2311:2320   */\n  dup12\n    /* \"#utility.yul\":2307:2329   */\n  add\n    /* \"#utility.yul\":2275:2339   */\n  tag_78\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2265:2339   */\n  swap3\n  pop\n    /* \"#utility.yul\":2219:2349   */\n  pop\n    /* \"#utility.yul\":2388:2391   */\n  0xc0\n    /* \"#utility.yul\":2415:2479   */\n  tag_133\n    /* \"#utility.yul\":2471:2478   */\n  dup11\n    /* \"#utility.yul\":2462:2468   */\n  dup3\n    /* \"#utility.yul\":2451:2460   */\n  dup12\n    /* \"#utility.yul\":2447:2469   */\n  add\n    /* \"#utility.yul\":2415:2479   */\n  tag_78\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2405:2479   */\n  swap2\n  pop\n    /* \"#utility.yul\":2359:2489   */\n  pop\n    /* \"#utility.yul\":1205:2496   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2601   */\ntag_79:\n    /* \"#utility.yul\":2554:2560   */\n  0x00\n    /* \"#utility.yul\":2588:2593   */\n  dup2\n    /* \"#utility.yul\":2582:2594   */\n  mload\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2502:2601   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2607:2787   */\ntag_80:\n    /* \"#utility.yul\":2655:2732   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2652:2653   */\n  0x00\n    /* \"#utility.yul\":2645:2733   */\n  mstore\n    /* \"#utility.yul\":2752:2756   */\n  0x41\n    /* \"#utility.yul\":2749:2750   */\n  0x04\n    /* \"#utility.yul\":2742:2757   */\n  mstore\n    /* \"#utility.yul\":2776:2780   */\n  0x24\n    /* \"#utility.yul\":2773:2774   */\n  0x00\n    /* \"#utility.yul\":2766:2781   */\n  revert\n    /* \"#utility.yul\":2793:2973   */\ntag_81:\n    /* \"#utility.yul\":2841:2918   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2838:2839   */\n  0x00\n    /* \"#utility.yul\":2831:2919   */\n  mstore\n    /* \"#utility.yul\":2938:2942   */\n  0x22\n    /* \"#utility.yul\":2935:2936   */\n  0x04\n    /* \"#utility.yul\":2928:2943   */\n  mstore\n    /* \"#utility.yul\":2962:2966   */\n  0x24\n    /* \"#utility.yul\":2959:2960   */\n  0x00\n    /* \"#utility.yul\":2952:2967   */\n  revert\n    /* \"#utility.yul\":2979:3299   */\ntag_82:\n    /* \"#utility.yul\":3023:3029   */\n  0x00\n    /* \"#utility.yul\":3060:3061   */\n  0x02\n    /* \"#utility.yul\":3054:3058   */\n  dup3\n    /* \"#utility.yul\":3050:3062   */\n  div\n    /* \"#utility.yul\":3040:3062   */\n  swap1\n  pop\n    /* \"#utility.yul\":3107:3108   */\n  0x01\n    /* \"#utility.yul\":3101:3105   */\n  dup3\n    /* \"#utility.yul\":3097:3109   */\n  and\n    /* \"#utility.yul\":3128:3146   */\n  dup1\n    /* \"#utility.yul\":3118:3199   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":3184:3188   */\n  0x7f\n    /* \"#utility.yul\":3176:3182   */\n  dup3\n    /* \"#utility.yul\":3172:3189   */\n  and\n    /* \"#utility.yul\":3162:3189   */\n  swap2\n  pop\n    /* \"#utility.yul\":3118:3199   */\ntag_138:\n    /* \"#utility.yul\":3246:3248   */\n  0x20\n    /* \"#utility.yul\":3238:3244   */\n  dup3\n    /* \"#utility.yul\":3235:3249   */\n  lt\n    /* \"#utility.yul\":3215:3233   */\n  dup2\n    /* \"#utility.yul\":3212:3250   */\n  sub\n    /* \"#utility.yul\":3209:3293   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3265:3283   */\n  tag_140\n  tag_81\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3209:3293   */\ntag_139:\n    /* \"#utility.yul\":3030:3299   */\n  pop\n    /* \"#utility.yul\":2979:3299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3305:3446   */\ntag_83:\n    /* \"#utility.yul\":3354:3358   */\n  0x00\n    /* \"#utility.yul\":3377:3380   */\n  dup2\n    /* \"#utility.yul\":3369:3380   */\n  swap1\n  pop\n    /* \"#utility.yul\":3400:3403   */\n  dup2\n    /* \"#utility.yul\":3397:3398   */\n  0x00\n    /* \"#utility.yul\":3390:3404   */\n  mstore\n    /* \"#utility.yul\":3434:3438   */\n  0x20\n    /* \"#utility.yul\":3431:3432   */\n  0x00\n    /* \"#utility.yul\":3421:3439   */\n  keccak256\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3305:3446   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3452:3545   */\ntag_84:\n    /* \"#utility.yul\":3489:3495   */\n  0x00\n    /* \"#utility.yul\":3536:3538   */\n  0x20\n    /* \"#utility.yul\":3531:3533   */\n  0x1f\n    /* \"#utility.yul\":3524:3529   */\n  dup4\n    /* \"#utility.yul\":3520:3534   */\n  add\n    /* \"#utility.yul\":3516:3539   */\n  div\n    /* \"#utility.yul\":3506:3539   */\n  swap1\n  pop\n    /* \"#utility.yul\":3452:3545   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3551:3658   */\ntag_85:\n    /* \"#utility.yul\":3595:3603   */\n  0x00\n    /* \"#utility.yul\":3645:3650   */\n  dup3\n    /* \"#utility.yul\":3639:3643   */\n  dup3\n    /* \"#utility.yul\":3635:3651   */\n  shl\n    /* \"#utility.yul\":3614:3651   */\n  swap1\n  pop\n    /* \"#utility.yul\":3551:3658   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3664:4057   */\ntag_86:\n    /* \"#utility.yul\":3733:3739   */\n  0x00\n    /* \"#utility.yul\":3783:3784   */\n  0x08\n    /* \"#utility.yul\":3771:3781   */\n  dup4\n    /* \"#utility.yul\":3767:3785   */\n  mul\n    /* \"#utility.yul\":3806:3903   */\n  tag_145\n    /* \"#utility.yul\":3836:3902   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3825:3834   */\n  dup3\n    /* \"#utility.yul\":3806:3903   */\n  tag_85\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3924:3963   */\n  tag_146\n    /* \"#utility.yul\":3954:3962   */\n  dup7\n    /* \"#utility.yul\":3943:3952   */\n  dup4\n    /* \"#utility.yul\":3924:3963   */\n  tag_85\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3912:3963   */\n  swap6\n  pop\n    /* \"#utility.yul\":3996:4000   */\n  dup1\n    /* \"#utility.yul\":3992:4001   */\n  not\n    /* \"#utility.yul\":3985:3990   */\n  dup5\n    /* \"#utility.yul\":3981:4002   */\n  and\n    /* \"#utility.yul\":3972:4002   */\n  swap4\n  pop\n    /* \"#utility.yul\":4045:4049   */\n  dup1\n    /* \"#utility.yul\":4035:4043   */\n  dup7\n    /* \"#utility.yul\":4031:4050   */\n  and\n    /* \"#utility.yul\":4024:4029   */\n  dup5\n    /* \"#utility.yul\":4021:4051   */\n  or\n    /* \"#utility.yul\":4011:4051   */\n  swap3\n  pop\n    /* \"#utility.yul\":3740:4057   */\n  pop\n  pop\n    /* \"#utility.yul\":3664:4057   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4063:4123   */\ntag_87:\n    /* \"#utility.yul\":4091:4094   */\n  0x00\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4105:4117   */\n  swap1\n  pop\n    /* \"#utility.yul\":4063:4123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4129:4271   */\ntag_88:\n    /* \"#utility.yul\":4179:4188   */\n  0x00\n    /* \"#utility.yul\":4212:4265   */\n  tag_149\n    /* \"#utility.yul\":4230:4264   */\n  tag_150\n    /* \"#utility.yul\":4239:4263   */\n  tag_151\n    /* \"#utility.yul\":4257:4262   */\n  dup5\n    /* \"#utility.yul\":4239:4263   */\n  tag_76\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4230:4264   */\n  tag_87\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4212:4265   */\n  tag_76\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4199:4265   */\n  swap1\n  pop\n    /* \"#utility.yul\":4129:4271   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4277:4352   */\ntag_89:\n    /* \"#utility.yul\":4320:4323   */\n  0x00\n    /* \"#utility.yul\":4341:4346   */\n  dup2\n    /* \"#utility.yul\":4334:4346   */\n  swap1\n  pop\n    /* \"#utility.yul\":4277:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4627   */\ntag_90:\n    /* \"#utility.yul\":4468:4507   */\n  tag_154\n    /* \"#utility.yul\":4499:4506   */\n  dup4\n    /* \"#utility.yul\":4468:4507   */\n  tag_88\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4529:4620   */\n  tag_155\n    /* \"#utility.yul\":4578:4619   */\n  tag_156\n    /* \"#utility.yul\":4602:4618   */\n  dup3\n    /* \"#utility.yul\":4578:4619   */\n  tag_89\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4570:4576   */\n  dup5\n    /* \"#utility.yul\":4563:4567   */\n  dup5\n    /* \"#utility.yul\":4557:4568   */\n  sload\n    /* \"#utility.yul\":4529:4620   */\n  tag_86\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4523:4527   */\n  dup3\n    /* \"#utility.yul\":4516:4621   */\n  sstore\n    /* \"#utility.yul\":4434:4627   */\n  pop\n    /* \"#utility.yul\":4358:4627   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4633:4706   */\ntag_91:\n    /* \"#utility.yul\":4678:4681   */\n  0x00\n    /* \"#utility.yul\":4633:4706   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4712:4901   */\ntag_92:\n    /* \"#utility.yul\":4789:4821   */\n  tag_159\n  tag_91\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4830:4895   */\n  tag_160\n    /* \"#utility.yul\":4888:4894   */\n  dup2\n    /* \"#utility.yul\":4880:4886   */\n  dup5\n    /* \"#utility.yul\":4874:4878   */\n  dup5\n    /* \"#utility.yul\":4830:4895   */\n  tag_90\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4765:4901   */\n  pop\n    /* \"#utility.yul\":4712:4901   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4907:5093   */\ntag_93:\n    /* \"#utility.yul\":4967:5087   */\ntag_162:\n    /* \"#utility.yul\":4984:4987   */\n  dup2\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4974:4988   */\n  lt\n    /* \"#utility.yul\":4967:5087   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":5038:5077   */\n  tag_165\n    /* \"#utility.yul\":5075:5076   */\n  0x00\n    /* \"#utility.yul\":5068:5073   */\n  dup3\n    /* \"#utility.yul\":5038:5077   */\n  tag_92\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5011:5012   */\n  0x01\n    /* \"#utility.yul\":5004:5009   */\n  dup2\n    /* \"#utility.yul\":5000:5013   */\n  add\n    /* \"#utility.yul\":4991:5013   */\n  swap1\n  pop\n    /* \"#utility.yul\":4967:5087   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":4907:5093   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5099:5642   */\ntag_94:\n    /* \"#utility.yul\":5200:5202   */\n  0x1f\n    /* \"#utility.yul\":5195:5198   */\n  dup3\n    /* \"#utility.yul\":5192:5203   */\n  gt\n    /* \"#utility.yul\":5189:5635   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":5234:5272   */\n  tag_168\n    /* \"#utility.yul\":5266:5271   */\n  dup2\n    /* \"#utility.yul\":5234:5272   */\n  tag_83\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5318:5347   */\n  tag_169\n    /* \"#utility.yul\":5336:5346   */\n  dup5\n    /* \"#utility.yul\":5318:5347   */\n  tag_84\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5308:5316   */\n  dup2\n    /* \"#utility.yul\":5304:5348   */\n  add\n    /* \"#utility.yul\":5501:5503   */\n  0x20\n    /* \"#utility.yul\":5489:5499   */\n  dup6\n    /* \"#utility.yul\":5486:5504   */\n  lt\n    /* \"#utility.yul\":5483:5532   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5522:5530   */\n  dup2\n    /* \"#utility.yul\":5507:5530   */\n  swap1\n  pop\n    /* \"#utility.yul\":5483:5532   */\ntag_170:\n    /* \"#utility.yul\":5545:5625   */\n  tag_171\n    /* \"#utility.yul\":5601:5623   */\n  tag_172\n    /* \"#utility.yul\":5619:5622   */\n  dup6\n    /* \"#utility.yul\":5601:5623   */\n  tag_84\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5591:5599   */\n  dup4\n    /* \"#utility.yul\":5587:5624   */\n  add\n    /* \"#utility.yul\":5574:5585   */\n  dup3\n    /* \"#utility.yul\":5545:5625   */\n  tag_93\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5204:5635   */\n  pop\n  pop\n    /* \"#utility.yul\":5189:5635   */\ntag_167:\n    /* \"#utility.yul\":5099:5642   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5648:5765   */\ntag_95:\n    /* \"#utility.yul\":5702:5710   */\n  0x00\n    /* \"#utility.yul\":5752:5757   */\n  dup3\n    /* \"#utility.yul\":5746:5750   */\n  dup3\n    /* \"#utility.yul\":5742:5758   */\n  shr\n    /* \"#utility.yul\":5721:5758   */\n  swap1\n  pop\n    /* \"#utility.yul\":5648:5765   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5771:5940   */\ntag_96:\n    /* \"#utility.yul\":5815:5821   */\n  0x00\n    /* \"#utility.yul\":5848:5899   */\n  tag_175\n    /* \"#utility.yul\":5896:5897   */\n  0x00\n    /* \"#utility.yul\":5892:5898   */\n  not\n    /* \"#utility.yul\":5884:5889   */\n  dup5\n    /* \"#utility.yul\":5881:5882   */\n  0x08\n    /* \"#utility.yul\":5877:5890   */\n  mul\n    /* \"#utility.yul\":5848:5899   */\n  tag_95\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":5844:5900   */\n  not\n    /* \"#utility.yul\":5929:5933   */\n  dup1\n    /* \"#utility.yul\":5923:5927   */\n  dup4\n    /* \"#utility.yul\":5919:5934   */\n  and\n    /* \"#utility.yul\":5909:5934   */\n  swap2\n  pop\n    /* \"#utility.yul\":5822:5940   */\n  pop\n    /* \"#utility.yul\":5771:5940   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5945:6240   */\ntag_97:\n    /* \"#utility.yul\":6021:6025   */\n  0x00\n    /* \"#utility.yul\":6167:6196   */\n  tag_177\n    /* \"#utility.yul\":6192:6195   */\n  dup4\n    /* \"#utility.yul\":6186:6190   */\n  dup4\n    /* \"#utility.yul\":6167:6196   */\n  tag_96\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6159:6196   */\n  swap2\n  pop\n    /* \"#utility.yul\":6229:6232   */\n  dup3\n    /* \"#utility.yul\":6226:6227   */\n  0x02\n    /* \"#utility.yul\":6222:6233   */\n  mul\n    /* \"#utility.yul\":6216:6220   */\n  dup3\n    /* \"#utility.yul\":6213:6234   */\n  or\n    /* \"#utility.yul\":6205:6234   */\n  swap1\n  pop\n    /* \"#utility.yul\":5945:6240   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6245:7640   */\ntag_9:\n    /* \"#utility.yul\":6362:6399   */\n  tag_179\n    /* \"#utility.yul\":6395:6398   */\n  dup3\n    /* \"#utility.yul\":6362:6399   */\n  tag_79\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6464:6482   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6456:6462   */\n  dup2\n    /* \"#utility.yul\":6453:6483   */\n  gt\n    /* \"#utility.yul\":6450:6506   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":6486:6504   */\n  tag_181\n  tag_80\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6450:6506   */\ntag_180:\n    /* \"#utility.yul\":6530:6568   */\n  tag_182\n    /* \"#utility.yul\":6562:6566   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  sload\n    /* \"#utility.yul\":6530:6568   */\n  tag_82\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6615:6682   */\n  tag_183\n    /* \"#utility.yul\":6675:6681   */\n  dup3\n    /* \"#utility.yul\":6667:6673   */\n  dup3\n    /* \"#utility.yul\":6661:6665   */\n  dup6\n    /* \"#utility.yul\":6615:6682   */\n  tag_94\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6709:6710   */\n  0x00\n    /* \"#utility.yul\":6733:6737   */\n  0x20\n    /* \"#utility.yul\":6720:6737   */\n  swap1\n  pop\n    /* \"#utility.yul\":6765:6767   */\n  0x1f\n    /* \"#utility.yul\":6757:6763   */\n  dup4\n    /* \"#utility.yul\":6754:6768   */\n  gt\n    /* \"#utility.yul\":6782:6783   */\n  0x01\n    /* \"#utility.yul\":6777:7395   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7439:7440   */\n  0x00\n    /* \"#utility.yul\":7456:7462   */\n  dup5\n    /* \"#utility.yul\":7453:7530   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7505:7514   */\n  dup3\n    /* \"#utility.yul\":7500:7503   */\n  dup8\n    /* \"#utility.yul\":7496:7515   */\n  add\n    /* \"#utility.yul\":7490:7516   */\n  mload\n    /* \"#utility.yul\":7481:7516   */\n  swap1\n  pop\n    /* \"#utility.yul\":7453:7530   */\ntag_186:\n    /* \"#utility.yul\":7556:7623   */\n  tag_187\n    /* \"#utility.yul\":7616:7622   */\n  dup6\n    /* \"#utility.yul\":7609:7614   */\n  dup3\n    /* \"#utility.yul\":7556:7623   */\n  tag_97\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7550:7554   */\n  dup7\n    /* \"#utility.yul\":7543:7624   */\n  sstore\n    /* \"#utility.yul\":7412:7634   */\n  pop\n    /* \"#utility.yul\":6747:7634   */\n  jump(tag_184)\n    /* \"#utility.yul\":6777:7395   */\ntag_185:\n    /* \"#utility.yul\":6829:6833   */\n  0x1f\n    /* \"#utility.yul\":6825:6834   */\n  not\n    /* \"#utility.yul\":6817:6823   */\n  dup5\n    /* \"#utility.yul\":6813:6835   */\n  and\n    /* \"#utility.yul\":6863:6900   */\n  tag_188\n    /* \"#utility.yul\":6895:6899   */\n  dup7\n    /* \"#utility.yul\":6863:6900   */\n  tag_83\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6922:6923   */\n  0x00\n    /* \"#utility.yul\":6936:7144   */\ntag_189:\n    /* \"#utility.yul\":6950:6957   */\n  dup3\n    /* \"#utility.yul\":6947:6948   */\n  dup2\n    /* \"#utility.yul\":6944:6958   */\n  lt\n    /* \"#utility.yul\":6936:7144   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":7029:7038   */\n  dup5\n    /* \"#utility.yul\":7024:7027   */\n  dup10\n    /* \"#utility.yul\":7020:7039   */\n  add\n    /* \"#utility.yul\":7014:7040   */\n  mload\n    /* \"#utility.yul\":7006:7012   */\n  dup3\n    /* \"#utility.yul\":6999:7041   */\n  sstore\n    /* \"#utility.yul\":7080:7081   */\n  0x01\n    /* \"#utility.yul\":7072:7078   */\n  dup3\n    /* \"#utility.yul\":7068:7082   */\n  add\n    /* \"#utility.yul\":7058:7082   */\n  swap2\n  pop\n    /* \"#utility.yul\":7127:7129   */\n  0x20\n    /* \"#utility.yul\":7116:7125   */\n  dup6\n    /* \"#utility.yul\":7112:7130   */\n  add\n    /* \"#utility.yul\":7099:7130   */\n  swap5\n  pop\n    /* \"#utility.yul\":6973:6977   */\n  0x20\n    /* \"#utility.yul\":6970:6971   */\n  dup2\n    /* \"#utility.yul\":6966:6978   */\n  add\n    /* \"#utility.yul\":6961:6978   */\n  swap1\n  pop\n    /* \"#utility.yul\":6936:7144   */\n  jump(tag_189)\ntag_191:\n    /* \"#utility.yul\":7172:7178   */\n  dup7\n    /* \"#utility.yul\":7163:7170   */\n  dup4\n    /* \"#utility.yul\":7160:7179   */\n  lt\n    /* \"#utility.yul\":7157:7336   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":7230:7239   */\n  dup5\n    /* \"#utility.yul\":7225:7228   */\n  dup10\n    /* \"#utility.yul\":7221:7240   */\n  add\n    /* \"#utility.yul\":7215:7241   */\n  mload\n    /* \"#utility.yul\":7273:7321   */\n  tag_193\n    /* \"#utility.yul\":7315:7319   */\n  0x1f\n    /* \"#utility.yul\":7307:7313   */\n  dup10\n    /* \"#utility.yul\":7303:7320   */\n  and\n    /* \"#utility.yul\":7292:7301   */\n  dup3\n    /* \"#utility.yul\":7273:7321   */\n  tag_96\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7265:7271   */\n  dup4\n    /* \"#utility.yul\":7258:7322   */\n  sstore\n    /* \"#utility.yul\":7180:7336   */\n  pop\n    /* \"#utility.yul\":7157:7336   */\ntag_192:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7378:7379   */\n  0x02\n    /* \"#utility.yul\":7370:7376   */\n  dup9\n    /* \"#utility.yul\":7366:7380   */\n  mul\n    /* \"#utility.yul\":7362:7384   */\n  add\n    /* \"#utility.yul\":7356:7360   */\n  dup9\n    /* \"#utility.yul\":7349:7385   */\n  sstore\n    /* \"#utility.yul\":6784:7395   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6747:7634   */\ntag_184:\n  pop\n    /* \"#utility.yul\":6337:7640   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6245:7640   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7646:7826   */\ntag_98:\n    /* \"#utility.yul\":7694:7771   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7691:7692   */\n  0x00\n    /* \"#utility.yul\":7684:7772   */\n  mstore\n    /* \"#utility.yul\":7791:7795   */\n  0x11\n    /* \"#utility.yul\":7788:7789   */\n  0x04\n    /* \"#utility.yul\":7781:7796   */\n  mstore\n    /* \"#utility.yul\":7815:7819   */\n  0x24\n    /* \"#utility.yul\":7812:7813   */\n  0x00\n    /* \"#utility.yul\":7805:7820   */\n  revert\n    /* \"#utility.yul\":7832:7934   */\ntag_99:\n    /* \"#utility.yul\":7874:7882   */\n  0x00\n    /* \"#utility.yul\":7921:7926   */\n  dup2\n    /* \"#utility.yul\":7918:7919   */\n  0x01\n    /* \"#utility.yul\":7914:7927   */\n  shr\n    /* \"#utility.yul\":7893:7927   */\n  swap1\n  pop\n    /* \"#utility.yul\":7832:7934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7940:8788   */\ntag_100:\n    /* \"#utility.yul\":8001:8006   */\n  0x00\n    /* \"#utility.yul\":8008:8012   */\n  dup1\n    /* \"#utility.yul\":8032:8038   */\n  dup3\n    /* \"#utility.yul\":8023:8038   */\n  swap2\n  pop\n    /* \"#utility.yul\":8056:8061   */\n  dup4\n    /* \"#utility.yul\":8047:8061   */\n  swap1\n  pop\n    /* \"#utility.yul\":8070:8782   */\ntag_197:\n    /* \"#utility.yul\":8091:8092   */\n  0x01\n    /* \"#utility.yul\":8081:8089   */\n  dup6\n    /* \"#utility.yul\":8078:8093   */\n  gt\n    /* \"#utility.yul\":8070:8782   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8186:8190   */\n  dup1\n    /* \"#utility.yul\":8181:8184   */\n  dup7\n    /* \"#utility.yul\":8177:8191   */\n  div\n    /* \"#utility.yul\":8171:8175   */\n  dup2\n    /* \"#utility.yul\":8168:8192   */\n  gt\n    /* \"#utility.yul\":8165:8215   */\n  iszero\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8195:8213   */\n  tag_201\n  tag_98\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8165:8215   */\ntag_200:\n    /* \"#utility.yul\":8245:8246   */\n  0x01\n    /* \"#utility.yul\":8235:8243   */\n  dup6\n    /* \"#utility.yul\":8231:8247   */\n  and\n    /* \"#utility.yul\":8228:8679   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8660:8664   */\n  dup1\n    /* \"#utility.yul\":8653:8658   */\n  dup3\n    /* \"#utility.yul\":8649:8665   */\n  mul\n    /* \"#utility.yul\":8640:8665   */\n  swap2\n  pop\n    /* \"#utility.yul\":8228:8679   */\ntag_202:\n    /* \"#utility.yul\":8710:8714   */\n  dup1\n    /* \"#utility.yul\":8704:8708   */\n  dup2\n    /* \"#utility.yul\":8700:8715   */\n  mul\n    /* \"#utility.yul\":8692:8715   */\n  swap1\n  pop\n    /* \"#utility.yul\":8740:8772   */\n  tag_203\n    /* \"#utility.yul\":8763:8771   */\n  dup6\n    /* \"#utility.yul\":8740:8772   */\n  tag_99\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8728:8772   */\n  swap5\n  pop\n    /* \"#utility.yul\":8070:8782   */\n  jump(tag_197)\ntag_199:\n    /* \"#utility.yul\":7940:8788   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8794:9867   */\ntag_101:\n    /* \"#utility.yul\":8848:8853   */\n  0x00\n    /* \"#utility.yul\":9039:9047   */\n  dup3\n    /* \"#utility.yul\":9029:9069   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9060:9061   */\n  0x01\n    /* \"#utility.yul\":9051:9061   */\n  swap1\n  pop\n    /* \"#utility.yul\":9062:9067   */\n  jump(tag_204)\n    /* \"#utility.yul\":9029:9069   */\ntag_205:\n    /* \"#utility.yul\":9088:9092   */\n  dup2\n    /* \"#utility.yul\":9078:9114   */\n  tag_206\n  jumpi\n    /* \"#utility.yul\":9105:9106   */\n  0x00\n    /* \"#utility.yul\":9096:9106   */\n  swap1\n  pop\n    /* \"#utility.yul\":9107:9112   */\n  jump(tag_204)\n    /* \"#utility.yul\":9078:9114   */\ntag_206:\n    /* \"#utility.yul\":9174:9178   */\n  dup2\n    /* \"#utility.yul\":9222:9223   */\n  0x01\n    /* \"#utility.yul\":9217:9244   */\n  dup2\n  eq\n  tag_208\n  jumpi\n    /* \"#utility.yul\":9258:9259   */\n  0x02\n    /* \"#utility.yul\":9253:9444   */\n  dup2\n  eq\n  tag_209\n  jumpi\n    /* \"#utility.yul\":9167:9444   */\n  jump(tag_207)\n    /* \"#utility.yul\":9217:9244   */\ntag_208:\n    /* \"#utility.yul\":9235:9236   */\n  0x01\n    /* \"#utility.yul\":9226:9236   */\n  swap2\n  pop\n    /* \"#utility.yul\":9237:9242   */\n  pop\n  jump(tag_204)\n    /* \"#utility.yul\":9253:9444   */\ntag_209:\n    /* \"#utility.yul\":9298:9301   */\n  0xff\n    /* \"#utility.yul\":9288:9296   */\n  dup5\n    /* \"#utility.yul\":9285:9302   */\n  gt\n    /* \"#utility.yul\":9282:9325   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":9305:9323   */\n  tag_211\n  tag_98\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9282:9325   */\ntag_210:\n    /* \"#utility.yul\":9354:9362   */\n  dup4\n    /* \"#utility.yul\":9351:9352   */\n  0x02\n    /* \"#utility.yul\":9347:9363   */\n  exp\n    /* \"#utility.yul\":9338:9363   */\n  swap2\n  pop\n    /* \"#utility.yul\":9389:9392   */\n  dup5\n    /* \"#utility.yul\":9382:9387   */\n  dup3\n    /* \"#utility.yul\":9379:9393   */\n  gt\n    /* \"#utility.yul\":9376:9416   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":9396:9414   */\n  tag_213\n  tag_98\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9376:9416   */\ntag_212:\n    /* \"#utility.yul\":9429:9434   */\n  pop\n  jump(tag_204)\n    /* \"#utility.yul\":9167:9444   */\ntag_207:\n  pop\n    /* \"#utility.yul\":9553:9555   */\n  0x20\n    /* \"#utility.yul\":9543:9551   */\n  dup4\n    /* \"#utility.yul\":9540:9556   */\n  lt\n    /* \"#utility.yul\":9534:9537   */\n  0x0133\n    /* \"#utility.yul\":9528:9532   */\n  dup4\n    /* \"#utility.yul\":9525:9538   */\n  lt\n    /* \"#utility.yul\":9521:9557   */\n  and\n    /* \"#utility.yul\":9503:9505   */\n  0x4e\n    /* \"#utility.yul\":9493:9501   */\n  dup5\n    /* \"#utility.yul\":9490:9506   */\n  lt\n    /* \"#utility.yul\":9485:9487   */\n  0x0b\n    /* \"#utility.yul\":9479:9483   */\n  dup5\n    /* \"#utility.yul\":9476:9488   */\n  lt\n    /* \"#utility.yul\":9472:9507   */\n  and\n    /* \"#utility.yul\":9456:9567   */\n  or\n    /* \"#utility.yul\":9453:9699   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":9609:9617   */\n  dup3\n    /* \"#utility.yul\":9603:9607   */\n  dup3\n    /* \"#utility.yul\":9599:9618   */\n  exp\n    /* \"#utility.yul\":9590:9618   */\n  swap1\n  pop\n    /* \"#utility.yul\":9644:9647   */\n  dup4\n    /* \"#utility.yul\":9637:9642   */\n  dup2\n    /* \"#utility.yul\":9634:9648   */\n  gt\n    /* \"#utility.yul\":9631:9671   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":9651:9669   */\n  tag_216\n  tag_98\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9631:9671   */\ntag_215:\n    /* \"#utility.yul\":9684:9689   */\n  jump(tag_204)\n    /* \"#utility.yul\":9453:9699   */\ntag_214:\n    /* \"#utility.yul\":9724:9766   */\n  tag_217\n    /* \"#utility.yul\":9762:9765   */\n  dup5\n    /* \"#utility.yul\":9752:9760   */\n  dup5\n    /* \"#utility.yul\":9746:9750   */\n  dup5\n    /* \"#utility.yul\":9743:9744   */\n  0x01\n    /* \"#utility.yul\":9724:9766   */\n  tag_100\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9709:9766   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9798:9802   */\n  dup2\n    /* \"#utility.yul\":9793:9796   */\n  dup5\n    /* \"#utility.yul\":9789:9803   */\n  div\n    /* \"#utility.yul\":9782:9787   */\n  dup2\n    /* \"#utility.yul\":9779:9804   */\n  gt\n    /* \"#utility.yul\":9776:9827   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":9807:9825   */\n  tag_219\n  tag_98\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9776:9827   */\ntag_218:\n    /* \"#utility.yul\":9856:9860   */\n  dup2\n    /* \"#utility.yul\":9849:9854   */\n  dup2\n    /* \"#utility.yul\":9845:9861   */\n  mul\n    /* \"#utility.yul\":9836:9861   */\n  swap1\n  pop\n    /* \"#utility.yul\":8794:9867   */\ntag_204:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9873:9959   */\ntag_102:\n    /* \"#utility.yul\":9908:9915   */\n  0x00\n    /* \"#utility.yul\":9948:9952   */\n  0xff\n    /* \"#utility.yul\":9941:9946   */\n  dup3\n    /* \"#utility.yul\":9937:9953   */\n  and\n    /* \"#utility.yul\":9926:9953   */\n  swap1\n  pop\n    /* \"#utility.yul\":9873:9959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9965:10246   */\ntag_20:\n    /* \"#utility.yul\":10023:10028   */\n  0x00\n    /* \"#utility.yul\":10047:10070   */\n  tag_222\n    /* \"#utility.yul\":10065:10069   */\n  dup3\n    /* \"#utility.yul\":10047:10070   */\n  tag_76\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10039:10070   */\n  swap2\n  pop\n    /* \"#utility.yul\":10091:10116   */\n  tag_223\n    /* \"#utility.yul\":10107:10115   */\n  dup4\n    /* \"#utility.yul\":10091:10116   */\n  tag_102\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10079:10116   */\n  swap3\n  pop\n    /* \"#utility.yul\":10135:10239   */\n  tag_224\n    /* \"#utility.yul\":10172:10238   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":10162:10170   */\n  dup5\n    /* \"#utility.yul\":10156:10160   */\n  dup5\n    /* \"#utility.yul\":10135:10239   */\n  tag_101\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10126:10239   */\n  swap1\n  pop\n    /* \"#utility.yul\":9965:10246   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10252:10432   */\ntag_103:\n    /* \"#utility.yul\":10300:10377   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10297:10298   */\n  0x00\n    /* \"#utility.yul\":10290:10378   */\n  mstore\n    /* \"#utility.yul\":10397:10401   */\n  0x12\n    /* \"#utility.yul\":10394:10395   */\n  0x04\n    /* \"#utility.yul\":10387:10402   */\n  mstore\n    /* \"#utility.yul\":10421:10425   */\n  0x24\n    /* \"#utility.yul\":10418:10419   */\n  0x00\n    /* \"#utility.yul\":10411:10426   */\n  revert\n    /* \"#utility.yul\":10438:10623   */\ntag_22:\n    /* \"#utility.yul\":10478:10479   */\n  0x00\n    /* \"#utility.yul\":10495:10515   */\n  tag_227\n    /* \"#utility.yul\":10513:10514   */\n  dup3\n    /* \"#utility.yul\":10495:10515   */\n  tag_76\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10490:10515   */\n  swap2\n  pop\n    /* \"#utility.yul\":10529:10549   */\n  tag_228\n    /* \"#utility.yul\":10547:10548   */\n  dup4\n    /* \"#utility.yul\":10529:10549   */\n  tag_76\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10524:10549   */\n  swap3\n  pop\n    /* \"#utility.yul\":10568:10569   */\n  dup3\n    /* \"#utility.yul\":10558:10593   */\n  tag_229\n  jumpi\n    /* \"#utility.yul\":10573:10591   */\n  tag_230\n  tag_103\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10558:10593   */\ntag_229:\n    /* \"#utility.yul\":10615:10616   */\n  dup3\n    /* \"#utility.yul\":10612:10613   */\n  dup3\n    /* \"#utility.yul\":10608:10617   */\n  div\n    /* \"#utility.yul\":10603:10617   */\n  swap1\n  pop\n    /* \"#utility.yul\":10438:10623   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10629:11039   */\ntag_24:\n    /* \"#utility.yul\":10669:10676   */\n  0x00\n    /* \"#utility.yul\":10692:10712   */\n  tag_232\n    /* \"#utility.yul\":10710:10711   */\n  dup3\n    /* \"#utility.yul\":10692:10712   */\n  tag_76\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10687:10712   */\n  swap2\n  pop\n    /* \"#utility.yul\":10726:10746   */\n  tag_233\n    /* \"#utility.yul\":10744:10745   */\n  dup4\n    /* \"#utility.yul\":10726:10746   */\n  tag_76\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":10721:10746   */\n  swap3\n  pop\n    /* \"#utility.yul\":10781:10782   */\n  dup3\n    /* \"#utility.yul\":10778:10779   */\n  dup3\n    /* \"#utility.yul\":10774:10783   */\n  mul\n    /* \"#utility.yul\":10803:10833   */\n  tag_234\n    /* \"#utility.yul\":10821:10832   */\n  dup2\n    /* \"#utility.yul\":10803:10833   */\n  tag_76\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10792:10833   */\n  swap2\n  pop\n    /* \"#utility.yul\":10982:10983   */\n  dup3\n    /* \"#utility.yul\":10973:10980   */\n  dup3\n    /* \"#utility.yul\":10969:10984   */\n  div\n    /* \"#utility.yul\":10966:10967   */\n  dup5\n    /* \"#utility.yul\":10963:10985   */\n  eq\n    /* \"#utility.yul\":10943:10944   */\n  dup4\n    /* \"#utility.yul\":10936:10945   */\n  iszero\n    /* \"#utility.yul\":10916:10999   */\n  or\n    /* \"#utility.yul\":10893:11032   */\n  tag_235\n  jumpi\n    /* \"#utility.yul\":11012:11030   */\n  tag_236\n  tag_98\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":10893:11032   */\ntag_235:\n    /* \"#utility.yul\":10677:11039   */\n  pop\n    /* \"#utility.yul\":10629:11039   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11045:11163   */\ntag_104:\n    /* \"#utility.yul\":11132:11156   */\n  tag_238\n    /* \"#utility.yul\":11150:11155   */\n  dup2\n    /* \"#utility.yul\":11132:11156   */\n  tag_73\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11127:11130   */\n  dup3\n    /* \"#utility.yul\":11120:11157   */\n  mstore\n    /* \"#utility.yul\":11045:11163   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11169:11391   */\ntag_38:\n    /* \"#utility.yul\":11262:11266   */\n  0x00\n    /* \"#utility.yul\":11300:11302   */\n  0x20\n    /* \"#utility.yul\":11289:11298   */\n  dup3\n    /* \"#utility.yul\":11285:11303   */\n  add\n    /* \"#utility.yul\":11277:11303   */\n  swap1\n  pop\n    /* \"#utility.yul\":11313:11384   */\n  tag_240\n    /* \"#utility.yul\":11381:11382   */\n  0x00\n    /* \"#utility.yul\":11370:11379   */\n  dup4\n    /* \"#utility.yul\":11366:11383   */\n  add\n    /* \"#utility.yul\":11357:11363   */\n  dup5\n    /* \"#utility.yul\":11313:11384   */\n  tag_104\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11169:11391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11397:11588   */\ntag_59:\n    /* \"#utility.yul\":11437:11440   */\n  0x00\n    /* \"#utility.yul\":11456:11476   */\n  tag_242\n    /* \"#utility.yul\":11474:11475   */\n  dup3\n    /* \"#utility.yul\":11456:11476   */\n  tag_76\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":11451:11476   */\n  swap2\n  pop\n    /* \"#utility.yul\":11490:11510   */\n  tag_243\n    /* \"#utility.yul\":11508:11509   */\n  dup4\n    /* \"#utility.yul\":11490:11510   */\n  tag_76\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":11485:11510   */\n  swap3\n  pop\n    /* \"#utility.yul\":11533:11534   */\n  dup3\n    /* \"#utility.yul\":11530:11531   */\n  dup3\n    /* \"#utility.yul\":11526:11535   */\n  add\n    /* \"#utility.yul\":11519:11535   */\n  swap1\n  pop\n    /* \"#utility.yul\":11554:11557   */\n  dup1\n    /* \"#utility.yul\":11551:11552   */\n  dup3\n    /* \"#utility.yul\":11548:11558   */\n  gt\n    /* \"#utility.yul\":11545:11581   */\n  iszero\n  tag_244\n  jumpi\n    /* \"#utility.yul\":11561:11579   */\n  tag_245\n  tag_98\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":11545:11581   */\ntag_244:\n    /* \"#utility.yul\":11397:11588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11594:11712   */\ntag_105:\n    /* \"#utility.yul\":11681:11705   */\n  tag_247\n    /* \"#utility.yul\":11699:11704   */\n  dup2\n    /* \"#utility.yul\":11681:11705   */\n  tag_76\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":11676:11679   */\n  dup3\n    /* \"#utility.yul\":11669:11706   */\n  mstore\n    /* \"#utility.yul\":11594:11712   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11718:12160   */\ntag_63:\n    /* \"#utility.yul\":11867:11871   */\n  0x00\n    /* \"#utility.yul\":11905:11907   */\n  0x60\n    /* \"#utility.yul\":11894:11903   */\n  dup3\n    /* \"#utility.yul\":11890:11908   */\n  add\n    /* \"#utility.yul\":11882:11908   */\n  swap1\n  pop\n    /* \"#utility.yul\":11918:11989   */\n  tag_249\n    /* \"#utility.yul\":11986:11987   */\n  0x00\n    /* \"#utility.yul\":11975:11984   */\n  dup4\n    /* \"#utility.yul\":11971:11988   */\n  add\n    /* \"#utility.yul\":11962:11968   */\n  dup7\n    /* \"#utility.yul\":11918:11989   */\n  tag_104\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":11999:12071   */\n  tag_250\n    /* \"#utility.yul\":12067:12069   */\n  0x20\n    /* \"#utility.yul\":12056:12065   */\n  dup4\n    /* \"#utility.yul\":12052:12070   */\n  add\n    /* \"#utility.yul\":12043:12049   */\n  dup6\n    /* \"#utility.yul\":11999:12071   */\n  tag_105\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12081:12153   */\n  tag_251\n    /* \"#utility.yul\":12149:12151   */\n  0x40\n    /* \"#utility.yul\":12138:12147   */\n  dup4\n    /* \"#utility.yul\":12134:12152   */\n  add\n    /* \"#utility.yul\":12125:12131   */\n  dup5\n    /* \"#utility.yul\":12081:12153   */\n  tag_105\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":11718:12160   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12166:12388   */\ntag_67:\n    /* \"#utility.yul\":12259:12263   */\n  0x00\n    /* \"#utility.yul\":12297:12299   */\n  0x20\n    /* \"#utility.yul\":12286:12295   */\n  dup3\n    /* \"#utility.yul\":12282:12300   */\n  add\n    /* \"#utility.yul\":12274:12300   */\n  swap1\n  pop\n    /* \"#utility.yul\":12310:12381   */\n  tag_253\n    /* \"#utility.yul\":12378:12379   */\n  0x00\n    /* \"#utility.yul\":12367:12376   */\n  dup4\n    /* \"#utility.yul\":12363:12380   */\n  add\n    /* \"#utility.yul\":12354:12360   */\n  dup5\n    /* \"#utility.yul\":12310:12381   */\n  tag_105\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":12166:12388   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BonDeFiToken.sol\":373:3445  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\ntag_26:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x55749baaca540012815eedf8aea70b0787b33390f36b1cc139ea0fe0d5fa1ba2\")\n  0x00\n  assignImmutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n  0x00\n  assignImmutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n  0x00\n  assignImmutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BonDeFiToken.sol\":373:3445  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xca19c11c\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe091a39b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xec8eba14\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf57d283e\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xca19c11c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xced0550f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd59624b4\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x992642e5\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa920260b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x904835c4\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x18160ddd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2a0acc6a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x10002dbd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1261:1534  function buyBond(uint256 amountTokens) public{... */\n    tag_6:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_10:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":3374:3443  function unpause() public onlyRole(ADMIN) {... */\n    tag_14:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_15:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_18:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":3303:3368  function pause() public onlyRole(ADMIN) {... */\n    tag_19:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":1742:2147  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_20:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_21:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":579:614  address public immutable stableCoin */\n    tag_23:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":663:696  uint256 public immutable unitSize */\n    tag_26:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":2485:3018  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_27:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":2153:2479  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_28:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":702:739  uint256 public immutable maturityDate */\n    tag_30:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_32:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":620:657  address public immutable interestCoin */\n    tag_33:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1540:1736  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_34:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_159\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_164\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1261:1534  function buyBond(uint256 amountTokens) public{... */\n    tag_60:\n        /* \"contracts/BonDeFiToken.sol\":1331:1341  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":1324:1355  IERC20(stableCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":1356:1366  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":1375:1379  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":1394:1402  unitSize */\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n        /* \"contracts/BonDeFiToken.sol\":1381:1393  amountTokens */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":1381:1402  amountTokens*unitSize */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/BonDeFiToken.sol\":1324:1403  IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/BonDeFiToken.sol\":1316:1434  require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize),\"Stable coin transfer failed\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/BonDeFiToken.sol\":1458:1462  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":1452:1472  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":1473:1483  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":1484:1496  amountTokens */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1452:1497  ERC20(this).transfer(msg.sender,amountTokens) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_190:\n        /* \"contracts/BonDeFiToken.sol\":1444:1527  require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/BonDeFiToken.sol\":1261:1534  function buyBond(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_77:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_202\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_207:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3374:3443  function unpause() public onlyRole(ADMIN) {... */\n    tag_91:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_216\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/BonDeFiToken.sol\":3426:3436  _unpause() */\n      tag_218\n        /* \"contracts/BonDeFiToken.sol\":3426:3434  _unpause */\n      tag_219\n        /* \"contracts/BonDeFiToken.sol\":3426:3436  _unpause() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/BonDeFiToken.sol\":3374:3443  function unpause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3303:3368  function pause() public onlyRole(ADMIN) {... */\n    tag_107:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_231\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/BonDeFiToken.sol\":3353:3361  _pause() */\n      tag_233\n        /* \"contracts/BonDeFiToken.sol\":3353:3359  _pause */\n      tag_234\n        /* \"contracts/BonDeFiToken.sol\":3353:3361  _pause() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/BonDeFiToken.sol\":3303:3368  function pause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1742:2147  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_111:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_236:\n        /* \"contracts/BonDeFiToken.sol\":1894:1901  amounts */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":1894:1908  amounts.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1871:1883  tokenHolders */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1871:1890  tokenHolders.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1871:1908  tokenHolders.length == amounts.length */\n      eq\n        /* \"contracts/BonDeFiToken.sol\":1863:1954  require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/BonDeFiToken.sol\":1969:1978  uint256 i */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":1964:2141  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n    tag_241:\n        /* \"contracts/BonDeFiToken.sol\":1988:2000  tokenHolders */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1988:2007  tokenHolders.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1984:1985  i */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":1984:2007  i < tokenHolders.length */\n      lt\n        /* \"contracts/BonDeFiToken.sol\":1964:2141  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"contracts/BonDeFiToken.sol\":2043:2055  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/BonDeFiToken.sol\":2036:2069  IERC20(interestCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":2070:2080  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2082:2094  tokenHolders */\n      dup7\n        /* \"contracts/BonDeFiToken.sol\":2095:2096  i */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":2082:2097  tokenHolders[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_244\n      jumpi\n      tag_245\n      tag_246\n      jump\t// in\n    tag_245:\n    tag_244:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BonDeFiToken.sol\":2099:2106  amounts */\n      dup7\n        /* \"contracts/BonDeFiToken.sol\":2107:2108  i */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":2099:2109  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_246\n      jump\t// in\n    tag_248:\n    tag_247:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BonDeFiToken.sol\":2036:2110  IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_249:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_252:\n        /* \"contracts/BonDeFiToken.sol\":2028:2130  require(IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/BonDeFiToken.sol\":2009:2012  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BonDeFiToken.sol\":1964:2141  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      jump(tag_241)\n    tag_242:\n      pop\n        /* \"contracts/BonDeFiToken.sol\":1742:2147  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_258\n      swap1\n      tag_164\n      jump\t// in\n    tag_258:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_164\n      jump\t// in\n    tag_259:\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_261\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_260)\n    tag_261:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_262:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_262\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":579:614  address public immutable stableCoin */\n    tag_120:\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":663:696  uint256 public immutable unitSize */\n    tag_131:\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n      dup2\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":2485:3018  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_135:\n        /* \"contracts/BonDeFiToken.sol\":2599:2611  maturityDate */\n      immutable(\"0x55749baaca540012815eedf8aea70b0787b33390f36b1cc139ea0fe0d5fa1ba2\")\n        /* \"contracts/BonDeFiToken.sol\":2580:2595  block.timestamp */\n      timestamp\n        /* \"contracts/BonDeFiToken.sol\":2580:2611  block.timestamp >= maturityDate */\n      lt\n      iszero\n        /* \"contracts/BonDeFiToken.sol\":2572:2639  require(block.timestamp >= maturityDate,\"Maturity not yet reached\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/BonDeFiToken.sol\":2699:2700  0 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2684:2696  amountTokens */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":2684:2700  amountTokens > 0 */\n      gt\n        /* \"contracts/BonDeFiToken.sol\":2676:2726  require(amountTokens > 0,\"Can't claim zero coins\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/BonDeFiToken.sol\":2750:2754  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2744:2768  ERC20(this).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":2769:2779  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2788:2792  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2794:2806  amountTokens */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":2744:2807  ERC20(this).transferFrom(msg.sender,address(this),amountTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_276:\n        /* \"contracts/BonDeFiToken.sol\":2736:2837  require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_193\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/BonDeFiToken.sol\":2862:2872  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":2855:2882  IERC20(stableCoin).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":2883:2893  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2907:2915  unitSize */\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n        /* \"contracts/BonDeFiToken.sol\":2894:2906  amountTokens */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":2894:2915  amountTokens*unitSize */\n      tag_279\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_279:\n        /* \"contracts/BonDeFiToken.sol\":2855:2916  IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_280:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_283\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_283:\n        /* \"contracts/BonDeFiToken.sol\":2847:2947  require(IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize),\"Stable coin transfer failed\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_185\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"contracts/BonDeFiToken.sol\":2978:3011  _burn(address(this),amountTokens) */\n      tag_286\n        /* \"contracts/BonDeFiToken.sol\":2992:2996  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2998:3010  amountTokens */\n      dup3\n        /* \"contracts/BonDeFiToken.sol\":2978:2983  _burn */\n      tag_223\n        /* \"contracts/BonDeFiToken.sol\":2978:3011  _burn(address(this),amountTokens) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/BonDeFiToken.sol\":2485:3018  function claimFaceValue(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":2153:2479  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_137:\n        /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_288\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/BonDeFiToken.sol\":2221:2248  uint256 amountInvestorCoins */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2258:2268  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":2251:2279  IERC20(stableCoin).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BonDeFiToken.sol\":2288:2292  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2251:2294  IERC20(stableCoin).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"contracts/BonDeFiToken.sol\":2221:2294  uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BonDeFiToken.sol\":2334:2335  0 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2312:2331  amountInvestorCoins */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":2312:2335  amountInvestorCoins > 0 */\n      gt\n        /* \"contracts/BonDeFiToken.sol\":2304:2367  require(amountInvestorCoins > 0,\"No investor funds available.\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/BonDeFiToken.sol\":2391:2395  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2385:2405  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":2406:2416  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2417:2436  amountInvestorCoins */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":2385:2437  ERC20(this).transfer(msg.sender,amountInvestorCoins) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_298:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_301:\n        /* \"contracts/BonDeFiToken.sol\":2377:2472  require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"contracts/BonDeFiToken.sol\":2211:2479  {... */\n      pop\n        /* \"contracts/BonDeFiToken.sol\":2153:2479  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_305\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_307\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_309\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_309:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":702:739  uint256 public immutable maturityDate */\n    tag_142:\n      immutable(\"0x55749baaca540012815eedf8aea70b0787b33390f36b1cc139ea0fe0d5fa1ba2\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_150:\n        /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n      dup2\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":620:657  address public immutable interestCoin */\n    tag_153:\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n      dup2\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1540:1736  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_157:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_312\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_312:\n        /* \"contracts/BonDeFiToken.sol\":1651:1663  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/BonDeFiToken.sol\":1644:1677  IERC20(interestCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":1678:1690  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/BonDeFiToken.sol\":1691:1702  tokenHolder */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":1703:1709  amount */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":1644:1710  IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_317:\n        /* \"contracts/BonDeFiToken.sol\":1636:1729  require(IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount),\"Transfer failed\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_255\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"contracts/BonDeFiToken.sol\":1540:1736  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_340\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_341\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_342\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_344\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_346\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_343)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_343:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_349\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_351\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_348)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_348:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_354\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_358\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_338\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_364\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_365\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_367\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_368\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_371\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_375\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3129:3294  function _update(address from, address to, uint256 value)... */\n    tag_338:\n        /* \"contracts/BonDeFiToken.sol\":3257:3287  super._update(from, to, value) */\n      tag_377\n        /* \"contracts/BonDeFiToken.sol\":3271:3275  from */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3277:3279  to */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3281:3286  value */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3257:3270  super._update */\n      tag_378\n        /* \"contracts/BonDeFiToken.sol\":3257:3287  super._update(from, to, value) */\n      jump\t// in\n    tag_377:\n        /* \"contracts/BonDeFiToken.sol\":3129:3294  function _update(address from, address to, uint256 value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_380\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap3\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_385\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_388\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_391\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_365\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_393\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_394\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_399)\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_403)\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_404\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_405:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_406:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_407:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_408:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_409:\n        /* \"#utility.yul\":561:584   */\n      tag_471\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_408\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_472:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_410:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_474\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_409\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_44:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_477\n      tag_406\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":833:952   */\n    tag_476:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_478\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_410\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_411:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_412:\n        /* \"#utility.yul\":1268:1289   */\n      tag_481\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_411\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_47:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_483\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_412\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_413:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_414:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_415:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_416:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_417:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_489\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_413\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2222:2293   */\n      tag_490\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_414\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_491\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_415\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":2392:2421   */\n      tag_492\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_416\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_51:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_494\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_417\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_418:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_419:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_497\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_418\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_420:\n        /* \"#utility.yul\":3060:3084   */\n      tag_499\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_419\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_500:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_421:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_502\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_420\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_422:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_423:\n        /* \"#utility.yul\":3416:3440   */\n      tag_505\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_422\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_506:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_424:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_508\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_423\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_54:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_511\n      tag_406\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":3709:3828   */\n    tag_510:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_512\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_421\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_513\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_424\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4425   */\n    tag_59:\n        /* \"#utility.yul\":4155:4161   */\n      0x00\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4192:4201   */\n      dup3\n        /* \"#utility.yul\":4183:4190   */\n      dup5\n        /* \"#utility.yul\":4179:4202   */\n      sub\n        /* \"#utility.yul\":4175:4207   */\n      slt\n        /* \"#utility.yul\":4172:4291   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":4210:4289   */\n      tag_516\n      tag_406\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4172:4291   */\n    tag_515:\n        /* \"#utility.yul\":4330:4331   */\n      0x00\n        /* \"#utility.yul\":4355:4408   */\n      tag_517\n        /* \"#utility.yul\":4400:4407   */\n      dup5\n        /* \"#utility.yul\":4391:4397   */\n      dup3\n        /* \"#utility.yul\":4380:4389   */\n      dup6\n        /* \"#utility.yul\":4376:4398   */\n      add\n        /* \"#utility.yul\":4355:4408   */\n      tag_424\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4345:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4301:4418   */\n      pop\n        /* \"#utility.yul\":4096:4425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4549   */\n    tag_425:\n        /* \"#utility.yul\":4518:4542   */\n      tag_519\n        /* \"#utility.yul\":4536:4541   */\n      dup2\n        /* \"#utility.yul\":4518:4542   */\n      tag_422\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4506:4543   */\n      mstore\n        /* \"#utility.yul\":4431:4549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4777   */\n    tag_64:\n        /* \"#utility.yul\":4648:4652   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4675:4684   */\n      dup3\n        /* \"#utility.yul\":4671:4689   */\n      add\n        /* \"#utility.yul\":4663:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:4770   */\n      tag_521\n        /* \"#utility.yul\":4767:4768   */\n      0x00\n        /* \"#utility.yul\":4756:4765   */\n      dup4\n        /* \"#utility.yul\":4752:4769   */\n      add\n        /* \"#utility.yul\":4743:4749   */\n      dup5\n        /* \"#utility.yul\":4699:4770   */\n      tag_425\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":4555:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_67:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_524\n      tag_406\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":4893:5012   */\n    tag_523:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_525\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_421\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_526\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_421\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_527\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_424\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_426:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_427:\n        /* \"#utility.yul\":5564:5588   */\n      tag_530\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_426\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_531:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_428:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_533\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_427\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_72:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_536\n      tag_406\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":5840:5959   */\n    tag_535:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_537\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_428\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_429:\n        /* \"#utility.yul\":6186:6210   */\n      tag_539\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_426\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_75:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_541\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_429\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_81:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_544\n      tag_406\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":6544:6663   */\n    tag_543:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_545\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_428\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_546\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_421\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_430:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_431:\n        /* \"#utility.yul\":7106:7128   */\n      tag_549\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_430\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_86:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_551\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_431\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7690   */\n    tag_100:\n        /* \"#utility.yul\":7420:7426   */\n      0x00\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"#utility.yul\":7457:7466   */\n      dup3\n        /* \"#utility.yul\":7448:7455   */\n      dup5\n        /* \"#utility.yul\":7444:7467   */\n      sub\n        /* \"#utility.yul\":7440:7472   */\n      slt\n        /* \"#utility.yul\":7437:7556   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":7475:7554   */\n      tag_554\n      tag_406\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":7437:7556   */\n    tag_553:\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7620:7673   */\n      tag_555\n        /* \"#utility.yul\":7665:7672   */\n      dup5\n        /* \"#utility.yul\":7656:7662   */\n      dup3\n        /* \"#utility.yul\":7645:7654   */\n      dup6\n        /* \"#utility.yul\":7641:7663   */\n      add\n        /* \"#utility.yul\":7620:7673   */\n      tag_421\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":7610:7673   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7683   */\n      pop\n        /* \"#utility.yul\":7361:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:7813   */\n    tag_432:\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7802:7803   */\n      dup1\n        /* \"#utility.yul\":7795:7807   */\n      revert\n        /* \"#utility.yul\":7819:7999   */\n    tag_433:\n        /* \"#utility.yul\":7867:7944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7857:7945   */\n      mstore\n        /* \"#utility.yul\":7964:7968   */\n      0x41\n        /* \"#utility.yul\":7961:7962   */\n      0x04\n        /* \"#utility.yul\":7954:7969   */\n      mstore\n        /* \"#utility.yul\":7988:7992   */\n      0x24\n        /* \"#utility.yul\":7985:7986   */\n      0x00\n        /* \"#utility.yul\":7978:7993   */\n      revert\n        /* \"#utility.yul\":8005:8286   */\n    tag_434:\n        /* \"#utility.yul\":8088:8115   */\n      tag_559\n        /* \"#utility.yul\":8110:8114   */\n      dup3\n        /* \"#utility.yul\":8088:8115   */\n      tag_416\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":8080:8086   */\n      dup2\n        /* \"#utility.yul\":8076:8116   */\n      add\n        /* \"#utility.yul\":8218:8224   */\n      dup2\n        /* \"#utility.yul\":8206:8216   */\n      dup2\n        /* \"#utility.yul\":8203:8225   */\n      lt\n        /* \"#utility.yul\":8182:8200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8180   */\n      dup3\n        /* \"#utility.yul\":8167:8201   */\n      gt\n        /* \"#utility.yul\":8164:8226   */\n      or\n        /* \"#utility.yul\":8161:8249   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":8229:8247   */\n      tag_561\n      tag_433\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":8161:8249   */\n    tag_560:\n        /* \"#utility.yul\":8269:8279   */\n      dup1\n        /* \"#utility.yul\":8265:8267   */\n      0x40\n        /* \"#utility.yul\":8258:8280   */\n      mstore\n        /* \"#utility.yul\":8048:8286   */\n      pop\n        /* \"#utility.yul\":8005:8286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8292:8421   */\n    tag_435:\n        /* \"#utility.yul\":8326:8332   */\n      0x00\n        /* \"#utility.yul\":8353:8373   */\n      tag_563\n      tag_405\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":8343:8373   */\n      swap1\n      pop\n        /* \"#utility.yul\":8382:8415   */\n      tag_564\n        /* \"#utility.yul\":8410:8414   */\n      dup3\n        /* \"#utility.yul\":8402:8408   */\n      dup3\n        /* \"#utility.yul\":8382:8415   */\n      tag_434\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":8292:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8427:8738   */\n    tag_436:\n        /* \"#utility.yul\":8504:8508   */\n      0x00\n        /* \"#utility.yul\":8594:8612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8586:8592   */\n      dup3\n        /* \"#utility.yul\":8583:8613   */\n      gt\n        /* \"#utility.yul\":8580:8636   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":8616:8634   */\n      tag_567\n      tag_433\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":8580:8636   */\n    tag_566:\n        /* \"#utility.yul\":8666:8670   */\n      0x20\n        /* \"#utility.yul\":8658:8664   */\n      dup3\n        /* \"#utility.yul\":8654:8671   */\n      mul\n        /* \"#utility.yul\":8646:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8726:8730   */\n      0x20\n        /* \"#utility.yul\":8720:8724   */\n      dup2\n        /* \"#utility.yul\":8716:8731   */\n      add\n        /* \"#utility.yul\":8708:8731   */\n      swap1\n      pop\n        /* \"#utility.yul\":8427:8738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8744:8861   */\n    tag_437:\n        /* \"#utility.yul\":8853:8854   */\n      0x00\n        /* \"#utility.yul\":8850:8851   */\n      dup1\n        /* \"#utility.yul\":8843:8855   */\n      revert\n        /* \"#utility.yul\":8884:9594   */\n    tag_438:\n        /* \"#utility.yul\":8980:8985   */\n      0x00\n        /* \"#utility.yul\":9005:9086   */\n      tag_570\n        /* \"#utility.yul\":9021:9085   */\n      tag_571\n        /* \"#utility.yul\":9078:9084   */\n      dup5\n        /* \"#utility.yul\":9021:9085   */\n      tag_436\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":9005:9086   */\n      tag_435\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":8996:9086   */\n      swap1\n      pop\n        /* \"#utility.yul\":9106:9111   */\n      dup1\n        /* \"#utility.yul\":9135:9141   */\n      dup4\n        /* \"#utility.yul\":9128:9133   */\n      dup3\n        /* \"#utility.yul\":9121:9142   */\n      mstore\n        /* \"#utility.yul\":9169:9173   */\n      0x20\n        /* \"#utility.yul\":9162:9167   */\n      dup3\n        /* \"#utility.yul\":9158:9174   */\n      add\n        /* \"#utility.yul\":9151:9174   */\n      swap1\n      pop\n        /* \"#utility.yul\":9222:9226   */\n      0x20\n        /* \"#utility.yul\":9214:9220   */\n      dup5\n        /* \"#utility.yul\":9210:9227   */\n      mul\n        /* \"#utility.yul\":9202:9208   */\n      dup4\n        /* \"#utility.yul\":9198:9228   */\n      add\n        /* \"#utility.yul\":9251:9254   */\n      dup6\n        /* \"#utility.yul\":9243:9249   */\n      dup2\n        /* \"#utility.yul\":9240:9255   */\n      gt\n        /* \"#utility.yul\":9237:9359   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":9270:9349   */\n      tag_573\n      tag_437\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":9237:9359   */\n    tag_572:\n        /* \"#utility.yul\":9385:9391   */\n      dup4\n        /* \"#utility.yul\":9368:9588   */\n    tag_574:\n        /* \"#utility.yul\":9402:9408   */\n      dup2\n        /* \"#utility.yul\":9397:9400   */\n      dup2\n        /* \"#utility.yul\":9394:9409   */\n      lt\n        /* \"#utility.yul\":9368:9588   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":9477:9480   */\n      dup1\n        /* \"#utility.yul\":9506:9543   */\n      tag_577\n        /* \"#utility.yul\":9539:9542   */\n      dup9\n        /* \"#utility.yul\":9527:9537   */\n      dup3\n        /* \"#utility.yul\":9506:9543   */\n      tag_421\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":9501:9504   */\n      dup5\n        /* \"#utility.yul\":9494:9544   */\n      mstore\n        /* \"#utility.yul\":9573:9577   */\n      0x20\n        /* \"#utility.yul\":9568:9571   */\n      dup5\n        /* \"#utility.yul\":9564:9578   */\n      add\n        /* \"#utility.yul\":9557:9578   */\n      swap4\n      pop\n        /* \"#utility.yul\":9444:9588   */\n      pop\n        /* \"#utility.yul\":9428:9432   */\n      0x20\n        /* \"#utility.yul\":9423:9426   */\n      dup2\n        /* \"#utility.yul\":9419:9433   */\n      add\n        /* \"#utility.yul\":9412:9433   */\n      swap1\n      pop\n        /* \"#utility.yul\":9368:9588   */\n      jump(tag_574)\n    tag_576:\n        /* \"#utility.yul\":9372:9393   */\n      pop\n        /* \"#utility.yul\":8986:9594   */\n      pop\n      pop\n        /* \"#utility.yul\":8884:9594   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9617:9987   */\n    tag_439:\n        /* \"#utility.yul\":9688:9693   */\n      0x00\n        /* \"#utility.yul\":9737:9740   */\n      dup3\n        /* \"#utility.yul\":9730:9734   */\n      0x1f\n        /* \"#utility.yul\":9722:9728   */\n      dup4\n        /* \"#utility.yul\":9718:9735   */\n      add\n        /* \"#utility.yul\":9714:9741   */\n      slt\n        /* \"#utility.yul\":9704:9826   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":9745:9824   */\n      tag_580\n      tag_432\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":9704:9826   */\n    tag_579:\n        /* \"#utility.yul\":9862:9868   */\n      dup2\n        /* \"#utility.yul\":9849:9869   */\n      calldataload\n        /* \"#utility.yul\":9887:9981   */\n      tag_581\n        /* \"#utility.yul\":9977:9980   */\n      dup5\n        /* \"#utility.yul\":9969:9975   */\n      dup3\n        /* \"#utility.yul\":9962:9966   */\n      0x20\n        /* \"#utility.yul\":9954:9960   */\n      dup7\n        /* \"#utility.yul\":9950:9967   */\n      add\n        /* \"#utility.yul\":9887:9981   */\n      tag_438\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9878:9981   */\n      swap2\n      pop\n        /* \"#utility.yul\":9694:9987   */\n      pop\n        /* \"#utility.yul\":9617:9987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9993:10304   */\n    tag_440:\n        /* \"#utility.yul\":10070:10074   */\n      0x00\n        /* \"#utility.yul\":10160:10178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10152:10158   */\n      dup3\n        /* \"#utility.yul\":10149:10179   */\n      gt\n        /* \"#utility.yul\":10146:10202   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":10182:10200   */\n      tag_584\n      tag_433\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":10146:10202   */\n    tag_583:\n        /* \"#utility.yul\":10232:10236   */\n      0x20\n        /* \"#utility.yul\":10224:10230   */\n      dup3\n        /* \"#utility.yul\":10220:10237   */\n      mul\n        /* \"#utility.yul\":10212:10237   */\n      swap1\n      pop\n        /* \"#utility.yul\":10292:10296   */\n      0x20\n        /* \"#utility.yul\":10286:10290   */\n      dup2\n        /* \"#utility.yul\":10282:10297   */\n      add\n        /* \"#utility.yul\":10274:10297   */\n      swap1\n      pop\n        /* \"#utility.yul\":9993:10304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10327:11037   */\n    tag_441:\n        /* \"#utility.yul\":10423:10428   */\n      0x00\n        /* \"#utility.yul\":10448:10529   */\n      tag_586\n        /* \"#utility.yul\":10464:10528   */\n      tag_587\n        /* \"#utility.yul\":10521:10527   */\n      dup5\n        /* \"#utility.yul\":10464:10528   */\n      tag_440\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":10448:10529   */\n      tag_435\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10439:10529   */\n      swap1\n      pop\n        /* \"#utility.yul\":10549:10554   */\n      dup1\n        /* \"#utility.yul\":10578:10584   */\n      dup4\n        /* \"#utility.yul\":10571:10576   */\n      dup3\n        /* \"#utility.yul\":10564:10585   */\n      mstore\n        /* \"#utility.yul\":10612:10616   */\n      0x20\n        /* \"#utility.yul\":10605:10610   */\n      dup3\n        /* \"#utility.yul\":10601:10617   */\n      add\n        /* \"#utility.yul\":10594:10617   */\n      swap1\n      pop\n        /* \"#utility.yul\":10665:10669   */\n      0x20\n        /* \"#utility.yul\":10657:10663   */\n      dup5\n        /* \"#utility.yul\":10653:10670   */\n      mul\n        /* \"#utility.yul\":10645:10651   */\n      dup4\n        /* \"#utility.yul\":10641:10671   */\n      add\n        /* \"#utility.yul\":10694:10697   */\n      dup6\n        /* \"#utility.yul\":10686:10692   */\n      dup2\n        /* \"#utility.yul\":10683:10698   */\n      gt\n        /* \"#utility.yul\":10680:10802   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":10713:10792   */\n      tag_589\n      tag_437\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":10680:10802   */\n    tag_588:\n        /* \"#utility.yul\":10828:10834   */\n      dup4\n        /* \"#utility.yul\":10811:11031   */\n    tag_590:\n        /* \"#utility.yul\":10845:10851   */\n      dup2\n        /* \"#utility.yul\":10840:10843   */\n      dup2\n        /* \"#utility.yul\":10837:10852   */\n      lt\n        /* \"#utility.yul\":10811:11031   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":10920:10923   */\n      dup1\n        /* \"#utility.yul\":10949:10986   */\n      tag_593\n        /* \"#utility.yul\":10982:10985   */\n      dup9\n        /* \"#utility.yul\":10970:10980   */\n      dup3\n        /* \"#utility.yul\":10949:10986   */\n      tag_424\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":10944:10947   */\n      dup5\n        /* \"#utility.yul\":10937:10987   */\n      mstore\n        /* \"#utility.yul\":11016:11020   */\n      0x20\n        /* \"#utility.yul\":11011:11014   */\n      dup5\n        /* \"#utility.yul\":11007:11021   */\n      add\n        /* \"#utility.yul\":11000:11021   */\n      swap4\n      pop\n        /* \"#utility.yul\":10887:11031   */\n      pop\n        /* \"#utility.yul\":10871:10875   */\n      0x20\n        /* \"#utility.yul\":10866:10869   */\n      dup2\n        /* \"#utility.yul\":10862:10876   */\n      add\n        /* \"#utility.yul\":10855:10876   */\n      swap1\n      pop\n        /* \"#utility.yul\":10811:11031   */\n      jump(tag_590)\n    tag_592:\n        /* \"#utility.yul\":10815:10836   */\n      pop\n        /* \"#utility.yul\":10429:11037   */\n      pop\n      pop\n        /* \"#utility.yul\":10327:11037   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11060:11430   */\n    tag_442:\n        /* \"#utility.yul\":11131:11136   */\n      0x00\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11173:11177   */\n      0x1f\n        /* \"#utility.yul\":11165:11171   */\n      dup4\n        /* \"#utility.yul\":11161:11178   */\n      add\n        /* \"#utility.yul\":11157:11184   */\n      slt\n        /* \"#utility.yul\":11147:11269   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":11188:11267   */\n      tag_596\n      tag_432\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":11147:11269   */\n    tag_595:\n        /* \"#utility.yul\":11305:11311   */\n      dup2\n        /* \"#utility.yul\":11292:11312   */\n      calldataload\n        /* \"#utility.yul\":11330:11424   */\n      tag_597\n        /* \"#utility.yul\":11420:11423   */\n      dup5\n        /* \"#utility.yul\":11412:11418   */\n      dup3\n        /* \"#utility.yul\":11405:11409   */\n      0x20\n        /* \"#utility.yul\":11397:11403   */\n      dup7\n        /* \"#utility.yul\":11393:11410   */\n      add\n        /* \"#utility.yul\":11330:11424   */\n      tag_441\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":11321:11424   */\n      swap2\n      pop\n        /* \"#utility.yul\":11137:11430   */\n      pop\n        /* \"#utility.yul\":11060:11430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11436:12330   */\n    tag_110:\n        /* \"#utility.yul\":11554:11560   */\n      0x00\n        /* \"#utility.yul\":11562:11568   */\n      dup1\n        /* \"#utility.yul\":11611:11613   */\n      0x40\n        /* \"#utility.yul\":11599:11608   */\n      dup4\n        /* \"#utility.yul\":11590:11597   */\n      dup6\n        /* \"#utility.yul\":11586:11609   */\n      sub\n        /* \"#utility.yul\":11582:11614   */\n      slt\n        /* \"#utility.yul\":11579:11698   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":11617:11696   */\n      tag_600\n      tag_406\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":11579:11698   */\n    tag_599:\n        /* \"#utility.yul\":11765:11766   */\n      0x00\n        /* \"#utility.yul\":11754:11763   */\n      dup4\n        /* \"#utility.yul\":11750:11767   */\n      add\n        /* \"#utility.yul\":11737:11768   */\n      calldataload\n        /* \"#utility.yul\":11795:11813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11787:11793   */\n      dup2\n        /* \"#utility.yul\":11784:11814   */\n      gt\n        /* \"#utility.yul\":11781:11898   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":11817:11896   */\n      tag_602\n      tag_407\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":11781:11898   */\n    tag_601:\n        /* \"#utility.yul\":11922:12000   */\n      tag_603\n        /* \"#utility.yul\":11992:11999   */\n      dup6\n        /* \"#utility.yul\":11983:11989   */\n      dup3\n        /* \"#utility.yul\":11972:11981   */\n      dup7\n        /* \"#utility.yul\":11968:11990   */\n      add\n        /* \"#utility.yul\":11922:12000   */\n      tag_439\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":11912:12000   */\n      swap3\n      pop\n        /* \"#utility.yul\":11708:12010   */\n      pop\n        /* \"#utility.yul\":12077:12079   */\n      0x20\n        /* \"#utility.yul\":12066:12075   */\n      dup4\n        /* \"#utility.yul\":12062:12080   */\n      add\n        /* \"#utility.yul\":12049:12081   */\n      calldataload\n        /* \"#utility.yul\":12108:12126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12100:12106   */\n      dup2\n        /* \"#utility.yul\":12097:12127   */\n      gt\n        /* \"#utility.yul\":12094:12211   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":12130:12209   */\n      tag_605\n      tag_407\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":12094:12211   */\n    tag_604:\n        /* \"#utility.yul\":12235:12313   */\n      tag_606\n        /* \"#utility.yul\":12305:12312   */\n      dup6\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12285:12294   */\n      dup7\n        /* \"#utility.yul\":12281:12303   */\n      add\n        /* \"#utility.yul\":12235:12313   */\n      tag_442\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":12225:12313   */\n      swap2\n      pop\n        /* \"#utility.yul\":12020:12323   */\n      pop\n        /* \"#utility.yul\":11436:12330   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12336:12454   */\n    tag_443:\n        /* \"#utility.yul\":12423:12447   */\n      tag_608\n        /* \"#utility.yul\":12441:12446   */\n      dup2\n        /* \"#utility.yul\":12423:12447   */\n      tag_419\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":12418:12421   */\n      dup3\n        /* \"#utility.yul\":12411:12448   */\n      mstore\n        /* \"#utility.yul\":12336:12454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12460:12682   */\n    tag_122:\n        /* \"#utility.yul\":12553:12557   */\n      0x00\n        /* \"#utility.yul\":12591:12593   */\n      0x20\n        /* \"#utility.yul\":12580:12589   */\n      dup3\n        /* \"#utility.yul\":12576:12594   */\n      add\n        /* \"#utility.yul\":12568:12594   */\n      swap1\n      pop\n        /* \"#utility.yul\":12604:12675   */\n      tag_610\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12661:12670   */\n      dup4\n        /* \"#utility.yul\":12657:12674   */\n      add\n        /* \"#utility.yul\":12648:12654   */\n      dup5\n        /* \"#utility.yul\":12604:12675   */\n      tag_443\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":12460:12682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12688:13162   */\n    tag_146:\n        /* \"#utility.yul\":12756:12762   */\n      0x00\n        /* \"#utility.yul\":12764:12770   */\n      dup1\n        /* \"#utility.yul\":12813:12815   */\n      0x40\n        /* \"#utility.yul\":12801:12810   */\n      dup4\n        /* \"#utility.yul\":12792:12799   */\n      dup6\n        /* \"#utility.yul\":12788:12811   */\n      sub\n        /* \"#utility.yul\":12784:12816   */\n      slt\n        /* \"#utility.yul\":12781:12900   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":12819:12898   */\n      tag_613\n      tag_406\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":12781:12900   */\n    tag_612:\n        /* \"#utility.yul\":12939:12940   */\n      0x00\n        /* \"#utility.yul\":12964:13017   */\n      tag_614\n        /* \"#utility.yul\":13009:13016   */\n      dup6\n        /* \"#utility.yul\":13000:13006   */\n      dup3\n        /* \"#utility.yul\":12989:12998   */\n      dup7\n        /* \"#utility.yul\":12985:13007   */\n      add\n        /* \"#utility.yul\":12964:13017   */\n      tag_421\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":12954:13017   */\n      swap3\n      pop\n        /* \"#utility.yul\":12910:13027   */\n      pop\n        /* \"#utility.yul\":13066:13068   */\n      0x20\n        /* \"#utility.yul\":13092:13145   */\n      tag_615\n        /* \"#utility.yul\":13137:13144   */\n      dup6\n        /* \"#utility.yul\":13128:13134   */\n      dup3\n        /* \"#utility.yul\":13117:13126   */\n      dup7\n        /* \"#utility.yul\":13113:13135   */\n      add\n        /* \"#utility.yul\":13092:13145   */\n      tag_421\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":13082:13145   */\n      swap2\n      pop\n        /* \"#utility.yul\":13037:13155   */\n      pop\n        /* \"#utility.yul\":12688:13162   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13168:13348   */\n    tag_444:\n        /* \"#utility.yul\":13216:13293   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13206:13294   */\n      mstore\n        /* \"#utility.yul\":13313:13317   */\n      0x22\n        /* \"#utility.yul\":13310:13311   */\n      0x04\n        /* \"#utility.yul\":13303:13318   */\n      mstore\n        /* \"#utility.yul\":13337:13341   */\n      0x24\n        /* \"#utility.yul\":13334:13335   */\n      0x00\n        /* \"#utility.yul\":13327:13342   */\n      revert\n        /* \"#utility.yul\":13354:13674   */\n    tag_164:\n        /* \"#utility.yul\":13398:13404   */\n      0x00\n        /* \"#utility.yul\":13435:13436   */\n      0x02\n        /* \"#utility.yul\":13429:13433   */\n      dup3\n        /* \"#utility.yul\":13425:13437   */\n      div\n        /* \"#utility.yul\":13415:13437   */\n      swap1\n      pop\n        /* \"#utility.yul\":13482:13483   */\n      0x01\n        /* \"#utility.yul\":13476:13480   */\n      dup3\n        /* \"#utility.yul\":13472:13484   */\n      and\n        /* \"#utility.yul\":13503:13521   */\n      dup1\n        /* \"#utility.yul\":13493:13574   */\n      tag_618\n      jumpi\n        /* \"#utility.yul\":13559:13563   */\n      0x7f\n        /* \"#utility.yul\":13551:13557   */\n      dup3\n        /* \"#utility.yul\":13547:13564   */\n      and\n        /* \"#utility.yul\":13537:13564   */\n      swap2\n      pop\n        /* \"#utility.yul\":13493:13574   */\n    tag_618:\n        /* \"#utility.yul\":13621:13623   */\n      0x20\n        /* \"#utility.yul\":13613:13619   */\n      dup3\n        /* \"#utility.yul\":13610:13624   */\n      lt\n        /* \"#utility.yul\":13590:13608   */\n      dup2\n        /* \"#utility.yul\":13587:13625   */\n      sub\n        /* \"#utility.yul\":13584:13668   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":13640:13658   */\n      tag_620\n      tag_444\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":13584:13668   */\n    tag_619:\n        /* \"#utility.yul\":13405:13674   */\n      pop\n        /* \"#utility.yul\":13354:13674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:13860   */\n    tag_445:\n        /* \"#utility.yul\":13728:13805   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13725:13726   */\n      0x00\n        /* \"#utility.yul\":13718:13806   */\n      mstore\n        /* \"#utility.yul\":13825:13829   */\n      0x11\n        /* \"#utility.yul\":13822:13823   */\n      0x04\n        /* \"#utility.yul\":13815:13830   */\n      mstore\n        /* \"#utility.yul\":13849:13853   */\n      0x24\n        /* \"#utility.yul\":13846:13847   */\n      0x00\n        /* \"#utility.yul\":13839:13854   */\n      revert\n        /* \"#utility.yul\":13866:14276   */\n    tag_176:\n        /* \"#utility.yul\":13906:13913   */\n      0x00\n        /* \"#utility.yul\":13929:13949   */\n      tag_623\n        /* \"#utility.yul\":13947:13948   */\n      dup3\n        /* \"#utility.yul\":13929:13949   */\n      tag_422\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":13924:13949   */\n      swap2\n      pop\n        /* \"#utility.yul\":13963:13983   */\n      tag_624\n        /* \"#utility.yul\":13981:13982   */\n      dup4\n        /* \"#utility.yul\":13963:13983   */\n      tag_422\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13958:13983   */\n      swap3\n      pop\n        /* \"#utility.yul\":14018:14019   */\n      dup3\n        /* \"#utility.yul\":14015:14016   */\n      dup3\n        /* \"#utility.yul\":14011:14020   */\n      mul\n        /* \"#utility.yul\":14040:14070   */\n      tag_625\n        /* \"#utility.yul\":14058:14069   */\n      dup2\n        /* \"#utility.yul\":14040:14070   */\n      tag_422\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":14029:14070   */\n      swap2\n      pop\n        /* \"#utility.yul\":14219:14220   */\n      dup3\n        /* \"#utility.yul\":14210:14217   */\n      dup3\n        /* \"#utility.yul\":14206:14221   */\n      div\n        /* \"#utility.yul\":14203:14204   */\n      dup5\n        /* \"#utility.yul\":14200:14222   */\n      eq\n        /* \"#utility.yul\":14180:14181   */\n      dup4\n        /* \"#utility.yul\":14173:14182   */\n      iszero\n        /* \"#utility.yul\":14153:14236   */\n      or\n        /* \"#utility.yul\":14130:14269   */\n      tag_626\n      jumpi\n        /* \"#utility.yul\":14249:14267   */\n      tag_627\n      tag_445\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":14130:14269   */\n    tag_626:\n        /* \"#utility.yul\":13914:14276   */\n      pop\n        /* \"#utility.yul\":13866:14276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14282:14724   */\n    tag_178:\n        /* \"#utility.yul\":14431:14435   */\n      0x00\n        /* \"#utility.yul\":14469:14471   */\n      0x60\n        /* \"#utility.yul\":14458:14467   */\n      dup3\n        /* \"#utility.yul\":14454:14472   */\n      add\n        /* \"#utility.yul\":14446:14472   */\n      swap1\n      pop\n        /* \"#utility.yul\":14482:14553   */\n      tag_629\n        /* \"#utility.yul\":14550:14551   */\n      0x00\n        /* \"#utility.yul\":14539:14548   */\n      dup4\n        /* \"#utility.yul\":14535:14552   */\n      add\n        /* \"#utility.yul\":14526:14532   */\n      dup7\n        /* \"#utility.yul\":14482:14553   */\n      tag_443\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":14563:14635   */\n      tag_630\n        /* \"#utility.yul\":14631:14633   */\n      0x20\n        /* \"#utility.yul\":14620:14629   */\n      dup4\n        /* \"#utility.yul\":14616:14634   */\n      add\n        /* \"#utility.yul\":14607:14613   */\n      dup6\n        /* \"#utility.yul\":14563:14635   */\n      tag_443\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14645:14717   */\n      tag_631\n        /* \"#utility.yul\":14713:14715   */\n      0x40\n        /* \"#utility.yul\":14702:14711   */\n      dup4\n        /* \"#utility.yul\":14698:14716   */\n      add\n        /* \"#utility.yul\":14689:14695   */\n      dup5\n        /* \"#utility.yul\":14645:14717   */\n      tag_425\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":14282:14724   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14730:14846   */\n    tag_446:\n        /* \"#utility.yul\":14800:14821   */\n      tag_633\n        /* \"#utility.yul\":14815:14820   */\n      dup2\n        /* \"#utility.yul\":14800:14821   */\n      tag_411\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":14793:14798   */\n      dup2\n        /* \"#utility.yul\":14790:14822   */\n      eq\n        /* \"#utility.yul\":14780:14840   */\n      tag_634\n      jumpi\n        /* \"#utility.yul\":14836:14837   */\n      0x00\n        /* \"#utility.yul\":14833:14834   */\n      dup1\n        /* \"#utility.yul\":14826:14838   */\n      revert\n        /* \"#utility.yul\":14780:14840   */\n    tag_634:\n        /* \"#utility.yul\":14730:14846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14852:14989   */\n    tag_447:\n        /* \"#utility.yul\":14906:14911   */\n      0x00\n        /* \"#utility.yul\":14937:14943   */\n      dup2\n        /* \"#utility.yul\":14931:14944   */\n      mload\n        /* \"#utility.yul\":14922:14944   */\n      swap1\n      pop\n        /* \"#utility.yul\":14953:14983   */\n      tag_636\n        /* \"#utility.yul\":14977:14982   */\n      dup2\n        /* \"#utility.yul\":14953:14983   */\n      tag_446\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":14852:14989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14995:15340   */\n    tag_182:\n        /* \"#utility.yul\":15062:15068   */\n      0x00\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15099:15108   */\n      dup3\n        /* \"#utility.yul\":15090:15097   */\n      dup5\n        /* \"#utility.yul\":15086:15109   */\n      sub\n        /* \"#utility.yul\":15082:15114   */\n      slt\n        /* \"#utility.yul\":15079:15198   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":15117:15196   */\n      tag_639\n      tag_406\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15079:15198   */\n    tag_638:\n        /* \"#utility.yul\":15237:15238   */\n      0x00\n        /* \"#utility.yul\":15262:15323   */\n      tag_640\n        /* \"#utility.yul\":15315:15322   */\n      dup5\n        /* \"#utility.yul\":15306:15312   */\n      dup3\n        /* \"#utility.yul\":15295:15304   */\n      dup6\n        /* \"#utility.yul\":15291:15313   */\n      add\n        /* \"#utility.yul\":15262:15323   */\n      tag_447\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":15252:15323   */\n      swap2\n      pop\n        /* \"#utility.yul\":15208:15333   */\n      pop\n        /* \"#utility.yul\":14995:15340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15346:15523   */\n    tag_448:\n        /* \"#utility.yul\":15486:15515   */\n      0x537461626c6520636f696e207472616e73666572206661696c65640000000000\n        /* \"#utility.yul\":15482:15483   */\n      0x00\n        /* \"#utility.yul\":15474:15480   */\n      dup3\n        /* \"#utility.yul\":15470:15484   */\n      add\n        /* \"#utility.yul\":15463:15516   */\n      mstore\n        /* \"#utility.yul\":15346:15523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15529:15895   */\n    tag_449:\n        /* \"#utility.yul\":15671:15674   */\n      0x00\n        /* \"#utility.yul\":15692:15759   */\n      tag_643\n        /* \"#utility.yul\":15756:15758   */\n      0x1b\n        /* \"#utility.yul\":15751:15754   */\n      dup4\n        /* \"#utility.yul\":15692:15759   */\n      tag_414\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":15685:15759   */\n      swap2\n      pop\n        /* \"#utility.yul\":15768:15861   */\n      tag_644\n        /* \"#utility.yul\":15857:15860   */\n      dup3\n        /* \"#utility.yul\":15768:15861   */\n      tag_448\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":15886:15888   */\n      0x20\n        /* \"#utility.yul\":15881:15884   */\n      dup3\n        /* \"#utility.yul\":15877:15889   */\n      add\n        /* \"#utility.yul\":15870:15889   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15901:16320   */\n    tag_185:\n        /* \"#utility.yul\":16067:16071   */\n      0x00\n        /* \"#utility.yul\":16105:16107   */\n      0x20\n        /* \"#utility.yul\":16094:16103   */\n      dup3\n        /* \"#utility.yul\":16090:16108   */\n      add\n        /* \"#utility.yul\":16082:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16154:16163   */\n      dup2\n        /* \"#utility.yul\":16148:16152   */\n      dup2\n        /* \"#utility.yul\":16144:16164   */\n      sub\n        /* \"#utility.yul\":16140:16141   */\n      0x00\n        /* \"#utility.yul\":16129:16138   */\n      dup4\n        /* \"#utility.yul\":16125:16142   */\n      add\n        /* \"#utility.yul\":16118:16165   */\n      mstore\n        /* \"#utility.yul\":16182:16313   */\n      tag_646\n        /* \"#utility.yul\":16308:16312   */\n      dup2\n        /* \"#utility.yul\":16182:16313   */\n      tag_449\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":16174:16313   */\n      swap1\n      pop\n        /* \"#utility.yul\":15901:16320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16326:16658   */\n    tag_187:\n        /* \"#utility.yul\":16447:16451   */\n      0x00\n        /* \"#utility.yul\":16485:16487   */\n      0x40\n        /* \"#utility.yul\":16474:16483   */\n      dup3\n        /* \"#utility.yul\":16470:16488   */\n      add\n        /* \"#utility.yul\":16462:16488   */\n      swap1\n      pop\n        /* \"#utility.yul\":16498:16569   */\n      tag_648\n        /* \"#utility.yul\":16566:16567   */\n      0x00\n        /* \"#utility.yul\":16555:16564   */\n      dup4\n        /* \"#utility.yul\":16551:16568   */\n      add\n        /* \"#utility.yul\":16542:16548   */\n      dup6\n        /* \"#utility.yul\":16498:16569   */\n      tag_443\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16579:16651   */\n      tag_649\n        /* \"#utility.yul\":16647:16649   */\n      0x20\n        /* \"#utility.yul\":16636:16645   */\n      dup4\n        /* \"#utility.yul\":16632:16650   */\n      add\n        /* \"#utility.yul\":16623:16629   */\n      dup5\n        /* \"#utility.yul\":16579:16651   */\n      tag_425\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":16326:16658   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16664:16840   */\n    tag_450:\n        /* \"#utility.yul\":16804:16832   */\n      0x426f6e6420746f6b656e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":16800:16801   */\n      0x00\n        /* \"#utility.yul\":16792:16798   */\n      dup3\n        /* \"#utility.yul\":16788:16802   */\n      add\n        /* \"#utility.yul\":16781:16833   */\n      mstore\n        /* \"#utility.yul\":16664:16840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16846:17212   */\n    tag_451:\n        /* \"#utility.yul\":16988:16991   */\n      0x00\n        /* \"#utility.yul\":17009:17076   */\n      tag_652\n        /* \"#utility.yul\":17073:17075   */\n      0x1a\n        /* \"#utility.yul\":17068:17071   */\n      dup4\n        /* \"#utility.yul\":17009:17076   */\n      tag_414\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":17002:17076   */\n      swap2\n      pop\n        /* \"#utility.yul\":17085:17178   */\n      tag_653\n        /* \"#utility.yul\":17174:17177   */\n      dup3\n        /* \"#utility.yul\":17085:17178   */\n      tag_450\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":17203:17205   */\n      0x20\n        /* \"#utility.yul\":17198:17201   */\n      dup3\n        /* \"#utility.yul\":17194:17206   */\n      add\n        /* \"#utility.yul\":17187:17206   */\n      swap1\n      pop\n        /* \"#utility.yul\":16846:17212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17218:17637   */\n    tag_193:\n        /* \"#utility.yul\":17384:17388   */\n      0x00\n        /* \"#utility.yul\":17422:17424   */\n      0x20\n        /* \"#utility.yul\":17411:17420   */\n      dup3\n        /* \"#utility.yul\":17407:17425   */\n      add\n        /* \"#utility.yul\":17399:17425   */\n      swap1\n      pop\n        /* \"#utility.yul\":17471:17480   */\n      dup2\n        /* \"#utility.yul\":17465:17469   */\n      dup2\n        /* \"#utility.yul\":17461:17481   */\n      sub\n        /* \"#utility.yul\":17457:17458   */\n      0x00\n        /* \"#utility.yul\":17446:17455   */\n      dup4\n        /* \"#utility.yul\":17442:17459   */\n      add\n        /* \"#utility.yul\":17435:17482   */\n      mstore\n        /* \"#utility.yul\":17499:17630   */\n      tag_655\n        /* \"#utility.yul\":17625:17629   */\n      dup2\n        /* \"#utility.yul\":17499:17630   */\n      tag_451\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":17491:17630   */\n      swap1\n      pop\n        /* \"#utility.yul\":17218:17637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17643:17871   */\n    tag_452:\n        /* \"#utility.yul\":17783:17817   */\n      0x546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468\n        /* \"#utility.yul\":17779:17780   */\n      0x00\n        /* \"#utility.yul\":17771:17777   */\n      dup3\n        /* \"#utility.yul\":17767:17781   */\n      add\n        /* \"#utility.yul\":17760:17818   */\n      mstore\n        /* \"#utility.yul\":17852:17863   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17847:17849   */\n      0x20\n        /* \"#utility.yul\":17839:17845   */\n      dup3\n        /* \"#utility.yul\":17835:17850   */\n      add\n        /* \"#utility.yul\":17828:17864   */\n      mstore\n        /* \"#utility.yul\":17643:17871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17877:18243   */\n    tag_453:\n        /* \"#utility.yul\":18019:18022   */\n      0x00\n        /* \"#utility.yul\":18040:18107   */\n      tag_658\n        /* \"#utility.yul\":18104:18106   */\n      0x29\n        /* \"#utility.yul\":18099:18102   */\n      dup4\n        /* \"#utility.yul\":18040:18107   */\n      tag_414\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":18033:18107   */\n      swap2\n      pop\n        /* \"#utility.yul\":18116:18209   */\n      tag_659\n        /* \"#utility.yul\":18205:18208   */\n      dup3\n        /* \"#utility.yul\":18116:18209   */\n      tag_452\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":18234:18236   */\n      0x40\n        /* \"#utility.yul\":18229:18232   */\n      dup3\n        /* \"#utility.yul\":18225:18237   */\n      add\n        /* \"#utility.yul\":18218:18237   */\n      swap1\n      pop\n        /* \"#utility.yul\":17877:18243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18249:18668   */\n    tag_240:\n        /* \"#utility.yul\":18415:18419   */\n      0x00\n        /* \"#utility.yul\":18453:18455   */\n      0x20\n        /* \"#utility.yul\":18442:18451   */\n      dup3\n        /* \"#utility.yul\":18438:18456   */\n      add\n        /* \"#utility.yul\":18430:18456   */\n      swap1\n      pop\n        /* \"#utility.yul\":18502:18511   */\n      dup2\n        /* \"#utility.yul\":18496:18500   */\n      dup2\n        /* \"#utility.yul\":18492:18512   */\n      sub\n        /* \"#utility.yul\":18488:18489   */\n      0x00\n        /* \"#utility.yul\":18477:18486   */\n      dup4\n        /* \"#utility.yul\":18473:18490   */\n      add\n        /* \"#utility.yul\":18466:18513   */\n      mstore\n        /* \"#utility.yul\":18530:18661   */\n      tag_661\n        /* \"#utility.yul\":18656:18660   */\n      dup2\n        /* \"#utility.yul\":18530:18661   */\n      tag_453\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":18522:18661   */\n      swap1\n      pop\n        /* \"#utility.yul\":18249:18668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18674:18854   */\n    tag_246:\n        /* \"#utility.yul\":18722:18799   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18719:18720   */\n      0x00\n        /* \"#utility.yul\":18712:18800   */\n      mstore\n        /* \"#utility.yul\":18819:18823   */\n      0x32\n        /* \"#utility.yul\":18816:18817   */\n      0x04\n        /* \"#utility.yul\":18809:18824   */\n      mstore\n        /* \"#utility.yul\":18843:18847   */\n      0x24\n        /* \"#utility.yul\":18840:18841   */\n      0x00\n        /* \"#utility.yul\":18833:18848   */\n      revert\n        /* \"#utility.yul\":18860:19025   */\n    tag_454:\n        /* \"#utility.yul\":19000:19017   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":18996:18997   */\n      0x00\n        /* \"#utility.yul\":18988:18994   */\n      dup3\n        /* \"#utility.yul\":18984:18998   */\n      add\n        /* \"#utility.yul\":18977:19018   */\n      mstore\n        /* \"#utility.yul\":18860:19025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19031:19397   */\n    tag_455:\n        /* \"#utility.yul\":19173:19176   */\n      0x00\n        /* \"#utility.yul\":19194:19261   */\n      tag_665\n        /* \"#utility.yul\":19258:19260   */\n      0x0f\n        /* \"#utility.yul\":19253:19256   */\n      dup4\n        /* \"#utility.yul\":19194:19261   */\n      tag_414\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":19187:19261   */\n      swap2\n      pop\n        /* \"#utility.yul\":19270:19363   */\n      tag_666\n        /* \"#utility.yul\":19359:19362   */\n      dup3\n        /* \"#utility.yul\":19270:19363   */\n      tag_454\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":19388:19390   */\n      0x20\n        /* \"#utility.yul\":19383:19386   */\n      dup3\n        /* \"#utility.yul\":19379:19391   */\n      add\n        /* \"#utility.yul\":19372:19391   */\n      swap1\n      pop\n        /* \"#utility.yul\":19031:19397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19403:19822   */\n    tag_255:\n        /* \"#utility.yul\":19569:19573   */\n      0x00\n        /* \"#utility.yul\":19607:19609   */\n      0x20\n        /* \"#utility.yul\":19596:19605   */\n      dup3\n        /* \"#utility.yul\":19592:19610   */\n      add\n        /* \"#utility.yul\":19584:19610   */\n      swap1\n      pop\n        /* \"#utility.yul\":19656:19665   */\n      dup2\n        /* \"#utility.yul\":19650:19654   */\n      dup2\n        /* \"#utility.yul\":19646:19666   */\n      sub\n        /* \"#utility.yul\":19642:19643   */\n      0x00\n        /* \"#utility.yul\":19631:19640   */\n      dup4\n        /* \"#utility.yul\":19627:19644   */\n      add\n        /* \"#utility.yul\":19620:19667   */\n      mstore\n        /* \"#utility.yul\":19684:19815   */\n      tag_668\n        /* \"#utility.yul\":19810:19814   */\n      dup2\n        /* \"#utility.yul\":19684:19815   */\n      tag_455\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19676:19815   */\n      swap1\n      pop\n        /* \"#utility.yul\":19403:19822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19828:20002   */\n    tag_456:\n        /* \"#utility.yul\":19968:19994   */\n      0x4d61747572697479206e6f742079657420726561636865640000000000000000\n        /* \"#utility.yul\":19964:19965   */\n      0x00\n        /* \"#utility.yul\":19956:19962   */\n      dup3\n        /* \"#utility.yul\":19952:19966   */\n      add\n        /* \"#utility.yul\":19945:19995   */\n      mstore\n        /* \"#utility.yul\":19828:20002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20008:20374   */\n    tag_457:\n        /* \"#utility.yul\":20150:20153   */\n      0x00\n        /* \"#utility.yul\":20171:20238   */\n      tag_671\n        /* \"#utility.yul\":20235:20237   */\n      0x18\n        /* \"#utility.yul\":20230:20233   */\n      dup4\n        /* \"#utility.yul\":20171:20238   */\n      tag_414\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20164:20238   */\n      swap2\n      pop\n        /* \"#utility.yul\":20247:20340   */\n      tag_672\n        /* \"#utility.yul\":20336:20339   */\n      dup3\n        /* \"#utility.yul\":20247:20340   */\n      tag_456\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":20365:20367   */\n      0x20\n        /* \"#utility.yul\":20360:20363   */\n      dup3\n        /* \"#utility.yul\":20356:20368   */\n      add\n        /* \"#utility.yul\":20349:20368   */\n      swap1\n      pop\n        /* \"#utility.yul\":20008:20374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20380:20799   */\n    tag_269:\n        /* \"#utility.yul\":20546:20550   */\n      0x00\n        /* \"#utility.yul\":20584:20586   */\n      0x20\n        /* \"#utility.yul\":20573:20582   */\n      dup3\n        /* \"#utility.yul\":20569:20587   */\n      add\n        /* \"#utility.yul\":20561:20587   */\n      swap1\n      pop\n        /* \"#utility.yul\":20633:20642   */\n      dup2\n        /* \"#utility.yul\":20627:20631   */\n      dup2\n        /* \"#utility.yul\":20623:20643   */\n      sub\n        /* \"#utility.yul\":20619:20620   */\n      0x00\n        /* \"#utility.yul\":20608:20617   */\n      dup4\n        /* \"#utility.yul\":20604:20621   */\n      add\n        /* \"#utility.yul\":20597:20644   */\n      mstore\n        /* \"#utility.yul\":20661:20792   */\n      tag_674\n        /* \"#utility.yul\":20787:20791   */\n      dup2\n        /* \"#utility.yul\":20661:20792   */\n      tag_457\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20653:20792   */\n      swap1\n      pop\n        /* \"#utility.yul\":20380:20799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20805:20977   */\n    tag_458:\n        /* \"#utility.yul\":20945:20969   */\n      0x43616e277420636c61696d207a65726f20636f696e7300000000000000000000\n        /* \"#utility.yul\":20941:20942   */\n      0x00\n        /* \"#utility.yul\":20933:20939   */\n      dup3\n        /* \"#utility.yul\":20929:20943   */\n      add\n        /* \"#utility.yul\":20922:20970   */\n      mstore\n        /* \"#utility.yul\":20805:20977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20983:21349   */\n    tag_459:\n        /* \"#utility.yul\":21125:21128   */\n      0x00\n        /* \"#utility.yul\":21146:21213   */\n      tag_677\n        /* \"#utility.yul\":21210:21212   */\n      0x16\n        /* \"#utility.yul\":21205:21208   */\n      dup4\n        /* \"#utility.yul\":21146:21213   */\n      tag_414\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":21139:21213   */\n      swap2\n      pop\n        /* \"#utility.yul\":21222:21315   */\n      tag_678\n        /* \"#utility.yul\":21311:21314   */\n      dup3\n        /* \"#utility.yul\":21222:21315   */\n      tag_458\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":21340:21342   */\n      0x20\n        /* \"#utility.yul\":21335:21338   */\n      dup3\n        /* \"#utility.yul\":21331:21343   */\n      add\n        /* \"#utility.yul\":21324:21343   */\n      swap1\n      pop\n        /* \"#utility.yul\":20983:21349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21355:21774   */\n    tag_272:\n        /* \"#utility.yul\":21521:21525   */\n      0x00\n        /* \"#utility.yul\":21559:21561   */\n      0x20\n        /* \"#utility.yul\":21548:21557   */\n      dup3\n        /* \"#utility.yul\":21544:21562   */\n      add\n        /* \"#utility.yul\":21536:21562   */\n      swap1\n      pop\n        /* \"#utility.yul\":21608:21617   */\n      dup2\n        /* \"#utility.yul\":21602:21606   */\n      dup2\n        /* \"#utility.yul\":21598:21618   */\n      sub\n        /* \"#utility.yul\":21594:21595   */\n      0x00\n        /* \"#utility.yul\":21583:21592   */\n      dup4\n        /* \"#utility.yul\":21579:21596   */\n      add\n        /* \"#utility.yul\":21572:21619   */\n      mstore\n        /* \"#utility.yul\":21636:21767   */\n      tag_680\n        /* \"#utility.yul\":21762:21766   */\n      dup2\n        /* \"#utility.yul\":21636:21767   */\n      tag_459\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":21628:21767   */\n      swap1\n      pop\n        /* \"#utility.yul\":21355:21774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21780:21923   */\n    tag_460:\n        /* \"#utility.yul\":21837:21842   */\n      0x00\n        /* \"#utility.yul\":21868:21874   */\n      dup2\n        /* \"#utility.yul\":21862:21875   */\n      mload\n        /* \"#utility.yul\":21853:21875   */\n      swap1\n      pop\n        /* \"#utility.yul\":21884:21917   */\n      tag_682\n        /* \"#utility.yul\":21911:21916   */\n      dup2\n        /* \"#utility.yul\":21884:21917   */\n      tag_423\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":21780:21923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21929:22280   */\n    tag_294:\n        /* \"#utility.yul\":21999:22005   */\n      0x00\n        /* \"#utility.yul\":22048:22050   */\n      0x20\n        /* \"#utility.yul\":22036:22045   */\n      dup3\n        /* \"#utility.yul\":22027:22034   */\n      dup5\n        /* \"#utility.yul\":22023:22046   */\n      sub\n        /* \"#utility.yul\":22019:22051   */\n      slt\n        /* \"#utility.yul\":22016:22135   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":22054:22133   */\n      tag_685\n      tag_406\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":22016:22135   */\n    tag_684:\n        /* \"#utility.yul\":22174:22175   */\n      0x00\n        /* \"#utility.yul\":22199:22263   */\n      tag_686\n        /* \"#utility.yul\":22255:22262   */\n      dup5\n        /* \"#utility.yul\":22246:22252   */\n      dup3\n        /* \"#utility.yul\":22235:22244   */\n      dup6\n        /* \"#utility.yul\":22231:22253   */\n      add\n        /* \"#utility.yul\":22199:22263   */\n      tag_460\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":22189:22263   */\n      swap2\n      pop\n        /* \"#utility.yul\":22145:22273   */\n      pop\n        /* \"#utility.yul\":21929:22280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22286:22464   */\n    tag_461:\n        /* \"#utility.yul\":22426:22456   */\n      0x4e6f20696e766573746f722066756e647320617661696c61626c652e00000000\n        /* \"#utility.yul\":22422:22423   */\n      0x00\n        /* \"#utility.yul\":22414:22420   */\n      dup3\n        /* \"#utility.yul\":22410:22424   */\n      add\n        /* \"#utility.yul\":22403:22457   */\n      mstore\n        /* \"#utility.yul\":22286:22464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22470:22836   */\n    tag_462:\n        /* \"#utility.yul\":22612:22615   */\n      0x00\n        /* \"#utility.yul\":22633:22700   */\n      tag_689\n        /* \"#utility.yul\":22697:22699   */\n      0x1c\n        /* \"#utility.yul\":22692:22695   */\n      dup4\n        /* \"#utility.yul\":22633:22700   */\n      tag_414\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":22626:22700   */\n      swap2\n      pop\n        /* \"#utility.yul\":22709:22802   */\n      tag_690\n        /* \"#utility.yul\":22798:22801   */\n      dup3\n        /* \"#utility.yul\":22709:22802   */\n      tag_461\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":22827:22829   */\n      0x20\n        /* \"#utility.yul\":22822:22825   */\n      dup3\n        /* \"#utility.yul\":22818:22830   */\n      add\n        /* \"#utility.yul\":22811:22830   */\n      swap1\n      pop\n        /* \"#utility.yul\":22470:22836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22842:23261   */\n    tag_297:\n        /* \"#utility.yul\":23008:23012   */\n      0x00\n        /* \"#utility.yul\":23046:23048   */\n      0x20\n        /* \"#utility.yul\":23035:23044   */\n      dup3\n        /* \"#utility.yul\":23031:23049   */\n      add\n        /* \"#utility.yul\":23023:23049   */\n      swap1\n      pop\n        /* \"#utility.yul\":23095:23104   */\n      dup2\n        /* \"#utility.yul\":23089:23093   */\n      dup2\n        /* \"#utility.yul\":23085:23105   */\n      sub\n        /* \"#utility.yul\":23081:23082   */\n      0x00\n        /* \"#utility.yul\":23070:23079   */\n      dup4\n        /* \"#utility.yul\":23066:23083   */\n      add\n        /* \"#utility.yul\":23059:23106   */\n      mstore\n        /* \"#utility.yul\":23123:23254   */\n      tag_692\n        /* \"#utility.yul\":23249:23253   */\n      dup2\n        /* \"#utility.yul\":23123:23254   */\n      tag_462\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":23115:23254   */\n      swap1\n      pop\n        /* \"#utility.yul\":22842:23261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23267:23448   */\n    tag_463:\n        /* \"#utility.yul\":23407:23440   */\n      0x4661696c656420746f207472616e7366657220737461626c6520636f696e7300\n        /* \"#utility.yul\":23403:23404   */\n      0x00\n        /* \"#utility.yul\":23395:23401   */\n      dup3\n        /* \"#utility.yul\":23391:23405   */\n      add\n        /* \"#utility.yul\":23384:23441   */\n      mstore\n        /* \"#utility.yul\":23267:23448   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23454:23820   */\n    tag_464:\n        /* \"#utility.yul\":23596:23599   */\n      0x00\n        /* \"#utility.yul\":23617:23684   */\n      tag_695\n        /* \"#utility.yul\":23681:23683   */\n      0x1f\n        /* \"#utility.yul\":23676:23679   */\n      dup4\n        /* \"#utility.yul\":23617:23684   */\n      tag_414\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":23610:23684   */\n      swap2\n      pop\n        /* \"#utility.yul\":23693:23786   */\n      tag_696\n        /* \"#utility.yul\":23782:23785   */\n      dup3\n        /* \"#utility.yul\":23693:23786   */\n      tag_463\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23811:23813   */\n      0x20\n        /* \"#utility.yul\":23806:23809   */\n      dup3\n        /* \"#utility.yul\":23802:23814   */\n      add\n        /* \"#utility.yul\":23795:23814   */\n      swap1\n      pop\n        /* \"#utility.yul\":23454:23820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23826:24245   */\n    tag_304:\n        /* \"#utility.yul\":23992:23996   */\n      0x00\n        /* \"#utility.yul\":24030:24032   */\n      0x20\n        /* \"#utility.yul\":24019:24028   */\n      dup3\n        /* \"#utility.yul\":24015:24033   */\n      add\n        /* \"#utility.yul\":24007:24033   */\n      swap1\n      pop\n        /* \"#utility.yul\":24079:24088   */\n      dup2\n        /* \"#utility.yul\":24073:24077   */\n      dup2\n        /* \"#utility.yul\":24069:24089   */\n      sub\n        /* \"#utility.yul\":24065:24066   */\n      0x00\n        /* \"#utility.yul\":24054:24063   */\n      dup4\n        /* \"#utility.yul\":24050:24067   */\n      add\n        /* \"#utility.yul\":24043:24090   */\n      mstore\n        /* \"#utility.yul\":24107:24238   */\n      tag_698\n        /* \"#utility.yul\":24233:24237   */\n      dup2\n        /* \"#utility.yul\":24107:24238   */\n      tag_464\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":24099:24238   */\n      swap1\n      pop\n        /* \"#utility.yul\":23826:24245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24251:24693   */\n    tag_330:\n        /* \"#utility.yul\":24400:24404   */\n      0x00\n        /* \"#utility.yul\":24438:24440   */\n      0x60\n        /* \"#utility.yul\":24427:24436   */\n      dup3\n        /* \"#utility.yul\":24423:24441   */\n      add\n        /* \"#utility.yul\":24415:24441   */\n      swap1\n      pop\n        /* \"#utility.yul\":24451:24522   */\n      tag_700\n        /* \"#utility.yul\":24519:24520   */\n      0x00\n        /* \"#utility.yul\":24508:24517   */\n      dup4\n        /* \"#utility.yul\":24504:24521   */\n      add\n        /* \"#utility.yul\":24495:24501   */\n      dup7\n        /* \"#utility.yul\":24451:24522   */\n      tag_443\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":24532:24604   */\n      tag_701\n        /* \"#utility.yul\":24600:24602   */\n      0x20\n        /* \"#utility.yul\":24589:24598   */\n      dup4\n        /* \"#utility.yul\":24585:24603   */\n      add\n        /* \"#utility.yul\":24576:24582   */\n      dup6\n        /* \"#utility.yul\":24532:24604   */\n      tag_425\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":24614:24686   */\n      tag_702\n        /* \"#utility.yul\":24682:24684   */\n      0x40\n        /* \"#utility.yul\":24671:24680   */\n      dup4\n        /* \"#utility.yul\":24667:24685   */\n      add\n        /* \"#utility.yul\":24658:24664   */\n      dup5\n        /* \"#utility.yul\":24614:24686   */\n      tag_425\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":24251:24693   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24699:25031   */\n    tag_383:\n        /* \"#utility.yul\":24820:24824   */\n      0x00\n        /* \"#utility.yul\":24858:24860   */\n      0x40\n        /* \"#utility.yul\":24847:24856   */\n      dup3\n        /* \"#utility.yul\":24843:24861   */\n      add\n        /* \"#utility.yul\":24835:24861   */\n      swap1\n      pop\n        /* \"#utility.yul\":24871:24942   */\n      tag_704\n        /* \"#utility.yul\":24939:24940   */\n      0x00\n        /* \"#utility.yul\":24928:24937   */\n      dup4\n        /* \"#utility.yul\":24924:24941   */\n      add\n        /* \"#utility.yul\":24915:24921   */\n      dup6\n        /* \"#utility.yul\":24871:24942   */\n      tag_443\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":24952:25024   */\n      tag_705\n        /* \"#utility.yul\":25020:25022   */\n      0x20\n        /* \"#utility.yul\":25009:25018   */\n      dup4\n        /* \"#utility.yul\":25005:25023   */\n      add\n        /* \"#utility.yul\":24996:25002   */\n      dup5\n        /* \"#utility.yul\":24952:25024   */\n      tag_429\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":24699:25031   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25037:25228   */\n    tag_398:\n        /* \"#utility.yul\":25077:25080   */\n      0x00\n        /* \"#utility.yul\":25096:25116   */\n      tag_707\n        /* \"#utility.yul\":25114:25115   */\n      dup3\n        /* \"#utility.yul\":25096:25116   */\n      tag_422\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":25091:25116   */\n      swap2\n      pop\n        /* \"#utility.yul\":25130:25150   */\n      tag_708\n        /* \"#utility.yul\":25148:25149   */\n      dup4\n        /* \"#utility.yul\":25130:25150   */\n      tag_422\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":25125:25150   */\n      swap3\n      pop\n        /* \"#utility.yul\":25173:25174   */\n      dup3\n        /* \"#utility.yul\":25170:25171   */\n      dup3\n        /* \"#utility.yul\":25166:25175   */\n      add\n        /* \"#utility.yul\":25159:25175   */\n      swap1\n      pop\n        /* \"#utility.yul\":25194:25197   */\n      dup1\n        /* \"#utility.yul\":25191:25192   */\n      dup3\n        /* \"#utility.yul\":25188:25198   */\n      gt\n        /* \"#utility.yul\":25185:25221   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":25201:25219   */\n      tag_710\n      tag_445\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":25185:25221   */\n    tag_709:\n        /* \"#utility.yul\":25037:25228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209cb8b3e465b50756657981eb2fe160c5e57eaa54e5b63ea9bfe6970e9cc95d7064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1278": {
									"entryPoint": null,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1491": {
									"entryPoint": null,
									"id": 1491,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 510,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 764,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1226": {
									"entryPoint": 997,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 1062,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 1026,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1720": {
									"entryPoint": 1004,
									"id": 1720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 1133,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 756,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 897,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_1303": {
									"entryPoint": 1670,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2818,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12391:13",
										"nodeType": "YulBlock",
										"src": "0:12391:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1384:1112:13",
													"nodeType": "YulBlock",
													"src": "1384:1112:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1431:83:13",
																"nodeType": "YulBlock",
																"src": "1431:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1433:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1433:77:13"
																			},
																			"nativeSrc": "1433:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1433:79:13"
																		},
																		"nativeSrc": "1433:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1405:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1405:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1414:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1401:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:13"
																		},
																		"nativeSrc": "1401:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1401:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1426:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1426:3:13",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1397:3:13"
																},
																"nativeSrc": "1397:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1397:33:13"
															},
															"nativeSrc": "1394:120:13",
															"nodeType": "YulIf",
															"src": "1394:120:13"
														},
														{
															"nativeSrc": "1524:128:13",
															"nodeType": "YulBlock",
															"src": "1524:128:13",
															"statements": [
																{
																	"nativeSrc": "1539:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1539:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1553:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1553:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1543:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1543:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1568:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1568:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1614:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1614:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1625:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1625:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1610:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1610:3:13"
																				},
																				"nativeSrc": "1610:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1610:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1634:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1578:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1578:31:13"
																		},
																		"nativeSrc": "1578:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1568:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1568:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1662:129:13",
															"nodeType": "YulBlock",
															"src": "1662:129:13",
															"statements": [
																{
																	"nativeSrc": "1677:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1677:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1691:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1691:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1681:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1681:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1707:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1707:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1753:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1753:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1764:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1749:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1749:3:13"
																				},
																				"nativeSrc": "1749:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1749:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1773:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1773:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1717:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1717:31:13"
																		},
																		"nativeSrc": "1717:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1707:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1707:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1801:129:13",
															"nodeType": "YulBlock",
															"src": "1801:129:13",
															"statements": [
																{
																	"nativeSrc": "1816:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1816:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1830:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1820:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1820:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1846:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1846:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1892:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1892:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1903:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1903:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1888:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1888:3:13"
																				},
																				"nativeSrc": "1888:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1888:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1912:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1912:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1856:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1856:31:13"
																		},
																		"nativeSrc": "1856:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1846:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1846:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1940:129:13",
															"nodeType": "YulBlock",
															"src": "1940:129:13",
															"statements": [
																{
																	"nativeSrc": "1955:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1955:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1969:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1969:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1959:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1959:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1985:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1985:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2031:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2031:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2042:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2042:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2027:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2027:3:13"
																				},
																				"nativeSrc": "2027:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2027:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2051:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2051:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1995:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1995:31:13"
																		},
																		"nativeSrc": "1995:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1985:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1985:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2079:130:13",
															"nodeType": "YulBlock",
															"src": "2079:130:13",
															"statements": [
																{
																	"nativeSrc": "2094:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2108:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2125:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2125:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2171:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2171:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2182:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2182:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:13"
																				},
																				"nativeSrc": "2167:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2135:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2135:31:13"
																		},
																		"nativeSrc": "2135:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2135:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2125:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2125:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2219:130:13",
															"nodeType": "YulBlock",
															"src": "2219:130:13",
															"statements": [
																{
																	"nativeSrc": "2234:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2234:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2248:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2248:3:13",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2238:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2238:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2265:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2265:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2311:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2311:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2322:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2322:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2307:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2307:3:13"
																				},
																				"nativeSrc": "2307:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2307:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2331:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2331:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2275:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2275:31:13"
																		},
																		"nativeSrc": "2275:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2265:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2265:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2359:130:13",
															"nodeType": "YulBlock",
															"src": "2359:130:13",
															"statements": [
																{
																	"nativeSrc": "2374:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2374:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2388:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2388:3:13",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2378:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2378:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2405:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2405:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2451:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2451:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2462:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2462:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2447:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2447:3:13"
																				},
																				"nativeSrc": "2447:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2447:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2471:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2415:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2415:31:13"
																		},
																		"nativeSrc": "2415:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2405:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2405:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:1291:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1306:9:13",
														"nodeType": "YulTypedName",
														"src": "1306:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1317:7:13",
														"nodeType": "YulTypedName",
														"src": "1317:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1329:6:13",
														"nodeType": "YulTypedName",
														"src": "1329:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1337:6:13",
														"nodeType": "YulTypedName",
														"src": "1337:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1345:6:13",
														"nodeType": "YulTypedName",
														"src": "1345:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1353:6:13",
														"nodeType": "YulTypedName",
														"src": "1353:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1361:6:13",
														"nodeType": "YulTypedName",
														"src": "1361:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1369:6:13",
														"nodeType": "YulTypedName",
														"src": "1369:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1377:6:13",
														"nodeType": "YulTypedName",
														"src": "1377:6:13",
														"type": ""
													}
												],
												"src": "1205:1291:13"
											},
											{
												"body": {
													"nativeSrc": "2561:40:13",
													"nodeType": "YulBlock",
													"src": "2561:40:13",
													"statements": [
														{
															"nativeSrc": "2572:22:13",
															"nodeType": "YulAssignment",
															"src": "2572:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2588:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2588:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2582:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2582:5:13"
																},
																"nativeSrc": "2582:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2582:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2502:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2544:5:13",
														"nodeType": "YulTypedName",
														"src": "2544:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2554:6:13",
														"nodeType": "YulTypedName",
														"src": "2554:6:13",
														"type": ""
													}
												],
												"src": "2502:99:13"
											},
											{
												"body": {
													"nativeSrc": "2635:152:13",
													"nodeType": "YulBlock",
													"src": "2635:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2652:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2652:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2655:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2655:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2645:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:13"
																},
																"nativeSrc": "2645:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2645:88:13"
															},
															"nativeSrc": "2645:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2645:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2749:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2749:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2752:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2742:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:13"
																},
																"nativeSrc": "2742:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2742:15:13"
															},
															"nativeSrc": "2742:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2742:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2773:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2773:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2776:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2776:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2766:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2766:6:13"
																},
																"nativeSrc": "2766:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2766:15:13"
															},
															"nativeSrc": "2766:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2766:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2607:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2607:180:13"
											},
											{
												"body": {
													"nativeSrc": "2821:152:13",
													"nodeType": "YulBlock",
													"src": "2821:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2838:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2841:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2841:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2831:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:13"
																},
																"nativeSrc": "2831:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2831:88:13"
															},
															"nativeSrc": "2831:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2831:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2935:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2935:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2938:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2938:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2928:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:13"
																},
																"nativeSrc": "2928:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2928:15:13"
															},
															"nativeSrc": "2928:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2928:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2959:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2959:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2962:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2962:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2952:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:13"
																},
																"nativeSrc": "2952:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2952:15:13"
															},
															"nativeSrc": "2952:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2952:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2793:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2793:180:13"
											},
											{
												"body": {
													"nativeSrc": "3030:269:13",
													"nodeType": "YulBlock",
													"src": "3030:269:13",
													"statements": [
														{
															"nativeSrc": "3040:22:13",
															"nodeType": "YulAssignment",
															"src": "3040:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3054:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3054:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3060:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3060:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3050:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:13"
																},
																"nativeSrc": "3050:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3050:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3040:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:13"
																}
															]
														},
														{
															"nativeSrc": "3071:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3071:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3101:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3101:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3097:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3097:3:13"
																},
																"nativeSrc": "3097:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3097:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3075:18:13",
																	"nodeType": "YulTypedName",
																	"src": "3075:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3148:51:13",
																"nodeType": "YulBlock",
																"src": "3148:51:13",
																"statements": [
																	{
																		"nativeSrc": "3162:27:13",
																		"nodeType": "YulAssignment",
																		"src": "3162:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3176:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3176:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3184:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3184:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3172:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3172:3:13"
																			},
																			"nativeSrc": "3172:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3172:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3162:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3162:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3128:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3128:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:13"
																},
																"nativeSrc": "3121:26:13",
																"nodeType": "YulFunctionCall",
																"src": "3121:26:13"
															},
															"nativeSrc": "3118:81:13",
															"nodeType": "YulIf",
															"src": "3118:81:13"
														},
														{
															"body": {
																"nativeSrc": "3251:42:13",
																"nodeType": "YulBlock",
																"src": "3251:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3265:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3265:16:13"
																			},
																			"nativeSrc": "3265:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:18:13"
																		},
																		"nativeSrc": "3265:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3215:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3215:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3238:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3246:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3235:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3235:2:13"
																		},
																		"nativeSrc": "3235:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3212:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3212:2:13"
																},
																"nativeSrc": "3212:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3212:38:13"
															},
															"nativeSrc": "3209:84:13",
															"nodeType": "YulIf",
															"src": "3209:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2979:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3014:4:13",
														"nodeType": "YulTypedName",
														"src": "3014:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3023:6:13",
														"nodeType": "YulTypedName",
														"src": "3023:6:13",
														"type": ""
													}
												],
												"src": "2979:320:13"
											},
											{
												"body": {
													"nativeSrc": "3359:87:13",
													"nodeType": "YulBlock",
													"src": "3359:87:13",
													"statements": [
														{
															"nativeSrc": "3369:11:13",
															"nodeType": "YulAssignment",
															"src": "3369:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "3377:3:13",
																"nodeType": "YulIdentifier",
																"src": "3377:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3369:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3369:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3397:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3400:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3400:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3390:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:13"
																},
																"nativeSrc": "3390:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3390:14:13"
															},
															"nativeSrc": "3390:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "3390:14:13"
														},
														{
															"nativeSrc": "3413:26:13",
															"nodeType": "YulAssignment",
															"src": "3413:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3431:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3431:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3434:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3421:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3421:9:13"
																},
																"nativeSrc": "3421:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3413:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3305:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3346:3:13",
														"nodeType": "YulTypedName",
														"src": "3346:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3354:4:13",
														"nodeType": "YulTypedName",
														"src": "3354:4:13",
														"type": ""
													}
												],
												"src": "3305:141:13"
											},
											{
												"body": {
													"nativeSrc": "3496:49:13",
													"nodeType": "YulBlock",
													"src": "3496:49:13",
													"statements": [
														{
															"nativeSrc": "3506:33:13",
															"nodeType": "YulAssignment",
															"src": "3506:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3524:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3524:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3531:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3531:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:13"
																		},
																		"nativeSrc": "3520:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3520:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:13"
																},
																"nativeSrc": "3516:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3516:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3452:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3479:5:13",
														"nodeType": "YulTypedName",
														"src": "3479:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3489:6:13",
														"nodeType": "YulTypedName",
														"src": "3489:6:13",
														"type": ""
													}
												],
												"src": "3452:93:13"
											},
											{
												"body": {
													"nativeSrc": "3604:54:13",
													"nodeType": "YulBlock",
													"src": "3604:54:13",
													"statements": [
														{
															"nativeSrc": "3614:37:13",
															"nodeType": "YulAssignment",
															"src": "3614:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3639:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3645:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3645:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3635:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:13"
																},
																"nativeSrc": "3635:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3635:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3614:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3614:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3551:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3579:4:13",
														"nodeType": "YulTypedName",
														"src": "3579:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3585:5:13",
														"nodeType": "YulTypedName",
														"src": "3585:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3595:8:13",
														"nodeType": "YulTypedName",
														"src": "3595:8:13",
														"type": ""
													}
												],
												"src": "3551:107:13"
											},
											{
												"body": {
													"nativeSrc": "3740:317:13",
													"nodeType": "YulBlock",
													"src": "3740:317:13",
													"statements": [
														{
															"nativeSrc": "3750:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3750:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3771:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "3771:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3767:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:13"
																},
																"nativeSrc": "3767:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3767:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3754:9:13",
																	"nodeType": "YulTypedName",
																	"src": "3754:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3794:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3794:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3825:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3825:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3836:66:13",
																		"nodeType": "YulLiteral",
																		"src": "3836:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3806:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3806:18:13"
																},
																"nativeSrc": "3806:97:13",
																"nodeType": "YulFunctionCall",
																"src": "3806:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3798:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3798:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3912:51:13",
															"nodeType": "YulAssignment",
															"src": "3912:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3943:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3943:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3954:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "3954:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3924:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3924:18:13"
																},
																"nativeSrc": "3924:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3924:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3912:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3912:8:13"
																}
															]
														},
														{
															"nativeSrc": "3972:30:13",
															"nodeType": "YulAssignment",
															"src": "3972:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3985:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3985:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3996:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3996:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3992:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:13"
																		},
																		"nativeSrc": "3992:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3981:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:13"
																},
																"nativeSrc": "3981:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3981:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3972:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3972:5:13"
																}
															]
														},
														{
															"nativeSrc": "4011:40:13",
															"nodeType": "YulAssignment",
															"src": "4011:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4024:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4024:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4035:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4035:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4045:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4045:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:13"
																		},
																		"nativeSrc": "4031:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4031:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4021:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4021:2:13"
																},
																"nativeSrc": "4021:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4021:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3664:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3701:5:13",
														"nodeType": "YulTypedName",
														"src": "3701:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3708:10:13",
														"nodeType": "YulTypedName",
														"src": "3708:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3720:8:13",
														"nodeType": "YulTypedName",
														"src": "3720:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3733:6:13",
														"nodeType": "YulTypedName",
														"src": "3733:6:13",
														"type": ""
													}
												],
												"src": "3664:393:13"
											},
											{
												"body": {
													"nativeSrc": "4095:28:13",
													"nodeType": "YulBlock",
													"src": "4095:28:13",
													"statements": [
														{
															"nativeSrc": "4105:12:13",
															"nodeType": "YulAssignment",
															"src": "4105:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4112:5:13",
																"nodeType": "YulIdentifier",
																"src": "4112:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4105:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4063:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4081:5:13",
														"nodeType": "YulTypedName",
														"src": "4081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4091:3:13",
														"nodeType": "YulTypedName",
														"src": "4091:3:13",
														"type": ""
													}
												],
												"src": "4063:60:13"
											},
											{
												"body": {
													"nativeSrc": "4189:82:13",
													"nodeType": "YulBlock",
													"src": "4189:82:13",
													"statements": [
														{
															"nativeSrc": "4199:66:13",
															"nodeType": "YulAssignment",
															"src": "4199:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4257:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4257:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4239:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4239:17:13"
																				},
																				"nativeSrc": "4239:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4239:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4230:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "4230:8:13"
																		},
																		"nativeSrc": "4230:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4230:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4212:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4212:17:13"
																},
																"nativeSrc": "4212:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4212:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4199:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4199:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4129:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4169:5:13",
														"nodeType": "YulTypedName",
														"src": "4169:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4179:9:13",
														"nodeType": "YulTypedName",
														"src": "4179:9:13",
														"type": ""
													}
												],
												"src": "4129:142:13"
											},
											{
												"body": {
													"nativeSrc": "4324:28:13",
													"nodeType": "YulBlock",
													"src": "4324:28:13",
													"statements": [
														{
															"nativeSrc": "4334:12:13",
															"nodeType": "YulAssignment",
															"src": "4334:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4341:5:13",
																"nodeType": "YulIdentifier",
																"src": "4341:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4334:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4277:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4310:5:13",
														"nodeType": "YulTypedName",
														"src": "4310:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4320:3:13",
														"nodeType": "YulTypedName",
														"src": "4320:3:13",
														"type": ""
													}
												],
												"src": "4277:75:13"
											},
											{
												"body": {
													"nativeSrc": "4434:193:13",
													"nodeType": "YulBlock",
													"src": "4434:193:13",
													"statements": [
														{
															"nativeSrc": "4444:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4444:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4499:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "4499:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4468:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4468:30:13"
																},
																"nativeSrc": "4468:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4468:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4448:16:13",
																	"nodeType": "YulTypedName",
																	"src": "4448:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4523:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4523:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4563:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4563:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4557:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4557:5:13"
																				},
																				"nativeSrc": "4557:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4557:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4570:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4602:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "4602:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4578:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "4578:23:13"
																				},
																				"nativeSrc": "4578:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4578:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4529:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "4529:27:13"
																		},
																		"nativeSrc": "4529:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4516:6:13"
																},
																"nativeSrc": "4516:105:13",
																"nodeType": "YulFunctionCall",
																"src": "4516:105:13"
															},
															"nativeSrc": "4516:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "4516:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4358:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4411:4:13",
														"nodeType": "YulTypedName",
														"src": "4411:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4417:6:13",
														"nodeType": "YulTypedName",
														"src": "4417:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4425:7:13",
														"nodeType": "YulTypedName",
														"src": "4425:7:13",
														"type": ""
													}
												],
												"src": "4358:269:13"
											},
											{
												"body": {
													"nativeSrc": "4682:24:13",
													"nodeType": "YulBlock",
													"src": "4682:24:13",
													"statements": [
														{
															"nativeSrc": "4692:8:13",
															"nodeType": "YulAssignment",
															"src": "4692:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4699:1:13",
																"nodeType": "YulLiteral",
																"src": "4699:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4692:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4692:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4633:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4678:3:13",
														"nodeType": "YulTypedName",
														"src": "4678:3:13",
														"type": ""
													}
												],
												"src": "4633:73:13"
											},
											{
												"body": {
													"nativeSrc": "4765:136:13",
													"nodeType": "YulBlock",
													"src": "4765:136:13",
													"statements": [
														{
															"nativeSrc": "4775:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4775:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4789:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4789:30:13"
																},
																"nativeSrc": "4789:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4789:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4779:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4779:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4874:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4874:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4880:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4880:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4888:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4830:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4830:43:13"
																},
																"nativeSrc": "4830:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4830:65:13"
															},
															"nativeSrc": "4830:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4830:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4712:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4751:4:13",
														"nodeType": "YulTypedName",
														"src": "4751:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4757:6:13",
														"nodeType": "YulTypedName",
														"src": "4757:6:13",
														"type": ""
													}
												],
												"src": "4712:189:13"
											},
											{
												"body": {
													"nativeSrc": "4957:136:13",
													"nodeType": "YulBlock",
													"src": "4957:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5024:63:13",
																"nodeType": "YulBlock",
																"src": "5024:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5068:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5068:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5075:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5075:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5038:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "5038:29:13"
																			},
																			"nativeSrc": "5038:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:39:13"
																		},
																		"nativeSrc": "5038:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4977:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4977:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4984:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4984:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4974:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4974:2:13"
																},
																"nativeSrc": "4974:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4974:14:13"
															},
															"nativeSrc": "4967:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4989:26:13",
																"nodeType": "YulBlock",
																"src": "4989:26:13",
																"statements": [
																	{
																		"nativeSrc": "4991:22:13",
																		"nodeType": "YulAssignment",
																		"src": "4991:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5004:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5004:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5011:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5011:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5000:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5000:3:13"
																			},
																			"nativeSrc": "5000:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5000:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4991:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4991:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4971:2:13",
																"nodeType": "YulBlock",
																"src": "4971:2:13",
																"statements": []
															},
															"src": "4967:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4907:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4945:5:13",
														"nodeType": "YulTypedName",
														"src": "4945:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4952:3:13",
														"nodeType": "YulTypedName",
														"src": "4952:3:13",
														"type": ""
													}
												],
												"src": "4907:186:13"
											},
											{
												"body": {
													"nativeSrc": "5178:464:13",
													"nodeType": "YulBlock",
													"src": "5178:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5204:431:13",
																"nodeType": "YulBlock",
																"src": "5204:431:13",
																"statements": [
																	{
																		"nativeSrc": "5218:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5218:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5266:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5266:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5234:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "5234:31:13"
																			},
																			"nativeSrc": "5234:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5234:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5222:8:13",
																				"nodeType": "YulTypedName",
																				"src": "5222:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5285:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5285:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5308:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "5308:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5336:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5336:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5318:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "5318:17:13"
																					},
																					"nativeSrc": "5318:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5318:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5304:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5304:3:13"
																			},
																			"nativeSrc": "5304:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5304:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5289:11:13",
																				"nodeType": "YulTypedName",
																				"src": "5289:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5505:27:13",
																			"nodeType": "YulBlock",
																			"src": "5505:27:13",
																			"statements": [
																				{
																					"nativeSrc": "5507:23:13",
																					"nodeType": "YulAssignment",
																					"src": "5507:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5522:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "5522:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5507:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "5507:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5489:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5489:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5501:2:13",
																					"nodeType": "YulLiteral",
																					"src": "5501:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5486:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "5486:2:13"
																			},
																			"nativeSrc": "5486:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5486:18:13"
																		},
																		"nativeSrc": "5483:49:13",
																		"nodeType": "YulIf",
																		"src": "5483:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5574:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "5574:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5591:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "5591:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5619:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5619:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5601:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "5601:17:13"
																							},
																							"nativeSrc": "5601:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5601:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5587:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5587:3:13"
																					},
																					"nativeSrc": "5587:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5587:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5545:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "5545:28:13"
																			},
																			"nativeSrc": "5545:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5545:80:13"
																		},
																		"nativeSrc": "5545:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5545:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5195:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5200:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5192:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5192:2:13"
																},
																"nativeSrc": "5192:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5192:11:13"
															},
															"nativeSrc": "5189:446:13",
															"nodeType": "YulIf",
															"src": "5189:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5099:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5154:5:13",
														"nodeType": "YulTypedName",
														"src": "5154:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5161:3:13",
														"nodeType": "YulTypedName",
														"src": "5161:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5166:10:13",
														"nodeType": "YulTypedName",
														"src": "5166:10:13",
														"type": ""
													}
												],
												"src": "5099:543:13"
											},
											{
												"body": {
													"nativeSrc": "5711:54:13",
													"nodeType": "YulBlock",
													"src": "5711:54:13",
													"statements": [
														{
															"nativeSrc": "5721:37:13",
															"nodeType": "YulAssignment",
															"src": "5721:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5746:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5746:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5752:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5752:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5742:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5742:3:13"
																},
																"nativeSrc": "5742:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5742:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5721:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5721:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5648:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5686:4:13",
														"nodeType": "YulTypedName",
														"src": "5686:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5692:5:13",
														"nodeType": "YulTypedName",
														"src": "5692:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5702:8:13",
														"nodeType": "YulTypedName",
														"src": "5702:8:13",
														"type": ""
													}
												],
												"src": "5648:117:13"
											},
											{
												"body": {
													"nativeSrc": "5822:118:13",
													"nodeType": "YulBlock",
													"src": "5822:118:13",
													"statements": [
														{
															"nativeSrc": "5832:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5832:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5881:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5881:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5884:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5884:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5877:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5877:3:13"
																				},
																				"nativeSrc": "5877:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5877:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5896:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5896:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5892:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5892:3:13"
																				},
																				"nativeSrc": "5892:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5892:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5848:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "5848:28:13"
																		},
																		"nativeSrc": "5848:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5844:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:13"
																},
																"nativeSrc": "5844:56:13",
																"nodeType": "YulFunctionCall",
																"src": "5844:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5836:4:13",
																	"nodeType": "YulTypedName",
																	"src": "5836:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5909:25:13",
															"nodeType": "YulAssignment",
															"src": "5909:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5923:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5923:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5929:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5919:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5919:3:13"
																},
																"nativeSrc": "5919:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5919:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5909:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5771:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5799:4:13",
														"nodeType": "YulTypedName",
														"src": "5799:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5805:5:13",
														"nodeType": "YulTypedName",
														"src": "5805:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5815:6:13",
														"nodeType": "YulTypedName",
														"src": "5815:6:13",
														"type": ""
													}
												],
												"src": "5771:169:13"
											},
											{
												"body": {
													"nativeSrc": "6026:214:13",
													"nodeType": "YulBlock",
													"src": "6026:214:13",
													"statements": [
														{
															"nativeSrc": "6159:37:13",
															"nodeType": "YulAssignment",
															"src": "6159:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6186:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6186:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6192:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6167:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6167:18:13"
																},
																"nativeSrc": "6167:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6167:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6159:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6159:4:13"
																}
															]
														},
														{
															"nativeSrc": "6205:29:13",
															"nodeType": "YulAssignment",
															"src": "6205:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6216:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6216:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6226:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6226:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6229:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6229:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6222:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:13"
																		},
																		"nativeSrc": "6222:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6222:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6213:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6213:2:13"
																},
																"nativeSrc": "6213:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6213:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6205:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6205:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5945:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6007:4:13",
														"nodeType": "YulTypedName",
														"src": "6007:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6013:3:13",
														"nodeType": "YulTypedName",
														"src": "6013:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6021:4:13",
														"nodeType": "YulTypedName",
														"src": "6021:4:13",
														"type": ""
													}
												],
												"src": "5945:295:13"
											},
											{
												"body": {
													"nativeSrc": "6337:1303:13",
													"nodeType": "YulBlock",
													"src": "6337:1303:13",
													"statements": [
														{
															"nativeSrc": "6348:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6348:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6395:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6395:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6362:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6362:32:13"
																},
																"nativeSrc": "6362:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6362:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6352:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6352:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6484:22:13",
																"nodeType": "YulBlock",
																"src": "6484:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6486:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6486:16:13"
																			},
																			"nativeSrc": "6486:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6486:18:13"
																		},
																		"nativeSrc": "6486:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6456:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6456:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6464:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6464:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6453:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6453:2:13"
																},
																"nativeSrc": "6453:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6453:30:13"
															},
															"nativeSrc": "6450:56:13",
															"nodeType": "YulIf",
															"src": "6450:56:13"
														},
														{
															"nativeSrc": "6516:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6516:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6562:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6562:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6556:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6556:5:13"
																		},
																		"nativeSrc": "6556:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6530:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "6530:25:13"
																},
																"nativeSrc": "6530:38:13",
																"nodeType": "YulFunctionCall",
																"src": "6530:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6520:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6520:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6661:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6661:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6667:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6675:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6675:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6615:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "6615:45:13"
																},
																"nativeSrc": "6615:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6615:67:13"
															},
															"nativeSrc": "6615:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6615:67:13"
														},
														{
															"nativeSrc": "6692:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6692:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6709:1:13",
																"nodeType": "YulLiteral",
																"src": "6709:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6696:9:13",
																	"nodeType": "YulTypedName",
																	"src": "6696:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6720:17:13",
															"nodeType": "YulAssignment",
															"src": "6720:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6733:4:13",
																"nodeType": "YulLiteral",
																"src": "6733:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6720:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6720:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6784:611:13",
																		"nodeType": "YulBlock",
																		"src": "6784:611:13",
																		"statements": [
																			{
																				"nativeSrc": "6798:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6817:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6817:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6829:4:13",
																									"nodeType": "YulLiteral",
																									"src": "6829:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6825:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6825:3:13"
																							},
																							"nativeSrc": "6825:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6825:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6813:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6813:3:13"
																					},
																					"nativeSrc": "6813:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6813:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6802:7:13",
																						"nodeType": "YulTypedName",
																						"src": "6802:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6849:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6849:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6895:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6895:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6863:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "6863:31:13"
																					},
																					"nativeSrc": "6863:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6863:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6853:6:13",
																						"nodeType": "YulTypedName",
																						"src": "6853:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6913:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6913:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6922:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6922:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6917:1:13",
																						"nodeType": "YulTypedName",
																						"src": "6917:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6981:163:13",
																					"nodeType": "YulBlock",
																					"src": "6981:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7006:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7006:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7024:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "7024:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7029:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "7029:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7020:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7020:3:13"
																												},
																												"nativeSrc": "7020:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7020:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7014:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "7014:5:13"
																										},
																										"nativeSrc": "7014:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7014:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6999:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6999:6:13"
																								},
																								"nativeSrc": "6999:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6999:42:13"
																							},
																							"nativeSrc": "6999:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6999:42:13"
																						},
																						{
																							"nativeSrc": "7058:24:13",
																							"nodeType": "YulAssignment",
																							"src": "7058:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7072:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7072:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7080:1:13",
																										"nodeType": "YulLiteral",
																										"src": "7080:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7068:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7068:3:13"
																								},
																								"nativeSrc": "7068:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7068:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7058:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7058:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7099:31:13",
																							"nodeType": "YulAssignment",
																							"src": "7099:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7116:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "7116:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7127:2:13",
																										"nodeType": "YulLiteral",
																										"src": "7127:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7112:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7112:3:13"
																								},
																								"nativeSrc": "7112:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7112:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7099:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "7099:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6947:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "6947:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6950:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6950:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6944:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6944:2:13"
																					},
																					"nativeSrc": "6944:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6944:14:13"
																				},
																				"nativeSrc": "6936:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6959:21:13",
																					"nodeType": "YulBlock",
																					"src": "6959:21:13",
																					"statements": [
																						{
																							"nativeSrc": "6961:17:13",
																							"nodeType": "YulAssignment",
																							"src": "6961:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6970:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "6970:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6973:4:13",
																										"nodeType": "YulLiteral",
																										"src": "6973:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6966:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6966:3:13"
																								},
																								"nativeSrc": "6966:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6966:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6961:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "6961:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6940:3:13",
																					"nodeType": "YulBlock",
																					"src": "6940:3:13",
																					"statements": []
																				},
																				"src": "6936:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "7180:156:13",
																					"nodeType": "YulBlock",
																					"src": "7180:156:13",
																					"statements": [
																						{
																							"nativeSrc": "7198:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7198:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7225:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7225:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7230:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7230:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7221:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7221:3:13"
																										},
																										"nativeSrc": "7221:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7221:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7215:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7215:5:13"
																								},
																								"nativeSrc": "7215:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7215:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7202:9:13",
																									"nodeType": "YulTypedName",
																									"src": "7202:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7265:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7265:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7292:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7292:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7307:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "7307:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7315:4:13",
																														"nodeType": "YulLiteral",
																														"src": "7315:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7303:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7303:3:13"
																												},
																												"nativeSrc": "7303:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7303:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7273:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "7273:18:13"
																										},
																										"nativeSrc": "7273:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7273:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7258:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7258:6:13"
																								},
																								"nativeSrc": "7258:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7258:64:13"
																							},
																							"nativeSrc": "7258:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7258:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7163:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7163:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7172:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7172:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7160:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7160:2:13"
																					},
																					"nativeSrc": "7160:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7160:19:13"
																				},
																				"nativeSrc": "7157:179:13",
																				"nodeType": "YulIf",
																				"src": "7157:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7356:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7356:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7370:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "7370:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7378:1:13",
																											"nodeType": "YulLiteral",
																											"src": "7378:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7366:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7366:3:13"
																									},
																									"nativeSrc": "7366:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7366:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7382:1:13",
																									"nodeType": "YulLiteral",
																									"src": "7382:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7362:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7362:3:13"
																							},
																							"nativeSrc": "7362:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7362:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7349:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7349:6:13"
																					},
																					"nativeSrc": "7349:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7349:36:13"
																				},
																				"nativeSrc": "7349:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7349:36:13"
																			}
																		]
																	},
																	"nativeSrc": "6777:618:13",
																	"nodeType": "YulCase",
																	"src": "6777:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6782:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6782:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7412:222:13",
																		"nodeType": "YulBlock",
																		"src": "7412:222:13",
																		"statements": [
																			{
																				"nativeSrc": "7426:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7426:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7439:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7439:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7430:5:13",
																						"nodeType": "YulTypedName",
																						"src": "7430:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7463:67:13",
																					"nodeType": "YulBlock",
																					"src": "7463:67:13",
																					"statements": [
																						{
																							"nativeSrc": "7481:35:13",
																							"nodeType": "YulAssignment",
																							"src": "7481:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7500:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7500:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7505:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7505:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7496:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7496:3:13"
																										},
																										"nativeSrc": "7496:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7496:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7490:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7490:5:13"
																								},
																								"nativeSrc": "7490:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7490:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7481:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7481:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7456:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7456:6:13"
																				},
																				"nativeSrc": "7453:77:13",
																				"nodeType": "YulIf",
																				"src": "7453:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7550:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7550:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7609:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7609:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7616:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7616:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7556:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "7556:52:13"
																							},
																							"nativeSrc": "7556:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7556:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7543:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7543:6:13"
																					},
																					"nativeSrc": "7543:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7543:81:13"
																				},
																				"nativeSrc": "7543:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7543:81:13"
																			}
																		]
																	},
																	"nativeSrc": "7404:230:13",
																	"nodeType": "YulCase",
																	"src": "7404:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6757:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6757:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6765:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6765:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6754:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6754:2:13"
																},
																"nativeSrc": "6754:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6754:14:13"
															},
															"nativeSrc": "6747:887:13",
															"nodeType": "YulSwitch",
															"src": "6747:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6245:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6326:4:13",
														"nodeType": "YulTypedName",
														"src": "6326:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6332:3:13",
														"nodeType": "YulTypedName",
														"src": "6332:3:13",
														"type": ""
													}
												],
												"src": "6245:1395:13"
											},
											{
												"body": {
													"nativeSrc": "7674:152:13",
													"nodeType": "YulBlock",
													"src": "7674:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7691:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7691:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7694:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7694:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7684:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7684:6:13"
																},
																"nativeSrc": "7684:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7684:88:13"
															},
															"nativeSrc": "7684:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7684:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7788:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7788:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7791:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7791:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7781:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7781:6:13"
																},
																"nativeSrc": "7781:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7781:15:13"
															},
															"nativeSrc": "7781:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7781:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7812:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7812:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7815:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7815:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7805:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:13"
																},
																"nativeSrc": "7805:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7805:15:13"
															},
															"nativeSrc": "7805:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7805:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7646:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7646:180:13"
											},
											{
												"body": {
													"nativeSrc": "7883:51:13",
													"nodeType": "YulBlock",
													"src": "7883:51:13",
													"statements": [
														{
															"nativeSrc": "7893:34:13",
															"nodeType": "YulAssignment",
															"src": "7893:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7918:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7918:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7921:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7921:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7914:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7914:3:13"
																},
																"nativeSrc": "7914:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7914:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7893:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7893:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7832:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7864:5:13",
														"nodeType": "YulTypedName",
														"src": "7864:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7874:8:13",
														"nodeType": "YulTypedName",
														"src": "7874:8:13",
														"type": ""
													}
												],
												"src": "7832:102:13"
											},
											{
												"body": {
													"nativeSrc": "8013:775:13",
													"nodeType": "YulBlock",
													"src": "8013:775:13",
													"statements": [
														{
															"nativeSrc": "8023:15:13",
															"nodeType": "YulAssignment",
															"src": "8023:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "8032:6:13",
																"nodeType": "YulIdentifier",
																"src": "8032:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8023:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8023:5:13"
																}
															]
														},
														{
															"nativeSrc": "8047:14:13",
															"nodeType": "YulAssignment",
															"src": "8047:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "8056:5:13",
																"nodeType": "YulIdentifier",
																"src": "8056:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8047:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8047:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8105:677:13",
																"nodeType": "YulBlock",
																"src": "8105:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8193:22:13",
																			"nodeType": "YulBlock",
																			"src": "8193:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8195:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "8195:16:13"
																						},
																						"nativeSrc": "8195:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8195:18:13"
																					},
																					"nativeSrc": "8195:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "8195:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8171:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8171:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8181:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8181:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8186:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8186:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8177:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:13"
																					},
																					"nativeSrc": "8177:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8177:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8168:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "8168:2:13"
																			},
																			"nativeSrc": "8168:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8168:24:13"
																		},
																		"nativeSrc": "8165:50:13",
																		"nodeType": "YulIf",
																		"src": "8165:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "8260:419:13",
																			"nodeType": "YulBlock",
																			"src": "8260:419:13",
																			"statements": [
																				{
																					"nativeSrc": "8640:25:13",
																					"nodeType": "YulAssignment",
																					"src": "8640:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8653:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "8653:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8660:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "8660:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8649:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8649:3:13"
																						},
																						"nativeSrc": "8649:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8649:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8640:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "8640:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8235:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "8235:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8245:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8245:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8231:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8231:3:13"
																			},
																			"nativeSrc": "8231:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8231:16:13"
																		},
																		"nativeSrc": "8228:451:13",
																		"nodeType": "YulIf",
																		"src": "8228:451:13"
																	},
																	{
																		"nativeSrc": "8692:23:13",
																		"nodeType": "YulAssignment",
																		"src": "8692:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8704:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8704:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8710:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8710:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8700:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8700:3:13"
																			},
																			"nativeSrc": "8700:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8700:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8692:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8692:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8728:44:13",
																		"nodeType": "YulAssignment",
																		"src": "8728:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8763:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "8763:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8740:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "8740:22:13"
																			},
																			"nativeSrc": "8740:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8740:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8728:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "8728:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8081:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8081:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8091:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8091:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8078:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8078:2:13"
																},
																"nativeSrc": "8078:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8078:15:13"
															},
															"nativeSrc": "8070:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8094:2:13",
																"nodeType": "YulBlock",
																"src": "8094:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8074:3:13",
																"nodeType": "YulBlock",
																"src": "8074:3:13",
																"statements": []
															},
															"src": "8070:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7940:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7968:6:13",
														"nodeType": "YulTypedName",
														"src": "7968:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7976:5:13",
														"nodeType": "YulTypedName",
														"src": "7976:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7983:8:13",
														"nodeType": "YulTypedName",
														"src": "7983:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7993:3:13",
														"nodeType": "YulTypedName",
														"src": "7993:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8001:5:13",
														"nodeType": "YulTypedName",
														"src": "8001:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8008:4:13",
														"nodeType": "YulTypedName",
														"src": "8008:4:13",
														"type": ""
													}
												],
												"src": "7940:848:13"
											},
											{
												"body": {
													"nativeSrc": "8854:1013:13",
													"nodeType": "YulBlock",
													"src": "8854:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9049:20:13",
																"nodeType": "YulBlock",
																"src": "9049:20:13",
																"statements": [
																	{
																		"nativeSrc": "9051:10:13",
																		"nodeType": "YulAssignment",
																		"src": "9051:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9060:1:13",
																			"nodeType": "YulLiteral",
																			"src": "9060:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9051:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9051:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9062:5:13",
																		"nodeType": "YulLeave",
																		"src": "9062:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9039:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9039:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9032:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:13"
																},
																"nativeSrc": "9032:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9032:16:13"
															},
															"nativeSrc": "9029:40:13",
															"nodeType": "YulIf",
															"src": "9029:40:13"
														},
														{
															"body": {
																"nativeSrc": "9094:20:13",
																"nodeType": "YulBlock",
																"src": "9094:20:13",
																"statements": [
																	{
																		"nativeSrc": "9096:10:13",
																		"nodeType": "YulAssignment",
																		"src": "9096:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9105:1:13",
																			"nodeType": "YulLiteral",
																			"src": "9105:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9096:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9107:5:13",
																		"nodeType": "YulLeave",
																		"src": "9107:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9088:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9088:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9081:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:13"
																},
																"nativeSrc": "9081:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9081:12:13"
															},
															"nativeSrc": "9078:36:13",
															"nodeType": "YulIf",
															"src": "9078:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9224:20:13",
																		"nodeType": "YulBlock",
																		"src": "9224:20:13",
																		"statements": [
																			{
																				"nativeSrc": "9226:10:13",
																				"nodeType": "YulAssignment",
																				"src": "9226:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9235:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9235:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9226:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9226:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9237:5:13",
																				"nodeType": "YulLeave",
																				"src": "9237:5:13"
																			}
																		]
																	},
																	"nativeSrc": "9217:27:13",
																	"nodeType": "YulCase",
																	"src": "9217:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9222:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9222:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9268:176:13",
																		"nodeType": "YulBlock",
																		"src": "9268:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9303:22:13",
																					"nodeType": "YulBlock",
																					"src": "9303:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9305:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "9305:16:13"
																								},
																								"nativeSrc": "9305:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9305:18:13"
																							},
																							"nativeSrc": "9305:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9305:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9288:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "9288:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9298:3:13",
																							"nodeType": "YulLiteral",
																							"src": "9298:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9285:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9285:2:13"
																					},
																					"nativeSrc": "9285:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9285:17:13"
																				},
																				"nativeSrc": "9282:43:13",
																				"nodeType": "YulIf",
																				"src": "9282:43:13"
																			},
																			{
																				"nativeSrc": "9338:25:13",
																				"nodeType": "YulAssignment",
																				"src": "9338:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9351:1:13",
																							"nodeType": "YulLiteral",
																							"src": "9351:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9354:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "9354:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9347:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "9347:3:13"
																					},
																					"nativeSrc": "9347:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9347:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9338:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9338:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9394:22:13",
																					"nodeType": "YulBlock",
																					"src": "9394:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9396:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "9396:16:13"
																								},
																								"nativeSrc": "9396:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9396:18:13"
																							},
																							"nativeSrc": "9396:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9396:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9382:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "9382:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9389:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9389:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9379:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9379:2:13"
																					},
																					"nativeSrc": "9379:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9379:14:13"
																				},
																				"nativeSrc": "9376:40:13",
																				"nodeType": "YulIf",
																				"src": "9376:40:13"
																			},
																			{
																				"nativeSrc": "9429:5:13",
																				"nodeType": "YulLeave",
																				"src": "9429:5:13"
																			}
																		]
																	},
																	"nativeSrc": "9253:191:13",
																	"nodeType": "YulCase",
																	"src": "9253:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9258:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9258:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9174:4:13",
																"nodeType": "YulIdentifier",
																"src": "9174:4:13"
															},
															"nativeSrc": "9167:277:13",
															"nodeType": "YulSwitch",
															"src": "9167:277:13"
														},
														{
															"body": {
																"nativeSrc": "9576:123:13",
																"nodeType": "YulBlock",
																"src": "9576:123:13",
																"statements": [
																	{
																		"nativeSrc": "9590:28:13",
																		"nodeType": "YulAssignment",
																		"src": "9590:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9603:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9603:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9609:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "9609:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9599:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9599:3:13"
																			},
																			"nativeSrc": "9599:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9599:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9590:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9590:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9649:22:13",
																			"nodeType": "YulBlock",
																			"src": "9649:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9651:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "9651:16:13"
																						},
																						"nativeSrc": "9651:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9651:18:13"
																					},
																					"nativeSrc": "9651:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "9651:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9637:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "9637:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9644:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9644:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9634:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9634:2:13"
																			},
																			"nativeSrc": "9634:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9634:14:13"
																		},
																		"nativeSrc": "9631:40:13",
																		"nodeType": "YulIf",
																		"src": "9631:40:13"
																	},
																	{
																		"nativeSrc": "9684:5:13",
																		"nodeType": "YulLeave",
																		"src": "9684:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9479:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9479:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9485:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9485:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9476:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9476:2:13"
																				},
																				"nativeSrc": "9476:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9476:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9493:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9493:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9503:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9503:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9490:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9490:2:13"
																				},
																				"nativeSrc": "9490:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9490:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9472:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9472:3:13"
																		},
																		"nativeSrc": "9472:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9472:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9528:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9528:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9534:3:13",
																						"nodeType": "YulLiteral",
																						"src": "9534:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9525:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9525:2:13"
																				},
																				"nativeSrc": "9525:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9525:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9543:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9543:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9553:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9553:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9540:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9540:2:13"
																				},
																				"nativeSrc": "9540:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9540:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9521:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9521:3:13"
																		},
																		"nativeSrc": "9521:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9521:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9456:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9456:2:13"
																},
																"nativeSrc": "9456:111:13",
																"nodeType": "YulFunctionCall",
																"src": "9456:111:13"
															},
															"nativeSrc": "9453:246:13",
															"nodeType": "YulIf",
															"src": "9453:246:13"
														},
														{
															"nativeSrc": "9709:57:13",
															"nodeType": "YulAssignment",
															"src": "9709:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9743:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9743:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9746:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9746:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9752:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9752:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9762:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9762:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9724:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9724:18:13"
																},
																"nativeSrc": "9724:42:13",
																"nodeType": "YulFunctionCall",
																"src": "9724:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9709:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9709:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "9716:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9716:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9805:22:13",
																"nodeType": "YulBlock",
																"src": "9805:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9807:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9807:16:13"
																			},
																			"nativeSrc": "9807:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9807:18:13"
																		},
																		"nativeSrc": "9807:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9807:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9782:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9782:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9793:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9793:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9798:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9798:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9789:3:13"
																		},
																		"nativeSrc": "9789:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9789:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9779:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9779:2:13"
																},
																"nativeSrc": "9779:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9779:25:13"
															},
															"nativeSrc": "9776:51:13",
															"nodeType": "YulIf",
															"src": "9776:51:13"
														},
														{
															"nativeSrc": "9836:25:13",
															"nodeType": "YulAssignment",
															"src": "9836:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9849:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9849:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9856:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9856:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9845:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9845:3:13"
																},
																"nativeSrc": "9845:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9845:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9836:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9836:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8794:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8824:4:13",
														"nodeType": "YulTypedName",
														"src": "8824:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8830:8:13",
														"nodeType": "YulTypedName",
														"src": "8830:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8840:3:13",
														"nodeType": "YulTypedName",
														"src": "8840:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8848:5:13",
														"nodeType": "YulTypedName",
														"src": "8848:5:13",
														"type": ""
													}
												],
												"src": "8794:1073:13"
											},
											{
												"body": {
													"nativeSrc": "9916:43:13",
													"nodeType": "YulBlock",
													"src": "9916:43:13",
													"statements": [
														{
															"nativeSrc": "9926:27:13",
															"nodeType": "YulAssignment",
															"src": "9926:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9941:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9941:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9948:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9948:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9937:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9937:3:13"
																},
																"nativeSrc": "9937:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9937:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9926:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9926:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9873:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9898:5:13",
														"nodeType": "YulTypedName",
														"src": "9898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9908:7:13",
														"nodeType": "YulTypedName",
														"src": "9908:7:13",
														"type": ""
													}
												],
												"src": "9873:86:13"
											},
											{
												"body": {
													"nativeSrc": "10029:217:13",
													"nodeType": "YulBlock",
													"src": "10029:217:13",
													"statements": [
														{
															"nativeSrc": "10039:31:13",
															"nodeType": "YulAssignment",
															"src": "10039:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10065:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10065:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10047:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10047:17:13"
																},
																"nativeSrc": "10047:23:13",
																"nodeType": "YulFunctionCall",
																"src": "10047:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10039:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10039:4:13"
																}
															]
														},
														{
															"nativeSrc": "10079:37:13",
															"nodeType": "YulAssignment",
															"src": "10079:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10107:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10107:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10091:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10091:15:13"
																},
																"nativeSrc": "10091:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10091:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10079:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "10079:8:13"
																}
															]
														},
														{
															"nativeSrc": "10126:113:13",
															"nodeType": "YulAssignment",
															"src": "10126:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10156:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10156:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10162:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10162:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10172:66:13",
																		"nodeType": "YulLiteral",
																		"src": "10172:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10135:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "10135:20:13"
																},
																"nativeSrc": "10135:104:13",
																"nodeType": "YulFunctionCall",
																"src": "10135:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10126:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10126:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9965:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10004:4:13",
														"nodeType": "YulTypedName",
														"src": "10004:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10010:8:13",
														"nodeType": "YulTypedName",
														"src": "10010:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10023:5:13",
														"nodeType": "YulTypedName",
														"src": "10023:5:13",
														"type": ""
													}
												],
												"src": "9965:281:13"
											},
											{
												"body": {
													"nativeSrc": "10280:152:13",
													"nodeType": "YulBlock",
													"src": "10280:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10297:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10297:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10300:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10300:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10290:6:13"
																},
																"nativeSrc": "10290:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10290:88:13"
															},
															"nativeSrc": "10290:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10290:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10394:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10394:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10397:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10397:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10387:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:13"
																},
																"nativeSrc": "10387:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10387:15:13"
															},
															"nativeSrc": "10387:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10387:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10418:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10418:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10421:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10421:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10411:6:13"
																},
																"nativeSrc": "10411:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10411:15:13"
															},
															"nativeSrc": "10411:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10411:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10252:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10252:180:13"
											},
											{
												"body": {
													"nativeSrc": "10480:143:13",
													"nodeType": "YulBlock",
													"src": "10480:143:13",
													"statements": [
														{
															"nativeSrc": "10490:25:13",
															"nodeType": "YulAssignment",
															"src": "10490:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10513:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10513:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10495:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10495:17:13"
																},
																"nativeSrc": "10495:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10495:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10490:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10490:1:13"
																}
															]
														},
														{
															"nativeSrc": "10524:25:13",
															"nodeType": "YulAssignment",
															"src": "10524:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10547:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10547:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10529:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10529:17:13"
																},
																"nativeSrc": "10529:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10529:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10524:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10524:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10571:22:13",
																"nodeType": "YulBlock",
																"src": "10571:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10573:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10573:16:13"
																			},
																			"nativeSrc": "10573:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10573:18:13"
																		},
																		"nativeSrc": "10573:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10573:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10568:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10568:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10561:6:13"
																},
																"nativeSrc": "10561:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10561:9:13"
															},
															"nativeSrc": "10558:35:13",
															"nodeType": "YulIf",
															"src": "10558:35:13"
														},
														{
															"nativeSrc": "10603:14:13",
															"nodeType": "YulAssignment",
															"src": "10603:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10612:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10612:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10615:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10615:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10608:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10608:3:13"
																},
																"nativeSrc": "10608:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10608:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10603:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10603:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10438:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10469:1:13",
														"nodeType": "YulTypedName",
														"src": "10469:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10472:1:13",
														"nodeType": "YulTypedName",
														"src": "10472:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10478:1:13",
														"nodeType": "YulTypedName",
														"src": "10478:1:13",
														"type": ""
													}
												],
												"src": "10438:185:13"
											},
											{
												"body": {
													"nativeSrc": "10677:362:13",
													"nodeType": "YulBlock",
													"src": "10677:362:13",
													"statements": [
														{
															"nativeSrc": "10687:25:13",
															"nodeType": "YulAssignment",
															"src": "10687:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10710:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10710:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10692:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10692:17:13"
																},
																"nativeSrc": "10692:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10692:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10687:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10687:1:13"
																}
															]
														},
														{
															"nativeSrc": "10721:25:13",
															"nodeType": "YulAssignment",
															"src": "10721:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10744:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10744:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10726:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10726:17:13"
																},
																"nativeSrc": "10726:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10726:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10721:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10721:1:13"
																}
															]
														},
														{
															"nativeSrc": "10755:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10755:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10778:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10778:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10781:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10781:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10774:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10774:3:13"
																},
																"nativeSrc": "10774:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10774:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10759:11:13",
																	"nodeType": "YulTypedName",
																	"src": "10759:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10792:41:13",
															"nodeType": "YulAssignment",
															"src": "10792:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10821:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "10821:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10803:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10803:17:13"
																},
																"nativeSrc": "10803:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10803:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10792:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10792:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11010:22:13",
																"nodeType": "YulBlock",
																"src": "11010:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11012:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11012:16:13"
																			},
																			"nativeSrc": "11012:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11012:18:13"
																		},
																		"nativeSrc": "11012:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11012:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10943:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10943:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10936:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "10936:6:13"
																				},
																				"nativeSrc": "10936:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10936:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10966:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10966:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10973:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "10973:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10982:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "10982:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10969:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10969:3:13"
																						},
																						"nativeSrc": "10969:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "10969:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10963:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10963:2:13"
																				},
																				"nativeSrc": "10963:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10963:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10916:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10916:2:13"
																		},
																		"nativeSrc": "10916:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10916:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10896:6:13"
																},
																"nativeSrc": "10896:113:13",
																"nodeType": "YulFunctionCall",
																"src": "10896:113:13"
															},
															"nativeSrc": "10893:139:13",
															"nodeType": "YulIf",
															"src": "10893:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10629:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10660:1:13",
														"nodeType": "YulTypedName",
														"src": "10660:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10663:1:13",
														"nodeType": "YulTypedName",
														"src": "10663:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10669:7:13",
														"nodeType": "YulTypedName",
														"src": "10669:7:13",
														"type": ""
													}
												],
												"src": "10629:410:13"
											},
											{
												"body": {
													"nativeSrc": "11110:53:13",
													"nodeType": "YulBlock",
													"src": "11110:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11127:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11127:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11150:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11150:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11132:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "11132:17:13"
																		},
																		"nativeSrc": "11132:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11132:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11120:6:13"
																},
																"nativeSrc": "11120:37:13",
																"nodeType": "YulFunctionCall",
																"src": "11120:37:13"
															},
															"nativeSrc": "11120:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "11120:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11045:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11098:5:13",
														"nodeType": "YulTypedName",
														"src": "11098:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11105:3:13",
														"nodeType": "YulTypedName",
														"src": "11105:3:13",
														"type": ""
													}
												],
												"src": "11045:118:13"
											},
											{
												"body": {
													"nativeSrc": "11267:124:13",
													"nodeType": "YulBlock",
													"src": "11267:124:13",
													"statements": [
														{
															"nativeSrc": "11277:26:13",
															"nodeType": "YulAssignment",
															"src": "11277:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11289:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11289:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11285:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11285:3:13"
																},
																"nativeSrc": "11285:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11285:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11277:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11277:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11357:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11357:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11370:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11370:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11381:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11381:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11366:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11366:3:13"
																		},
																		"nativeSrc": "11366:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11366:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11313:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11313:43:13"
																},
																"nativeSrc": "11313:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11313:71:13"
															},
															"nativeSrc": "11313:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11313:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11169:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11239:9:13",
														"nodeType": "YulTypedName",
														"src": "11239:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11251:6:13",
														"nodeType": "YulTypedName",
														"src": "11251:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11262:4:13",
														"nodeType": "YulTypedName",
														"src": "11262:4:13",
														"type": ""
													}
												],
												"src": "11169:222:13"
											},
											{
												"body": {
													"nativeSrc": "11441:147:13",
													"nodeType": "YulBlock",
													"src": "11441:147:13",
													"statements": [
														{
															"nativeSrc": "11451:25:13",
															"nodeType": "YulAssignment",
															"src": "11451:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11474:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11474:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11456:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11456:17:13"
																},
																"nativeSrc": "11456:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11456:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11451:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11451:1:13"
																}
															]
														},
														{
															"nativeSrc": "11485:25:13",
															"nodeType": "YulAssignment",
															"src": "11485:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11508:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11508:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11490:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11490:17:13"
																},
																"nativeSrc": "11490:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11490:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11485:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11485:1:13"
																}
															]
														},
														{
															"nativeSrc": "11519:16:13",
															"nodeType": "YulAssignment",
															"src": "11519:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11530:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11530:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11533:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11533:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11526:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11526:3:13"
																},
																"nativeSrc": "11526:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11526:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11519:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11559:22:13",
																"nodeType": "YulBlock",
																"src": "11559:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11561:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11561:16:13"
																			},
																			"nativeSrc": "11561:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11561:18:13"
																		},
																		"nativeSrc": "11561:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11561:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11551:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11551:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11554:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11554:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11548:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11548:2:13"
																},
																"nativeSrc": "11548:10:13",
																"nodeType": "YulFunctionCall",
																"src": "11548:10:13"
															},
															"nativeSrc": "11545:36:13",
															"nodeType": "YulIf",
															"src": "11545:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11397:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11428:1:13",
														"nodeType": "YulTypedName",
														"src": "11428:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11431:1:13",
														"nodeType": "YulTypedName",
														"src": "11431:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11437:3:13",
														"nodeType": "YulTypedName",
														"src": "11437:3:13",
														"type": ""
													}
												],
												"src": "11397:191:13"
											},
											{
												"body": {
													"nativeSrc": "11659:53:13",
													"nodeType": "YulBlock",
													"src": "11659:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11676:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11676:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11699:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11699:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11681:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "11681:17:13"
																		},
																		"nativeSrc": "11681:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11681:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11669:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11669:6:13"
																},
																"nativeSrc": "11669:37:13",
																"nodeType": "YulFunctionCall",
																"src": "11669:37:13"
															},
															"nativeSrc": "11669:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "11669:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11594:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11647:5:13",
														"nodeType": "YulTypedName",
														"src": "11647:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11654:3:13",
														"nodeType": "YulTypedName",
														"src": "11654:3:13",
														"type": ""
													}
												],
												"src": "11594:118:13"
											},
											{
												"body": {
													"nativeSrc": "11872:288:13",
													"nodeType": "YulBlock",
													"src": "11872:288:13",
													"statements": [
														{
															"nativeSrc": "11882:26:13",
															"nodeType": "YulAssignment",
															"src": "11882:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11894:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11894:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11905:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11905:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11890:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11890:3:13"
																},
																"nativeSrc": "11890:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11890:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11882:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11882:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11962:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11962:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11975:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11975:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11986:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11986:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11971:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:13"
																		},
																		"nativeSrc": "11971:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11971:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11918:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11918:43:13"
																},
																"nativeSrc": "11918:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11918:71:13"
															},
															"nativeSrc": "11918:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11918:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12043:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12043:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12056:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12056:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12067:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12067:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12052:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12052:3:13"
																		},
																		"nativeSrc": "12052:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12052:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11999:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11999:43:13"
																},
																"nativeSrc": "11999:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11999:72:13"
															},
															"nativeSrc": "11999:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11999:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12125:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12125:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12138:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12138:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12149:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12149:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12134:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12134:3:13"
																		},
																		"nativeSrc": "12134:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12134:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12081:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12081:43:13"
																},
																"nativeSrc": "12081:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12081:72:13"
															},
															"nativeSrc": "12081:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12081:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11718:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11828:9:13",
														"nodeType": "YulTypedName",
														"src": "11828:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11840:6:13",
														"nodeType": "YulTypedName",
														"src": "11840:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11848:6:13",
														"nodeType": "YulTypedName",
														"src": "11848:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11856:6:13",
														"nodeType": "YulTypedName",
														"src": "11856:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11867:4:13",
														"nodeType": "YulTypedName",
														"src": "11867:4:13",
														"type": ""
													}
												],
												"src": "11718:442:13"
											},
											{
												"body": {
													"nativeSrc": "12264:124:13",
													"nodeType": "YulBlock",
													"src": "12264:124:13",
													"statements": [
														{
															"nativeSrc": "12274:26:13",
															"nodeType": "YulAssignment",
															"src": "12274:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12286:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12286:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12297:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12297:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12282:3:13"
																},
																"nativeSrc": "12282:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12282:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12274:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12274:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12354:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12354:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12367:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12367:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12378:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12378:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12363:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12363:3:13"
																		},
																		"nativeSrc": "12363:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12363:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12310:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12310:43:13"
																},
																"nativeSrc": "12310:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12310:71:13"
															},
															"nativeSrc": "12310:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12310:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12166:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12236:9:13",
														"nodeType": "YulTypedName",
														"src": "12236:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12248:6:13",
														"nodeType": "YulTypedName",
														"src": "12248:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12259:4:13",
														"nodeType": "YulTypedName",
														"src": "12259:4:13",
														"type": ""
													}
												],
												"src": "12166:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610100604052348015610010575f80fd5b506040516139923803806139928339818101604052810190610032919061072c565b6040518060400160405280600c81526020017f426f6e44654669546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f424446000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906109fa565b5080600490816100bd91906109fa565b5050505f60055f6101000a81548160ff0219169083151502179055506101097fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42886101fe60201b60201c565b5061013a7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7876101fe60201b60201c565b508473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060c081815250508160e081815250506101f2336101c56102f460201b60201c565b600a6101d19190610c31565b83866101dd9190610ca8565b6101e79190610cd8565b6102fc60201b60201c565b50505050505050610dd1565b5f61020f838361038160201b60201c565b6102ea57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102876103e560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102ee565b5f90505b92915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361036c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103639190610d28565b60405180910390fd5b61037d5f83836103ec60201b60201c565b5050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6103fd83838361040260201b60201c565b505050565b61041061042660201b60201c565b61042183838361046d60201b60201c565b505050565b61043461068660201b60201c565b1561046b576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104bd578060025f8282546104b19190610d41565b9250508190555061058b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610546578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161053d93929190610d83565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d2578060025f828254039250508190555061061c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106799190610db8565b60405180910390a3505050565b5f60055f9054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c88261069f565b9050919050565b6106d8816106be565b81146106e2575f80fd5b50565b5f815190506106f3816106cf565b92915050565b5f819050919050565b61070b816106f9565b8114610715575f80fd5b50565b5f8151905061072681610702565b92915050565b5f805f805f805f60e0888a0312156107475761074661069b565b5b5f6107548a828b016106e5565b97505060206107658a828b016106e5565b96505060406107768a828b016106e5565b95505060606107878a828b016106e5565b94505060806107988a828b01610718565b93505060a06107a98a828b01610718565b92505060c06107ba8a828b01610718565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061084457607f821691505b60208210810361085757610856610800565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261087e565b6108c3868361087e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108fe6108f96108f4846106f9565b6108db565b6106f9565b9050919050565b5f819050919050565b610917836108e4565b61092b61092382610905565b84845461088a565b825550505050565b5f90565b61093f610933565b61094a81848461090e565b505050565b5b8181101561096d576109625f82610937565b600181019050610950565b5050565b601f8211156109b2576109838161085d565b61098c8461086f565b8101602085101561099b578190505b6109af6109a78561086f565b83018261094f565b50505b505050565b5f82821c905092915050565b5f6109d25f19846008026109b7565b1980831691505092915050565b5f6109ea83836109c3565b9150826002028217905092915050565b610a03826107c9565b67ffffffffffffffff811115610a1c57610a1b6107d3565b5b610a26825461082d565b610a31828285610971565b5f60209050601f831160018114610a62575f8415610a50578287015190505b610a5a85826109df565b865550610ac1565b601f198416610a708661085d565b5f5b82811015610a9757848901518255600182019150602085019450602081019050610a72565b86831015610ab45784890151610ab0601f8916826109c3565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610b4b57808604811115610b2757610b26610ac9565b5b6001851615610b365780820291505b8081029050610b4485610af6565b9450610b0b565b94509492505050565b5f82610b635760019050610c1e565b81610b70575f9050610c1e565b8160018114610b865760028114610b9057610bbf565b6001915050610c1e565b60ff841115610ba257610ba1610ac9565b5b8360020a915084821115610bb957610bb8610ac9565b5b50610c1e565b5060208310610133831016604e8410600b8410161715610bf45782820a905083811115610bef57610bee610ac9565b5b610c1e565b610c018484846001610b02565b92509050818404811115610c1857610c17610ac9565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c3b826106f9565b9150610c4683610c25565b9250610c737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b54565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cb2826106f9565b9150610cbd836106f9565b925082610ccd57610ccc610c7b565b5b828204905092915050565b5f610ce2826106f9565b9150610ced836106f9565b9250828202610cfb816106f9565b91508282048414831517610d1257610d11610ac9565b5b5092915050565b610d22816106be565b82525050565b5f602082019050610d3b5f830184610d19565b92915050565b5f610d4b826106f9565b9150610d56836106f9565b9250828201905080821115610d6e57610d6d610ac9565b5b92915050565b610d7d816106f9565b82525050565b5f606082019050610d965f830186610d19565b610da36020830185610d74565b610db06040830184610d74565b949350505050565b5f602082019050610dcb5f830184610d74565b92915050565b60805160a05160c05160e051612b4f610e435f395f8181610dfa015261125401525f818161075f01528181610dd60152610f9801525f8181610b730152818161131e0152818161136c01526113a801525f818161072101528181610d8a01528181610f5b01526110980152612b4f5ff3fe608060405234801561000f575f80fd5b50600436106101ee575f3560e01c80638456cb591161010d578063ca19c11c116100a0578063dd62ed3e1161006f578063dd62ed3e1461056c578063e091a39b1461059c578063ec8eba14146105ba578063f57d283e146105d8576101ee565b8063ca19c11c1461050c578063ced0550f14610528578063d547741f14610532578063d59624b41461054e576101ee565b8063992642e5116100dc578063992642e514610482578063a217fddf146104a0578063a9059cbb146104be578063a920260b146104ee576101ee565b80638456cb591461040e578063904835c41461041857806391d148541461043457806395d89b4114610464576101ee565b80632f2ff15d1161018557806342966c681161015457806342966c68146103885780635c975abb146103a457806370a08231146103c257806379cc6790146103f2576101ee565b80632f2ff15d14610328578063313ce5671461034457806336568abe146103625780633f4ba83a1461037e576101ee565b806318160ddd116101c157806318160ddd1461028c57806323b872dd146102aa578063248a9ca3146102da5780632a0acc6a1461030a576101ee565b806301ffc9a7146101f257806306fdde0314610222578063095ea7b31461024057806310002dbd14610270575b5f80fd5b61020c60048036038101906102079190611ee1565b6105f4565b6040516102199190611f26565b60405180910390f35b61022a61066d565b6040516102379190611faf565b60405180910390f35b61025a6004803603810190610255919061205c565b6106fd565b6040516102679190611f26565b60405180910390f35b61028a6004803603810190610285919061209a565b61071f565b005b6102946108e3565b6040516102a191906120d4565b60405180910390f35b6102c460048036038101906102bf91906120ed565b6108ec565b6040516102d19190611f26565b60405180910390f35b6102f460048036038101906102ef9190612170565b61091a565b60405161030191906121aa565b60405180910390f35b610312610937565b60405161031f91906121aa565b60405180910390f35b610342600480360381019061033d91906121c3565b61095b565b005b61034c61097d565b604051610359919061221c565b60405180910390f35b61037c600480360381019061037791906121c3565b610985565b005b610386610a00565b005b6103a2600480360381019061039d919061209a565b610a35565b005b6103ac610a49565b6040516103b99190611f26565b60405180910390f35b6103dc60048036038101906103d79190612235565b610a5e565b6040516103e991906120d4565b60405180910390f35b61040c6004803603810190610407919061205c565b610aa3565b005b610416610ac3565b005b610432600480360381019061042d9190612460565b610af8565b005b61044e600480360381019061044991906121c3565b610c94565b60405161045b9190611f26565b60405180910390f35b61046c610cf8565b6040516104799190611faf565b60405180910390f35b61048a610d88565b60405161049791906124e5565b60405180910390f35b6104a8610dac565b6040516104b591906121aa565b60405180910390f35b6104d860048036038101906104d3919061205c565b610db2565b6040516104e59190611f26565b60405180910390f35b6104f6610dd4565b60405161050391906120d4565b60405180910390f35b6105266004803603810190610521919061209a565b610df8565b005b61053061106b565b005b61054c600480360381019061054791906121c3565b611230565b005b610556611252565b60405161056391906120d4565b60405180910390f35b610586600480360381019061058191906124fe565b611276565b60405161059391906120d4565b60405180910390f35b6105a46112f8565b6040516105b191906121aa565b60405180910390f35b6105c261131c565b6040516105cf91906124e5565b60405180910390f35b6105f260048036038101906105ed919061205c565b611340565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061066657506106658261146b565b5b9050919050565b60606003805461067c90612569565b80601f01602080910402602001604051908101604052809291908181526020018280546106a890612569565b80156106f35780601f106106ca576101008083540402835291602001916106f3565b820191905f5260205f20905b8154815290600101906020018083116106d657829003601f168201915b5050505050905090565b5f806107076114d4565b90506107148185856114db565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33307f00000000000000000000000000000000000000000000000000000000000000008561078991906125c6565b6040518463ffffffff1660e01b81526004016107a793929190612607565b6020604051808303815f875af11580156107c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107e79190612666565b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d906126db565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108619291906126f9565b6020604051808303815f875af115801561087d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a19190612666565b6108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d79061276a565b60405180910390fd5b50565b5f600254905090565b5f806108f66114d4565b90506109038582856114ed565b61090e85858561157f565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6109648261091a565b61096d8161166f565b6109778383611683565b50505050565b5f6012905090565b61098d6114d4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109f1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109fb828261176d565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a2a8161166f565b610a32611857565b50565b610a46610a406114d4565b826118b8565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ab582610aaf6114d4565b836114ed565b610abf82826118b8565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610aed8161166f565b610af5611937565b50565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610b228161166f565b8151835114610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d906127f8565b60405180910390fd5b5f5b8351811015610c8e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610bc157610bc0612816565b5b6020026020010151868581518110610bdc57610bdb612816565b5b60200260200101516040518463ffffffff1660e01b8152600401610c0293929190612607565b6020604051808303815f875af1158015610c1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c429190612666565b610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c789061288d565b60405180910390fd5b8080600101915050610b68565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d0790612569565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3390612569565b8015610d7e5780601f10610d5557610100808354040283529160200191610d7e565b820191905f5260205f20905b815481529060010190602001808311610d6157829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610dbc6114d4565b9050610dc981858561157f565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f0000000000000000000000000000000000000000000000000000000000000000421015610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e52906128f5565b60405180910390fd5b5f8111610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e949061295d565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610eda93929190612607565b6020604051808303815f875af1158015610ef6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f1a9190612666565b610f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f509061276a565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f000000000000000000000000000000000000000000000000000000000000000084610fc291906125c6565b6040518363ffffffff1660e01b8152600401610fdf9291906126f9565b6020604051808303815f875af1158015610ffb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061101f9190612666565b61105e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611055906126db565b60405180910390fd5b61106830826118b8565b50565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b76110958161166f565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110ef91906124e5565b602060405180830381865afa15801561110a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061112e919061298f565b90505f8111611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990612a04565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111ad9291906126f9565b6020604051808303815f875af11580156111c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111ed9190612666565b61122c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122390612a6c565b60405180910390fd5b5050565b6112398261091a565b6112428161166f565b61124c838361176d565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261136a8161166f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000085856040518463ffffffff1660e01b81526004016113e793929190612607565b6020604051808303815f875af1158015611403573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114279190612666565b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d9061288d565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6114e88383836001611999565b505050565b5f6114f88484611276565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611579578181101561156a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161156193929190612a8a565b60405180910390fd5b61157884848484035f611999565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115ef575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115e691906124e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361165f575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161165691906124e5565b60405180910390fd5b61166a838383611b68565b505050565b6116808161167b6114d4565b611b78565b50565b5f61168e8383610c94565b61176357600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117006114d4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611767565b5f90505b92915050565b5f6117788383610c94565b1561184d575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117ea6114d4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611851565b5f90505b92915050565b61185f611bc9565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118a16114d4565b6040516118ae91906124e5565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611928575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161191f91906124e5565b60405180910390fd5b611933825f83611b68565b5050565b61193f611c09565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119826114d4565b60405161198f91906124e5565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a09575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a0091906124e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a79575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a7091906124e5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b62578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b5991906120d4565b60405180910390a35b50505050565b611b73838383611c4a565b505050565b611b828282610c94565b611bc55780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611bbc929190612abf565b60405180910390fd5b5050565b611bd1610a49565b611c07576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c11610a49565b15611c48576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c52611c09565b611c5d838383611c62565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cb2578060025f828254611ca69190612ae6565b92505081905550611d80565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611d3b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3293929190612a8a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dc7578060025f8282540392505081905550611e11565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e6e91906120d4565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ec081611e8c565b8114611eca575f80fd5b50565b5f81359050611edb81611eb7565b92915050565b5f60208284031215611ef657611ef5611e84565b5b5f611f0384828501611ecd565b91505092915050565b5f8115159050919050565b611f2081611f0c565b82525050565b5f602082019050611f395f830184611f17565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f8182611f3f565b611f8b8185611f49565b9350611f9b818560208601611f59565b611fa481611f67565b840191505092915050565b5f6020820190508181035f830152611fc78184611f77565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ff882611fcf565b9050919050565b61200881611fee565b8114612012575f80fd5b50565b5f8135905061202381611fff565b92915050565b5f819050919050565b61203b81612029565b8114612045575f80fd5b50565b5f8135905061205681612032565b92915050565b5f806040838503121561207257612071611e84565b5b5f61207f85828601612015565b925050602061209085828601612048565b9150509250929050565b5f602082840312156120af576120ae611e84565b5b5f6120bc84828501612048565b91505092915050565b6120ce81612029565b82525050565b5f6020820190506120e75f8301846120c5565b92915050565b5f805f6060848603121561210457612103611e84565b5b5f61211186828701612015565b935050602061212286828701612015565b925050604061213386828701612048565b9150509250925092565b5f819050919050565b61214f8161213d565b8114612159575f80fd5b50565b5f8135905061216a81612146565b92915050565b5f6020828403121561218557612184611e84565b5b5f6121928482850161215c565b91505092915050565b6121a48161213d565b82525050565b5f6020820190506121bd5f83018461219b565b92915050565b5f80604083850312156121d9576121d8611e84565b5b5f6121e68582860161215c565b92505060206121f785828601612015565b9150509250929050565b5f60ff82169050919050565b61221681612201565b82525050565b5f60208201905061222f5f83018461220d565b92915050565b5f6020828403121561224a57612249611e84565b5b5f61225784828501612015565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61229a82611f67565b810181811067ffffffffffffffff821117156122b9576122b8612264565b5b80604052505050565b5f6122cb611e7b565b90506122d78282612291565b919050565b5f67ffffffffffffffff8211156122f6576122f5612264565b5b602082029050602081019050919050565b5f80fd5b5f61231d612318846122dc565b6122c2565b905080838252602082019050602084028301858111156123405761233f612307565b5b835b8181101561236957806123558882612015565b845260208401935050602081019050612342565b5050509392505050565b5f82601f83011261238757612386612260565b5b813561239784826020860161230b565b91505092915050565b5f67ffffffffffffffff8211156123ba576123b9612264565b5b602082029050602081019050919050565b5f6123dd6123d8846123a0565b6122c2565b90508083825260208201905060208402830185811115612400576123ff612307565b5b835b8181101561242957806124158882612048565b845260208401935050602081019050612402565b5050509392505050565b5f82601f83011261244757612446612260565b5b81356124578482602086016123cb565b91505092915050565b5f806040838503121561247657612475611e84565b5b5f83013567ffffffffffffffff81111561249357612492611e88565b5b61249f85828601612373565b925050602083013567ffffffffffffffff8111156124c0576124bf611e88565b5b6124cc85828601612433565b9150509250929050565b6124df81611fee565b82525050565b5f6020820190506124f85f8301846124d6565b92915050565b5f806040838503121561251457612513611e84565b5b5f61252185828601612015565b925050602061253285828601612015565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061258057607f821691505b6020821081036125935761259261253c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125d082612029565b91506125db83612029565b92508282026125e981612029565b91508282048414831517612600576125ff612599565b5b5092915050565b5f60608201905061261a5f8301866124d6565b61262760208301856124d6565b61263460408301846120c5565b949350505050565b61264581611f0c565b811461264f575f80fd5b50565b5f815190506126608161263c565b92915050565b5f6020828403121561267b5761267a611e84565b5b5f61268884828501612652565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f6126c5601b83611f49565b91506126d082612691565b602082019050919050565b5f6020820190508181035f8301526126f2816126b9565b9050919050565b5f60408201905061270c5f8301856124d6565b61271960208301846120c5565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f612754601a83611f49565b915061275f82612720565b602082019050919050565b5f6020820190508181035f83015261278181612748565b9050919050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f6127e2602983611f49565b91506127ed82612788565b604082019050919050565b5f6020820190508181035f83015261280f816127d6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612877600f83611f49565b915061288282612843565b602082019050919050565b5f6020820190508181035f8301526128a48161286b565b9050919050565b7f4d61747572697479206e6f7420796574207265616368656400000000000000005f82015250565b5f6128df601883611f49565b91506128ea826128ab565b602082019050919050565b5f6020820190508181035f83015261290c816128d3565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612947601683611f49565b915061295282612913565b602082019050919050565b5f6020820190508181035f8301526129748161293b565b9050919050565b5f8151905061298981612032565b92915050565b5f602082840312156129a4576129a3611e84565b5b5f6129b18482850161297b565b91505092915050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f6129ee601c83611f49565b91506129f9826129ba565b602082019050919050565b5f6020820190508181035f830152612a1b816129e2565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612a56601f83611f49565b9150612a6182612a22565b602082019050919050565b5f6020820190508181035f830152612a8381612a4a565b9050919050565b5f606082019050612a9d5f8301866124d6565b612aaa60208301856120c5565b612ab760408301846120c5565b949350505050565b5f604082019050612ad25f8301856124d6565b612adf602083018461219b565b9392505050565b5f612af082612029565b9150612afb83612029565b9250828201905080821115612b1357612b12612599565b5b9291505056fea26469706673582212209cb8b3e465b50756657981eb2fe160c5e57eaa54e5b63ea9bfe6970e9cc95d7064736f6c634300081a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3992 CODESIZE SUB DUP1 PUSH2 0x3992 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F6E44654669546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4244460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x109 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP9 PUSH2 0x1FE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x13A PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP8 PUSH2 0x1FE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1F2 CALLER PUSH2 0x1C5 PUSH2 0x2F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST DUP4 DUP7 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0xDD1 JUMP JUMPDEST PUSH0 PUSH2 0x20F DUP4 DUP4 PUSH2 0x381 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2EA JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x287 PUSH2 0x3E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2EE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37D PUSH0 DUP4 DUP4 PUSH2 0x3EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FD DUP4 DUP4 DUP4 PUSH2 0x402 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x410 PUSH2 0x426 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x421 DUP4 DUP4 DUP4 PUSH2 0x46D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x434 PUSH2 0x686 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x58B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x546 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x61C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C8 DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP2 EQ PUSH2 0x6E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6F3 DUP2 PUSH2 0x6CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70B DUP2 PUSH2 0x6F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x715 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x726 DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x747 JUMPI PUSH2 0x746 PUSH2 0x69B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x754 DUP11 DUP3 DUP12 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x765 DUP11 DUP3 DUP12 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x776 DUP11 DUP3 DUP12 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x787 DUP11 DUP3 DUP12 ADD PUSH2 0x6E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x798 DUP11 DUP3 DUP12 ADD PUSH2 0x718 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x7A9 DUP11 DUP3 DUP12 ADD PUSH2 0x718 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x7BA DUP11 DUP3 DUP12 ADD PUSH2 0x718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x844 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x857 JUMPI PUSH2 0x856 PUSH2 0x800 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8B9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x8C3 DUP7 DUP4 PUSH2 0x87E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8FE PUSH2 0x8F9 PUSH2 0x8F4 DUP5 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x917 DUP4 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x92B PUSH2 0x923 DUP3 PUSH2 0x905 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x88A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x93F PUSH2 0x933 JUMP JUMPDEST PUSH2 0x94A DUP2 DUP5 DUP5 PUSH2 0x90E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH2 0x962 PUSH0 DUP3 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x950 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9B2 JUMPI PUSH2 0x983 DUP2 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x98C DUP5 PUSH2 0x86F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x99B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9AF PUSH2 0x9A7 DUP6 PUSH2 0x86F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x94F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9B7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EA DUP4 DUP4 PUSH2 0x9C3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA03 DUP3 PUSH2 0x7C9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x7D3 JUMP JUMPDEST JUMPDEST PUSH2 0xA26 DUP3 SLOAD PUSH2 0x82D JUMP JUMPDEST PUSH2 0xA31 DUP3 DUP3 DUP6 PUSH2 0x971 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA62 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA50 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA5A DUP6 DUP3 PUSH2 0x9DF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA70 DUP7 PUSH2 0x85D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA97 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA72 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAB4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAB0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9C3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB4B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB27 JUMPI PUSH2 0xB26 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB36 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB44 DUP6 PUSH2 0xAF6 JUMP JUMPDEST SWAP5 POP PUSH2 0xB0B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB63 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST DUP2 PUSH2 0xB70 JUMPI PUSH0 SWAP1 POP PUSH2 0xC1E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB90 JUMPI PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC1E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBA2 JUMPI PUSH2 0xBA1 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC1E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBF4 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH2 0xC1E JUMP JUMPDEST PUSH2 0xC01 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB02 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC18 JUMPI PUSH2 0xC17 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC3B DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xC46 DUP4 PUSH2 0xC25 JUMP JUMPDEST SWAP3 POP PUSH2 0xC73 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCB2 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCBD DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0xC7B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCE2 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCED DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCFB DUP2 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD22 DUP2 PUSH2 0x6BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3B PUSH0 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD4B DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD56 DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD6E JUMPI PUSH2 0xD6D PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7D DUP2 PUSH2 0x6F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD96 PUSH0 DUP4 ADD DUP7 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xDA3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xDB0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH0 DUP4 ADD DUP5 PUSH2 0xD74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x2B4F PUSH2 0xE43 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xDFA ADD MSTORE PUSH2 0x1254 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x75F ADD MSTORE DUP2 DUP2 PUSH2 0xDD6 ADD MSTORE PUSH2 0xF98 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xB73 ADD MSTORE DUP2 DUP2 PUSH2 0x131E ADD MSTORE DUP2 DUP2 PUSH2 0x136C ADD MSTORE PUSH2 0x13A8 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x721 ADD MSTORE DUP2 DUP2 PUSH2 0xD8A ADD MSTORE DUP2 DUP2 PUSH2 0xF5B ADD MSTORE PUSH2 0x1098 ADD MSTORE PUSH2 0x2B4F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xCA19C11C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xEC8EBA14 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x5D8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xD59624B4 EQ PUSH2 0x54E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x992642E5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xA920260B EQ PUSH2 0x4EE JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x464 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x37E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x30A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH2 0xAC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46C PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x530 PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x586 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x666 JUMPI POP PUSH2 0x665 DUP3 PUSH2 0x146B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x67C SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x707 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x714 DUP2 DUP6 DUP6 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH32 0x0 DUP6 PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8F6 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x903 DUP6 DUP3 DUP6 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0x90E DUP6 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x964 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x96D DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x977 DUP4 DUP4 PUSH2 0x1683 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98D PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FB DUP3 DUP3 PUSH2 0x176D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA2A DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x1857 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xA40 PUSH2 0x14D4 JUMP JUMPDEST DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP3 PUSH2 0xAAF PUSH2 0x14D4 JUMP JUMPDEST DUP4 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xABF DUP3 DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAED DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xAF5 PUSH2 0x1937 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xB22 DUP2 PUSH2 0x166F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC8E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBC1 JUMPI PUSH2 0xBC0 PUSH2 0x2816 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0x2816 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD07 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD33 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDBC PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC9 DUP2 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE52 SWAP1 PUSH2 0x28F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE94 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0xF59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF50 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH32 0x0 DUP5 PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDF SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1055 SWAP1 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1068 ADDRESS DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0x1095 DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x2A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1239 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x1242 DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x124C DUP4 DUP4 PUSH2 0x176D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x136A DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1999 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14F8 DUP5 DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1579 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x156A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1561 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1578 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E6 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166A DUP4 DUP4 DUP4 PUSH2 0x1B68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x167B PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x168E DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1763 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1700 PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1778 DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST ISZERO PUSH2 0x184D JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17EA PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1851 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185F PUSH2 0x1BC9 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18A1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18AE SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1928 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1933 DUP3 PUSH0 DUP4 PUSH2 0x1B68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x193F PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1982 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A00 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP4 DUP4 DUP4 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP3 DUP3 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1BC5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBC SWAP3 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1BD1 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x1C07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C11 PUSH2 0xA49 JUMP JUMPDEST ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C52 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x1C5D DUP4 DUP4 DUP4 PUSH2 0x1C62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D80 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D3B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DC7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E11 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E6E SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC0 DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP2 EQ PUSH2 0x1ECA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EDB DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F03 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F20 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F39 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F81 DUP3 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F8B DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x1FA4 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC7 DUP2 DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF8 DUP3 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2008 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x2012 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2023 DUP2 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203B DUP2 PUSH2 0x2029 JUMP JUMPDEST DUP2 EQ PUSH2 0x2045 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2056 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2072 JUMPI PUSH2 0x2071 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x207F DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2090 DUP6 DUP3 DUP7 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BC DUP5 DUP3 DUP6 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20CE DUP2 PUSH2 0x2029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2111 DUP7 DUP3 DUP8 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2122 DUP7 DUP3 DUP8 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2133 DUP7 DUP3 DUP8 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214F DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x2159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2185 JUMPI PUSH2 0x2184 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2192 DUP5 DUP3 DUP6 ADD PUSH2 0x215C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21A4 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BD PUSH0 DUP4 ADD DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP6 DUP3 DUP7 ADD PUSH2 0x215C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2216 DUP2 PUSH2 0x2201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x222F PUSH0 DUP4 ADD DUP5 PUSH2 0x220D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH2 0x2249 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2257 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x229A DUP3 PUSH2 0x1F67 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22B9 JUMPI PUSH2 0x22B8 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP PUSH2 0x22D7 DUP3 DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x22F5 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x231D PUSH2 0x2318 DUP5 PUSH2 0x22DC JUMP JUMPDEST PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x2307 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2369 JUMPI DUP1 PUSH2 0x2355 DUP9 DUP3 PUSH2 0x2015 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2342 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2397 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x230B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD PUSH2 0x23D8 DUP5 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x2307 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2429 JUMPI DUP1 PUSH2 0x2415 DUP9 DUP3 PUSH2 0x2048 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2402 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2457 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2475 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2492 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH2 0x249F DUP6 DUP3 DUP7 ADD PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH2 0x24CC DUP6 DUP3 DUP7 ADD PUSH2 0x2433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DF DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2514 JUMPI PUSH2 0x2513 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2521 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2532 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2580 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2593 JUMPI PUSH2 0x2592 PUSH2 0x253C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25D0 DUP3 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DB DUP4 PUSH2 0x2029 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25E9 DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x2599 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x261A PUSH0 DUP4 ADD DUP7 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2627 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2645 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP2 EQ PUSH2 0x264F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2660 DUP2 PUSH2 0x263C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x267B JUMPI PUSH2 0x267A PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2688 DUP5 DUP3 DUP6 ADD PUSH2 0x2652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C5 PUSH1 0x1B DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D0 DUP3 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F2 DUP2 PUSH2 0x26B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH0 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2719 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2754 PUSH1 0x1A DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x275F DUP3 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2781 DUP2 PUSH2 0x2748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E2 PUSH1 0x29 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x27ED DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x280F DUP2 PUSH2 0x27D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 PUSH1 0xF DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x2843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A4 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61747572697479206E6F742079657420726561636865640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DF PUSH1 0x18 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EA DUP3 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x290C DUP2 PUSH2 0x28D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2947 PUSH1 0x16 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2952 DUP3 PUSH2 0x2913 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2974 DUP2 PUSH2 0x293B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2989 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29A4 JUMPI PUSH2 0x29A3 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B1 DUP5 DUP3 DUP6 ADD PUSH2 0x297B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29EE PUSH1 0x1C DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F9 DUP3 PUSH2 0x29BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A1B DUP2 PUSH2 0x29E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A56 PUSH1 0x1F DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A61 DUP3 PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A83 DUP2 PUSH2 0x2A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A9D PUSH0 DUP4 ADD DUP7 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2AAA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x2AB7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AD2 PUSH0 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF0 DUP3 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFB DUP4 PUSH2 0x2029 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B12 PUSH2 0x2599 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB8 0xB3 0xE4 PUSH6 0xB50756657981 0xEB 0x2F 0xE1 PUSH1 0xC5 0xE5 PUSH31 0xAA54E5B63EA9BFE6970E9CC95D7064736F6C634300081A0033000000000000 ",
							"sourceMap": "373:3072:12:-:0;;;745:510;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;960:32:12::1;487:18;978:13;960:10;;;:32;;:::i;:::-;;1002:35;549:24;1026:10;1002;;;:35;;:::i;:::-;;1060:11;1047:24;;;;;;;;::::0;::::1;1096:13;1081:28;;;;;;;;::::0;::::1;1130:9;1119:20;;;;::::0;::::1;1164:13;1149:28;;;;::::0;::::1;1187:61;1193:10;1237;:8;;;:10;;:::i;:::-;1231:2;:16;;;;:::i;:::-;1218:9;1206;:21;;;;:::i;:::-;1205:42;;;;:::i;:::-;1187:5;;;:61;;:::i;:::-;745:510:::0;;;;;;;373:3072;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;3129:165:12:-;3257:30;3271:4;3277:2;3281:5;3257:13;;;:30;;:::i;:::-;3129:165;;;:::o;1112:145:6:-;1474:19:9;:17;;;:19;;:::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;2002:128:9:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1291::-;1329:6;1337;1345;1353;1361;1369;1377;1426:3;1414:9;1405:7;1401:23;1397:33;1394:120;;;1433:79;;:::i;:::-;1394:120;1553:1;1578:64;1634:7;1625:6;1614:9;1610:22;1578:64;:::i;:::-;1568:74;;1524:128;1691:2;1717:64;1773:7;1764:6;1753:9;1749:22;1717:64;:::i;:::-;1707:74;;1662:129;1830:2;1856:64;1912:7;1903:6;1892:9;1888:22;1856:64;:::i;:::-;1846:74;;1801:129;1969:2;1995:64;2051:7;2042:6;2031:9;2027:22;1995:64;:::i;:::-;1985:74;;1940:129;2108:3;2135:64;2191:7;2182:6;2171:9;2167:22;2135:64;:::i;:::-;2125:74;;2079:130;2248:3;2275:64;2331:7;2322:6;2311:9;2307:22;2275:64;:::i;:::-;2265:74;;2219:130;2388:3;2415:64;2471:7;2462:6;2451:9;2447:22;2415:64;:::i;:::-;2405:74;;2359:130;1205:1291;;;;;;;;;;:::o;2502:99::-;2554:6;2588:5;2582:12;2572:22;;2502:99;;;:::o;2607:180::-;2655:77;2652:1;2645:88;2752:4;2749:1;2742:15;2776:4;2773:1;2766:15;2793:180;2841:77;2838:1;2831:88;2938:4;2935:1;2928:15;2962:4;2959:1;2952:15;2979:320;3023:6;3060:1;3054:4;3050:12;3040:22;;3107:1;3101:4;3097:12;3128:18;3118:81;;3184:4;3176:6;3172:17;3162:27;;3118:81;3246:2;3238:6;3235:14;3215:18;3212:38;3209:84;;3265:18;;:::i;:::-;3209:84;3030:269;2979:320;;;:::o;3305:141::-;3354:4;3377:3;3369:11;;3400:3;3397:1;3390:14;3434:4;3431:1;3421:18;3413:26;;3305:141;;;:::o;3452:93::-;3489:6;3536:2;3531;3524:5;3520:14;3516:23;3506:33;;3452:93;;;:::o;3551:107::-;3595:8;3645:5;3639:4;3635:16;3614:37;;3551:107;;;;:::o;3664:393::-;3733:6;3783:1;3771:10;3767:18;3806:97;3836:66;3825:9;3806:97;:::i;:::-;3924:39;3954:8;3943:9;3924:39;:::i;:::-;3912:51;;3996:4;3992:9;3985:5;3981:21;3972:30;;4045:4;4035:8;4031:19;4024:5;4021:30;4011:40;;3740:317;;3664:393;;;;;:::o;4063:60::-;4091:3;4112:5;4105:12;;4063:60;;;:::o;4129:142::-;4179:9;4212:53;4230:34;4239:24;4257:5;4239:24;:::i;:::-;4230:34;:::i;:::-;4212:53;:::i;:::-;4199:66;;4129:142;;;:::o;4277:75::-;4320:3;4341:5;4334:12;;4277:75;;;:::o;4358:269::-;4468:39;4499:7;4468:39;:::i;:::-;4529:91;4578:41;4602:16;4578:41;:::i;:::-;4570:6;4563:4;4557:11;4529:91;:::i;:::-;4523:4;4516:105;4434:193;4358:269;;;:::o;4633:73::-;4678:3;4633:73;:::o;4712:189::-;4789:32;;:::i;:::-;4830:65;4888:6;4880;4874:4;4830:65;:::i;:::-;4765:136;4712:189;;:::o;4907:186::-;4967:120;4984:3;4977:5;4974:14;4967:120;;;5038:39;5075:1;5068:5;5038:39;:::i;:::-;5011:1;5004:5;5000:13;4991:22;;4967:120;;;4907:186;;:::o;5099:543::-;5200:2;5195:3;5192:11;5189:446;;;5234:38;5266:5;5234:38;:::i;:::-;5318:29;5336:10;5318:29;:::i;:::-;5308:8;5304:44;5501:2;5489:10;5486:18;5483:49;;;5522:8;5507:23;;5483:49;5545:80;5601:22;5619:3;5601:22;:::i;:::-;5591:8;5587:37;5574:11;5545:80;:::i;:::-;5204:431;;5189:446;5099:543;;;:::o;5648:117::-;5702:8;5752:5;5746:4;5742:16;5721:37;;5648:117;;;;:::o;5771:169::-;5815:6;5848:51;5896:1;5892:6;5884:5;5881:1;5877:13;5848:51;:::i;:::-;5844:56;5929:4;5923;5919:15;5909:25;;5822:118;5771:169;;;;:::o;5945:295::-;6021:4;6167:29;6192:3;6186:4;6167:29;:::i;:::-;6159:37;;6229:3;6226:1;6222:11;6216:4;6213:21;6205:29;;5945:295;;;;:::o;6245:1395::-;6362:37;6395:3;6362:37;:::i;:::-;6464:18;6456:6;6453:30;6450:56;;;6486:18;;:::i;:::-;6450:56;6530:38;6562:4;6556:11;6530:38;:::i;:::-;6615:67;6675:6;6667;6661:4;6615:67;:::i;:::-;6709:1;6733:4;6720:17;;6765:2;6757:6;6754:14;6782:1;6777:618;;;;7439:1;7456:6;7453:77;;;7505:9;7500:3;7496:19;7490:26;7481:35;;7453:77;7556:67;7616:6;7609:5;7556:67;:::i;:::-;7550:4;7543:81;7412:222;6747:887;;6777:618;6829:4;6825:9;6817:6;6813:22;6863:37;6895:4;6863:37;:::i;:::-;6922:1;6936:208;6950:7;6947:1;6944:14;6936:208;;;7029:9;7024:3;7020:19;7014:26;7006:6;6999:42;7080:1;7072:6;7068:14;7058:24;;7127:2;7116:9;7112:18;7099:31;;6973:4;6970:1;6966:12;6961:17;;6936:208;;;7172:6;7163:7;7160:19;7157:179;;;7230:9;7225:3;7221:19;7215:26;7273:48;7315:4;7307:6;7303:17;7292:9;7273:48;:::i;:::-;7265:6;7258:64;7180:156;7157:179;7382:1;7378;7370:6;7366:14;7362:22;7356:4;7349:36;6784:611;;;6747:887;;6337:1303;;;6245:1395;;:::o;7646:180::-;7694:77;7691:1;7684:88;7791:4;7788:1;7781:15;7815:4;7812:1;7805:15;7832:102;7874:8;7921:5;7918:1;7914:13;7893:34;;7832:102;;;:::o;7940:848::-;8001:5;8008:4;8032:6;8023:15;;8056:5;8047:14;;8070:712;8091:1;8081:8;8078:15;8070:712;;;8186:4;8181:3;8177:14;8171:4;8168:24;8165:50;;;8195:18;;:::i;:::-;8165:50;8245:1;8235:8;8231:16;8228:451;;;8660:4;8653:5;8649:16;8640:25;;8228:451;8710:4;8704;8700:15;8692:23;;8740:32;8763:8;8740:32;:::i;:::-;8728:44;;8070:712;;;7940:848;;;;;;;:::o;8794:1073::-;8848:5;9039:8;9029:40;;9060:1;9051:10;;9062:5;;9029:40;9088:4;9078:36;;9105:1;9096:10;;9107:5;;9078:36;9174:4;9222:1;9217:27;;;;9258:1;9253:191;;;;9167:277;;9217:27;9235:1;9226:10;;9237:5;;;9253:191;9298:3;9288:8;9285:17;9282:43;;;9305:18;;:::i;:::-;9282:43;9354:8;9351:1;9347:16;9338:25;;9389:3;9382:5;9379:14;9376:40;;;9396:18;;:::i;:::-;9376:40;9429:5;;;9167:277;;9553:2;9543:8;9540:16;9534:3;9528:4;9525:13;9521:36;9503:2;9493:8;9490:16;9485:2;9479:4;9476:12;9472:35;9456:111;9453:246;;;9609:8;9603:4;9599:19;9590:28;;9644:3;9637:5;9634:14;9631:40;;;9651:18;;:::i;:::-;9631:40;9684:5;;9453:246;9724:42;9762:3;9752:8;9746:4;9743:1;9724:42;:::i;:::-;9709:57;;;;9798:4;9793:3;9789:14;9782:5;9779:25;9776:51;;;9807:18;;:::i;:::-;9776:51;9856:4;9849:5;9845:16;9836:25;;8794:1073;;;;;;:::o;9873:86::-;9908:7;9948:4;9941:5;9937:16;9926:27;;9873:86;;;:::o;9965:281::-;10023:5;10047:23;10065:4;10047:23;:::i;:::-;10039:31;;10091:25;10107:8;10091:25;:::i;:::-;10079:37;;10135:104;10172:66;10162:8;10156:4;10135:104;:::i;:::-;10126:113;;9965:281;;;;:::o;10252:180::-;10300:77;10297:1;10290:88;10397:4;10394:1;10387:15;10421:4;10418:1;10411:15;10438:185;10478:1;10495:20;10513:1;10495:20;:::i;:::-;10490:25;;10529:20;10547:1;10529:20;:::i;:::-;10524:25;;10568:1;10558:35;;10573:18;;:::i;:::-;10558:35;10615:1;10612;10608:9;10603:14;;10438:185;;;;:::o;10629:410::-;10669:7;10692:20;10710:1;10692:20;:::i;:::-;10687:25;;10726:20;10744:1;10726:20;:::i;:::-;10721:25;;10781:1;10778;10774:9;10803:30;10821:11;10803:30;:::i;:::-;10792:41;;10982:1;10973:7;10969:15;10966:1;10963:22;10943:1;10936:9;10916:83;10893:139;;11012:18;;:::i;:::-;10893:139;10677:362;10629:410;;;;:::o;11045:118::-;11132:24;11150:5;11132:24;:::i;:::-;11127:3;11120:37;11045:118;;:::o;11169:222::-;11262:4;11300:2;11289:9;11285:18;11277:26;;11313:71;11381:1;11370:9;11366:17;11357:6;11313:71;:::i;:::-;11169:222;;;;:::o;11397:191::-;11437:3;11456:20;11474:1;11456:20;:::i;:::-;11451:25;;11490:20;11508:1;11490:20;:::i;:::-;11485:25;;11533:1;11530;11526:9;11519:16;;11554:3;11551:1;11548:10;11545:36;;;11561:18;;:::i;:::-;11545:36;11397:191;;;;:::o;11594:118::-;11681:24;11699:5;11681:24;:::i;:::-;11676:3;11669:37;11594:118;;:::o;11718:442::-;11867:4;11905:2;11894:9;11890:18;11882:26;;11918:71;11986:1;11975:9;11971:17;11962:6;11918:71;:::i;:::-;11999:72;12067:2;12056:9;12052:18;12043:6;11999:72;:::i;:::-;12081;12149:2;12138:9;12134:18;12125:6;12081:72;:::i;:::-;11718:442;;;;;;:::o;12166:222::-;12259:4;12297:2;12286:9;12282:18;12274:26;;12310:71;12378:1;12367:9;12363:17;12354:6;12310:71;:::i;:::-;12166:222;;;;:::o;373:3072:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_1416": {
									"entryPoint": 2359,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BOND_ISSUER_1421": {
									"entryPoint": 4856,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3500,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 5339,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 6553,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 6328,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7032,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5743,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5763,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1226": {
									"entryPoint": 5332,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1344": {
									"entryPoint": 6455,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 7177,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1328": {
									"entryPoint": 7113,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5997,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 5357,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 5503,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1360": {
									"entryPoint": 6231,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 7242,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1720": {
									"entryPoint": 7016,
									"id": 1720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 7266,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 4726,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1789,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 2654,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1153": {
									"entryPoint": 2723,
									"id": 1153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1132": {
									"entryPoint": 2613,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyBond_1527": {
									"entryPoint": 1823,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimFaceValue_1699": {
									"entryPoint": 3576,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimInvestorFunds_1640": {
									"entryPoint": 4203,
									"id": 1640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 2429,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeInterestAll_1602": {
									"entryPoint": 2808,
									"id": 1602,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeInterest_1550": {
									"entryPoint": 4928,
									"id": 1550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2330,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2395,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3220,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@interestCoin_1425": {
									"entryPoint": 4892,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maturityDate_1429": {
									"entryPoint": 4690,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1645,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1730": {
									"entryPoint": 2755,
									"id": 1730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1303": {
									"entryPoint": 2633,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2437,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4656,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stableCoin_1423": {
									"entryPoint": 3464,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1384": {
									"entryPoint": 5227,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1524,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 3320,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 2275,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 2284,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 3506,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unitSize_1427": {
									"entryPoint": 3540,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1740": {
									"entryPoint": 2560,
									"id": 1740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10890,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15": {
									"entryPoint": 10682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 10307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764": {
									"entryPoint": 10016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d": {
									"entryPoint": 9873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b": {
									"entryPoint": 10786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464": {
									"entryPoint": 10515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55": {
									"entryPoint": 10411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25231:13",
										"nodeType": "YulBlock",
										"src": "0:25231:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4162:263:13",
													"nodeType": "YulBlock",
													"src": "4162:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4208:83:13",
																"nodeType": "YulBlock",
																"src": "4208:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4210:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4210:77:13"
																			},
																			"nativeSrc": "4210:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4210:79:13"
																		},
																		"nativeSrc": "4210:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4210:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4183:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4183:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4192:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4179:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:13"
																		},
																		"nativeSrc": "4179:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4204:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4175:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:13"
																},
																"nativeSrc": "4175:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4175:32:13"
															},
															"nativeSrc": "4172:119:13",
															"nodeType": "YulIf",
															"src": "4172:119:13"
														},
														{
															"nativeSrc": "4301:117:13",
															"nodeType": "YulBlock",
															"src": "4301:117:13",
															"statements": [
																{
																	"nativeSrc": "4316:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4316:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4330:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4330:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4320:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4320:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4345:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4345:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4380:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4380:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4391:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4391:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4376:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4376:3:13"
																				},
																				"nativeSrc": "4376:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4376:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4400:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4400:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4355:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4355:20:13"
																		},
																		"nativeSrc": "4355:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4345:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4345:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4096:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4132:9:13",
														"nodeType": "YulTypedName",
														"src": "4132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4143:7:13",
														"nodeType": "YulTypedName",
														"src": "4143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4155:6:13",
														"nodeType": "YulTypedName",
														"src": "4155:6:13",
														"type": ""
													}
												],
												"src": "4096:329:13"
											},
											{
												"body": {
													"nativeSrc": "4496:53:13",
													"nodeType": "YulBlock",
													"src": "4496:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4513:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4536:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4536:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4518:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4518:17:13"
																		},
																		"nativeSrc": "4518:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:13"
																},
																"nativeSrc": "4506:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4506:37:13"
															},
															"nativeSrc": "4506:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4506:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4431:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4484:5:13",
														"nodeType": "YulTypedName",
														"src": "4484:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4491:3:13",
														"nodeType": "YulTypedName",
														"src": "4491:3:13",
														"type": ""
													}
												],
												"src": "4431:118:13"
											},
											{
												"body": {
													"nativeSrc": "4653:124:13",
													"nodeType": "YulBlock",
													"src": "4653:124:13",
													"statements": [
														{
															"nativeSrc": "4663:26:13",
															"nodeType": "YulAssignment",
															"src": "4663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:13"
																},
																"nativeSrc": "4671:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4743:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4767:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:13"
																		},
																		"nativeSrc": "4752:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4699:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4699:43:13"
																},
																"nativeSrc": "4699:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4699:71:13"
															},
															"nativeSrc": "4699:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4699:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4555:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4625:9:13",
														"nodeType": "YulTypedName",
														"src": "4625:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4637:6:13",
														"nodeType": "YulTypedName",
														"src": "4637:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4648:4:13",
														"nodeType": "YulTypedName",
														"src": "4648:4:13",
														"type": ""
													}
												],
												"src": "4555:222:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5453:32:13",
													"nodeType": "YulBlock",
													"src": "5453:32:13",
													"statements": [
														{
															"nativeSrc": "5463:16:13",
															"nodeType": "YulAssignment",
															"src": "5463:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:13",
																"nodeType": "YulIdentifier",
																"src": "5474:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:13",
														"nodeType": "YulTypedName",
														"src": "5435:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:13",
														"nodeType": "YulTypedName",
														"src": "5445:7:13",
														"type": ""
													}
												],
												"src": "5408:77:13"
											},
											{
												"body": {
													"nativeSrc": "5534:79:13",
													"nodeType": "YulBlock",
													"src": "5534:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:13",
																"nodeType": "YulBlock",
																"src": "5591:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:13"
																			},
																			"nativeSrc": "5593:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:13"
																		},
																		"nativeSrc": "5593:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:13"
																				},
																				"nativeSrc": "5564:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:13"
																		},
																		"nativeSrc": "5554:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:13"
																},
																"nativeSrc": "5547:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:13"
															},
															"nativeSrc": "5544:63:13",
															"nodeType": "YulIf",
															"src": "5544:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:13",
														"nodeType": "YulTypedName",
														"src": "5527:5:13",
														"type": ""
													}
												],
												"src": "5491:122:13"
											},
											{
												"body": {
													"nativeSrc": "5671:87:13",
													"nodeType": "YulBlock",
													"src": "5671:87:13",
													"statements": [
														{
															"nativeSrc": "5681:29:13",
															"nodeType": "YulAssignment",
															"src": "5681:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:13"
																},
																"nativeSrc": "5690:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:13"
																},
																"nativeSrc": "5719:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:13"
															},
															"nativeSrc": "5719:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:13",
														"nodeType": "YulTypedName",
														"src": "5649:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:13",
														"nodeType": "YulTypedName",
														"src": "5657:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:13",
														"nodeType": "YulTypedName",
														"src": "5665:5:13",
														"type": ""
													}
												],
												"src": "5619:139:13"
											},
											{
												"body": {
													"nativeSrc": "5830:263:13",
													"nodeType": "YulBlock",
													"src": "5830:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:13",
																"nodeType": "YulBlock",
																"src": "5876:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:13"
																			},
																			"nativeSrc": "5878:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:13"
																		},
																		"nativeSrc": "5878:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:13"
																		},
																		"nativeSrc": "5847:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:13"
																},
																"nativeSrc": "5843:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:13"
															},
															"nativeSrc": "5840:119:13",
															"nodeType": "YulIf",
															"src": "5840:119:13"
														},
														{
															"nativeSrc": "5969:117:13",
															"nodeType": "YulBlock",
															"src": "5969:117:13",
															"statements": [
																{
																	"nativeSrc": "5984:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:13"
																				},
																				"nativeSrc": "6044:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:13"
																		},
																		"nativeSrc": "6023:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:13",
														"nodeType": "YulTypedName",
														"src": "5800:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:13",
														"nodeType": "YulTypedName",
														"src": "5811:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:13",
														"nodeType": "YulTypedName",
														"src": "5823:6:13",
														"type": ""
													}
												],
												"src": "5764:329:13"
											},
											{
												"body": {
													"nativeSrc": "6164:53:13",
													"nodeType": "YulBlock",
													"src": "6164:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:13"
																		},
																		"nativeSrc": "6186:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:13"
																},
																"nativeSrc": "6174:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:13"
															},
															"nativeSrc": "6174:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:13",
														"nodeType": "YulTypedName",
														"src": "6152:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:13",
														"nodeType": "YulTypedName",
														"src": "6159:3:13",
														"type": ""
													}
												],
												"src": "6099:118:13"
											},
											{
												"body": {
													"nativeSrc": "6321:124:13",
													"nodeType": "YulBlock",
													"src": "6321:124:13",
													"statements": [
														{
															"nativeSrc": "6331:26:13",
															"nodeType": "YulAssignment",
															"src": "6331:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:13"
																},
																"nativeSrc": "6339:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:13"
																		},
																		"nativeSrc": "6420:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:13"
																},
																"nativeSrc": "6367:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:13"
															},
															"nativeSrc": "6367:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:13",
														"nodeType": "YulTypedName",
														"src": "6293:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:13",
														"nodeType": "YulTypedName",
														"src": "6305:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:13",
														"nodeType": "YulTypedName",
														"src": "6316:4:13",
														"type": ""
													}
												],
												"src": "6223:222:13"
											},
											{
												"body": {
													"nativeSrc": "6534:391:13",
													"nodeType": "YulBlock",
													"src": "6534:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:13",
																"nodeType": "YulBlock",
																"src": "6580:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:13"
																			},
																			"nativeSrc": "6582:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:13"
																		},
																		"nativeSrc": "6582:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:13"
																		},
																		"nativeSrc": "6551:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:13"
																},
																"nativeSrc": "6547:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:13"
															},
															"nativeSrc": "6544:119:13",
															"nodeType": "YulIf",
															"src": "6544:119:13"
														},
														{
															"nativeSrc": "6673:117:13",
															"nodeType": "YulBlock",
															"src": "6673:117:13",
															"statements": [
																{
																	"nativeSrc": "6688:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:13"
																				},
																				"nativeSrc": "6748:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:13"
																		},
																		"nativeSrc": "6727:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:13",
															"nodeType": "YulBlock",
															"src": "6800:118:13",
															"statements": [
																{
																	"nativeSrc": "6815:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:13"
																				},
																				"nativeSrc": "6876:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:13"
																		},
																		"nativeSrc": "6855:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:13",
														"nodeType": "YulTypedName",
														"src": "6496:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:13",
														"nodeType": "YulTypedName",
														"src": "6507:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:13",
														"nodeType": "YulTypedName",
														"src": "6519:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:13",
														"nodeType": "YulTypedName",
														"src": "6527:6:13",
														"type": ""
													}
												],
												"src": "6451:474:13"
											},
											{
												"body": {
													"nativeSrc": "6974:43:13",
													"nodeType": "YulBlock",
													"src": "6974:43:13",
													"statements": [
														{
															"nativeSrc": "6984:27:13",
															"nodeType": "YulAssignment",
															"src": "6984:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:13"
																},
																"nativeSrc": "6995:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:13",
														"nodeType": "YulTypedName",
														"src": "6956:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:13",
														"nodeType": "YulTypedName",
														"src": "6966:7:13",
														"type": ""
													}
												],
												"src": "6931:86:13"
											},
											{
												"body": {
													"nativeSrc": "7084:51:13",
													"nodeType": "YulBlock",
													"src": "7084:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:13"
																		},
																		"nativeSrc": "7106:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:13"
																},
																"nativeSrc": "7094:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:13"
															},
															"nativeSrc": "7094:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:13",
														"nodeType": "YulTypedName",
														"src": "7072:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:13",
														"nodeType": "YulTypedName",
														"src": "7079:3:13",
														"type": ""
													}
												],
												"src": "7023:112:13"
											},
											{
												"body": {
													"nativeSrc": "7235:120:13",
													"nodeType": "YulBlock",
													"src": "7235:120:13",
													"statements": [
														{
															"nativeSrc": "7245:26:13",
															"nodeType": "YulAssignment",
															"src": "7245:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:13"
																},
																"nativeSrc": "7253:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:13"
																		},
																		"nativeSrc": "7330:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:13"
																},
																"nativeSrc": "7281:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:13"
															},
															"nativeSrc": "7281:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:13",
														"nodeType": "YulTypedName",
														"src": "7207:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:13",
														"nodeType": "YulTypedName",
														"src": "7219:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:13",
														"nodeType": "YulTypedName",
														"src": "7230:4:13",
														"type": ""
													}
												],
												"src": "7141:214:13"
											},
											{
												"body": {
													"nativeSrc": "7427:263:13",
													"nodeType": "YulBlock",
													"src": "7427:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7473:83:13",
																"nodeType": "YulBlock",
																"src": "7473:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7475:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7475:77:13"
																			},
																			"nativeSrc": "7475:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7475:79:13"
																		},
																		"nativeSrc": "7475:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7448:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:13"
																		},
																		"nativeSrc": "7444:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7469:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:13"
																},
																"nativeSrc": "7440:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7440:32:13"
															},
															"nativeSrc": "7437:119:13",
															"nodeType": "YulIf",
															"src": "7437:119:13"
														},
														{
															"nativeSrc": "7566:117:13",
															"nodeType": "YulBlock",
															"src": "7566:117:13",
															"statements": [
																{
																	"nativeSrc": "7581:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7595:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7595:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7585:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7585:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7610:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7610:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7645:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7645:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7656:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7656:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7641:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7641:3:13"
																				},
																				"nativeSrc": "7641:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7641:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7665:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7665:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7620:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7620:20:13"
																		},
																		"nativeSrc": "7620:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7610:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7610:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7361:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7397:9:13",
														"nodeType": "YulTypedName",
														"src": "7397:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7408:7:13",
														"nodeType": "YulTypedName",
														"src": "7408:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7420:6:13",
														"nodeType": "YulTypedName",
														"src": "7420:6:13",
														"type": ""
													}
												],
												"src": "7361:329:13"
											},
											{
												"body": {
													"nativeSrc": "7785:28:13",
													"nodeType": "YulBlock",
													"src": "7785:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7802:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7802:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7805:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:13"
																},
																"nativeSrc": "7795:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7795:12:13"
															},
															"nativeSrc": "7795:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7795:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7696:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7696:117:13"
											},
											{
												"body": {
													"nativeSrc": "7847:152:13",
													"nodeType": "YulBlock",
													"src": "7847:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7864:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7864:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7867:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7857:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:13"
																},
																"nativeSrc": "7857:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7857:88:13"
															},
															"nativeSrc": "7857:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7857:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7961:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7961:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7964:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7964:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7954:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:13"
																},
																"nativeSrc": "7954:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7954:15:13"
															},
															"nativeSrc": "7954:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7954:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7985:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7985:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7988:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7988:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7978:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:13"
																},
																"nativeSrc": "7978:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7978:15:13"
															},
															"nativeSrc": "7978:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7978:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7819:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7819:180:13"
											},
											{
												"body": {
													"nativeSrc": "8048:238:13",
													"nodeType": "YulBlock",
													"src": "8048:238:13",
													"statements": [
														{
															"nativeSrc": "8058:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8058:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8080:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8080:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8110:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8110:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8088:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "8088:21:13"
																		},
																		"nativeSrc": "8088:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8088:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:13"
																},
																"nativeSrc": "8076:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8076:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8062:10:13",
																	"nodeType": "YulTypedName",
																	"src": "8062:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8227:22:13",
																"nodeType": "YulBlock",
																"src": "8227:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8229:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8229:16:13"
																			},
																			"nativeSrc": "8229:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8229:18:13"
																		},
																		"nativeSrc": "8229:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8229:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8170:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8170:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8182:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8182:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8167:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:13"
																		},
																		"nativeSrc": "8167:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8167:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8206:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8206:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8218:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8218:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8203:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8203:2:13"
																		},
																		"nativeSrc": "8203:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8203:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8164:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8164:2:13"
																},
																"nativeSrc": "8164:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8164:62:13"
															},
															"nativeSrc": "8161:88:13",
															"nodeType": "YulIf",
															"src": "8161:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8265:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8265:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8269:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "8269:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8258:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:13"
																},
																"nativeSrc": "8258:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8258:22:13"
															},
															"nativeSrc": "8258:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8258:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8005:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8034:6:13",
														"nodeType": "YulTypedName",
														"src": "8034:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8042:4:13",
														"nodeType": "YulTypedName",
														"src": "8042:4:13",
														"type": ""
													}
												],
												"src": "8005:281:13"
											},
											{
												"body": {
													"nativeSrc": "8333:88:13",
													"nodeType": "YulBlock",
													"src": "8333:88:13",
													"statements": [
														{
															"nativeSrc": "8343:30:13",
															"nodeType": "YulAssignment",
															"src": "8343:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8353:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8353:18:13"
																},
																"nativeSrc": "8353:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8353:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8410:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8410:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8382:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "8382:19:13"
																},
																"nativeSrc": "8382:33:13",
																"nodeType": "YulFunctionCall",
																"src": "8382:33:13"
															},
															"nativeSrc": "8382:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "8382:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8292:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8317:4:13",
														"nodeType": "YulTypedName",
														"src": "8317:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8326:6:13",
														"nodeType": "YulTypedName",
														"src": "8326:6:13",
														"type": ""
													}
												],
												"src": "8292:129:13"
											},
											{
												"body": {
													"nativeSrc": "8509:229:13",
													"nodeType": "YulBlock",
													"src": "8509:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8614:22:13",
																"nodeType": "YulBlock",
																"src": "8614:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8616:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8616:16:13"
																			},
																			"nativeSrc": "8616:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8616:18:13"
																		},
																		"nativeSrc": "8616:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8616:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8586:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8586:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8594:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8583:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8583:2:13"
																},
																"nativeSrc": "8583:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8583:30:13"
															},
															"nativeSrc": "8580:56:13",
															"nodeType": "YulIf",
															"src": "8580:56:13"
														},
														{
															"nativeSrc": "8646:25:13",
															"nodeType": "YulAssignment",
															"src": "8646:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8658:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8658:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8666:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8666:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8654:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8654:3:13"
																},
																"nativeSrc": "8654:17:13",
																"nodeType": "YulFunctionCall",
																"src": "8654:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8646:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8646:4:13"
																}
															]
														},
														{
															"nativeSrc": "8708:23:13",
															"nodeType": "YulAssignment",
															"src": "8708:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8720:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8720:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8726:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:13"
																},
																"nativeSrc": "8716:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8716:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8427:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8493:6:13",
														"nodeType": "YulTypedName",
														"src": "8493:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8504:4:13",
														"nodeType": "YulTypedName",
														"src": "8504:4:13",
														"type": ""
													}
												],
												"src": "8427:311:13"
											},
											{
												"body": {
													"nativeSrc": "8833:28:13",
													"nodeType": "YulBlock",
													"src": "8833:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8850:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8853:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8853:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8843:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:13"
																},
																"nativeSrc": "8843:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8843:12:13"
															},
															"nativeSrc": "8843:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "8843:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "8744:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8744:117:13"
											},
											{
												"body": {
													"nativeSrc": "8986:608:13",
													"nodeType": "YulBlock",
													"src": "8986:608:13",
													"statements": [
														{
															"nativeSrc": "8996:90:13",
															"nodeType": "YulAssignment",
															"src": "8996:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9078:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9078:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "9021:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "9021:56:13"
																		},
																		"nativeSrc": "9021:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9021:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9005:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9005:15:13"
																},
																"nativeSrc": "9005:81:13",
																"nodeType": "YulFunctionCall",
																"src": "9005:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8996:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8996:5:13"
																}
															]
														},
														{
															"nativeSrc": "9095:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9095:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "9106:5:13",
																"nodeType": "YulIdentifier",
																"src": "9106:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9099:3:13",
																	"nodeType": "YulTypedName",
																	"src": "9099:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9128:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9128:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9135:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9135:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9121:6:13"
																},
																"nativeSrc": "9121:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9121:21:13"
															},
															"nativeSrc": "9121:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9121:21:13"
														},
														{
															"nativeSrc": "9151:23:13",
															"nodeType": "YulAssignment",
															"src": "9151:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9162:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9162:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9169:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9169:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9158:3:13"
																},
																"nativeSrc": "9158:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9158:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9151:3:13"
																}
															]
														},
														{
															"nativeSrc": "9184:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9184:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9202:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9202:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9214:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9214:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9222:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9222:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9210:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:13"
																		},
																		"nativeSrc": "9210:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9198:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9198:3:13"
																},
																"nativeSrc": "9198:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9198:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9188:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9188:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9256:103:13",
																"nodeType": "YulBlock",
																"src": "9256:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9270:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9270:77:13"
																			},
																			"nativeSrc": "9270:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9270:79:13"
																		},
																		"nativeSrc": "9270:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9270:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9243:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9243:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9251:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9251:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9240:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9240:2:13"
																},
																"nativeSrc": "9240:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9240:15:13"
															},
															"nativeSrc": "9237:122:13",
															"nodeType": "YulIf",
															"src": "9237:122:13"
														},
														{
															"body": {
																"nativeSrc": "9444:144:13",
																"nodeType": "YulBlock",
																"src": "9444:144:13",
																"statements": [
																	{
																		"nativeSrc": "9459:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9459:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "9477:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "9463:10:13",
																				"nodeType": "YulTypedName",
																				"src": "9463:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9501:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9501:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "9527:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "9527:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9539:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9539:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "9506:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "9506:20:13"
																					},
																					"nativeSrc": "9506:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9506:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9494:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9494:6:13"
																			},
																			"nativeSrc": "9494:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9494:50:13"
																		},
																		"nativeSrc": "9494:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9494:50:13"
																	},
																	{
																		"nativeSrc": "9557:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9557:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9568:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9568:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9573:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9573:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9564:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9564:3:13"
																			},
																			"nativeSrc": "9564:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9564:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "9557:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9557:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9397:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9397:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9402:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9394:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9394:2:13"
																},
																"nativeSrc": "9394:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9394:15:13"
															},
															"nativeSrc": "9368:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9410:25:13",
																"nodeType": "YulBlock",
																"src": "9410:25:13",
																"statements": [
																	{
																		"nativeSrc": "9412:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9412:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9423:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9423:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9428:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9428:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9419:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9419:3:13"
																			},
																			"nativeSrc": "9419:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9419:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9412:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9412:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9372:21:13",
																"nodeType": "YulBlock",
																"src": "9372:21:13",
																"statements": [
																	{
																		"nativeSrc": "9374:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9374:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9385:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9385:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9378:3:13",
																				"nodeType": "YulTypedName",
																				"src": "9378:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9368:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8884:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8956:6:13",
														"nodeType": "YulTypedName",
														"src": "8956:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8964:6:13",
														"nodeType": "YulTypedName",
														"src": "8964:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8972:3:13",
														"nodeType": "YulTypedName",
														"src": "8972:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8980:5:13",
														"nodeType": "YulTypedName",
														"src": "8980:5:13",
														"type": ""
													}
												],
												"src": "8884:710:13"
											},
											{
												"body": {
													"nativeSrc": "9694:293:13",
													"nodeType": "YulBlock",
													"src": "9694:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9743:83:13",
																"nodeType": "YulBlock",
																"src": "9743:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9745:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9745:77:13"
																			},
																			"nativeSrc": "9745:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9745:79:13"
																		},
																		"nativeSrc": "9745:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9745:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9722:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9722:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9730:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9730:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9718:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9718:3:13"
																				},
																				"nativeSrc": "9718:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9718:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9737:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9737:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9714:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9714:3:13"
																		},
																		"nativeSrc": "9714:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9714:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9707:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:13"
																},
																"nativeSrc": "9707:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9707:35:13"
															},
															"nativeSrc": "9704:122:13",
															"nodeType": "YulIf",
															"src": "9704:122:13"
														},
														{
															"nativeSrc": "9835:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9835:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9862:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9862:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9849:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9849:12:13"
																},
																"nativeSrc": "9849:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9849:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9839:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9839:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9878:103:13",
															"nodeType": "YulAssignment",
															"src": "9878:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9954:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9954:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9962:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9962:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:13"
																		},
																		"nativeSrc": "9950:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9950:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9969:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9969:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9977:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9977:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "9887:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "9887:62:13"
																},
																"nativeSrc": "9887:94:13",
																"nodeType": "YulFunctionCall",
																"src": "9887:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9878:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9878:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9617:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9672:6:13",
														"nodeType": "YulTypedName",
														"src": "9672:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9680:3:13",
														"nodeType": "YulTypedName",
														"src": "9680:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9688:5:13",
														"nodeType": "YulTypedName",
														"src": "9688:5:13",
														"type": ""
													}
												],
												"src": "9617:370:13"
											},
											{
												"body": {
													"nativeSrc": "10075:229:13",
													"nodeType": "YulBlock",
													"src": "10075:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10180:22:13",
																"nodeType": "YulBlock",
																"src": "10180:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10182:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10182:16:13"
																			},
																			"nativeSrc": "10182:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10182:18:13"
																		},
																		"nativeSrc": "10182:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10182:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10152:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10152:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10160:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10160:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10149:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10149:2:13"
																},
																"nativeSrc": "10149:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10149:30:13"
															},
															"nativeSrc": "10146:56:13",
															"nodeType": "YulIf",
															"src": "10146:56:13"
														},
														{
															"nativeSrc": "10212:25:13",
															"nodeType": "YulAssignment",
															"src": "10212:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10224:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10232:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10232:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10220:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10220:3:13"
																},
																"nativeSrc": "10220:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10220:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10212:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10212:4:13"
																}
															]
														},
														{
															"nativeSrc": "10274:23:13",
															"nodeType": "YulAssignment",
															"src": "10274:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10286:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10286:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10292:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10292:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:13"
																},
																"nativeSrc": "10282:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10282:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10274:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10274:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9993:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10059:6:13",
														"nodeType": "YulTypedName",
														"src": "10059:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10070:4:13",
														"nodeType": "YulTypedName",
														"src": "10070:4:13",
														"type": ""
													}
												],
												"src": "9993:311:13"
											},
											{
												"body": {
													"nativeSrc": "10429:608:13",
													"nodeType": "YulBlock",
													"src": "10429:608:13",
													"statements": [
														{
															"nativeSrc": "10439:90:13",
															"nodeType": "YulAssignment",
															"src": "10439:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10464:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "10464:56:13"
																		},
																		"nativeSrc": "10464:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10464:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10448:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10448:15:13"
																},
																"nativeSrc": "10448:81:13",
																"nodeType": "YulFunctionCall",
																"src": "10448:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10439:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10439:5:13"
																}
															]
														},
														{
															"nativeSrc": "10538:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10538:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "10549:5:13",
																"nodeType": "YulIdentifier",
																"src": "10549:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10542:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10542:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10571:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10571:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10578:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10578:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10564:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10564:6:13"
																},
																"nativeSrc": "10564:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10564:21:13"
															},
															"nativeSrc": "10564:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10564:21:13"
														},
														{
															"nativeSrc": "10594:23:13",
															"nodeType": "YulAssignment",
															"src": "10594:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10605:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10605:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10612:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10612:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10601:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:13"
																},
																"nativeSrc": "10601:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10601:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:13"
																}
															]
														},
														{
															"nativeSrc": "10627:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10627:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10645:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10645:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10657:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10657:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10665:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10665:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10653:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:13"
																		},
																		"nativeSrc": "10653:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10641:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10641:3:13"
																},
																"nativeSrc": "10641:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10641:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10631:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10631:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10699:103:13",
																"nodeType": "YulBlock",
																"src": "10699:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10713:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10713:77:13"
																			},
																			"nativeSrc": "10713:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10713:79:13"
																		},
																		"nativeSrc": "10713:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10713:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10686:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10686:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10694:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10694:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10683:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10683:2:13"
																},
																"nativeSrc": "10683:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10683:15:13"
															},
															"nativeSrc": "10680:122:13",
															"nodeType": "YulIf",
															"src": "10680:122:13"
														},
														{
															"body": {
																"nativeSrc": "10887:144:13",
																"nodeType": "YulBlock",
																"src": "10887:144:13",
																"statements": [
																	{
																		"nativeSrc": "10902:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10902:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "10920:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10920:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10906:10:13",
																				"nodeType": "YulTypedName",
																				"src": "10906:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10944:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10944:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10970:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "10970:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10982:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10982:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "10949:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "10949:20:13"
																					},
																					"nativeSrc": "10949:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10949:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10937:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10937:6:13"
																			},
																			"nativeSrc": "10937:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10937:50:13"
																		},
																		"nativeSrc": "10937:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10937:50:13"
																	},
																	{
																		"nativeSrc": "11000:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11000:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11011:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11011:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11016:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11016:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11007:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11007:3:13"
																			},
																			"nativeSrc": "11007:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11007:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11000:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11000:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10840:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10840:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10845:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10845:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10837:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10837:2:13"
																},
																"nativeSrc": "10837:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10837:15:13"
															},
															"nativeSrc": "10811:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10853:25:13",
																"nodeType": "YulBlock",
																"src": "10853:25:13",
																"statements": [
																	{
																		"nativeSrc": "10855:21:13",
																		"nodeType": "YulAssignment",
																		"src": "10855:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10866:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10871:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10871:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10862:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10862:3:13"
																			},
																			"nativeSrc": "10862:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10862:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10855:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10815:21:13",
																"nodeType": "YulBlock",
																"src": "10815:21:13",
																"statements": [
																	{
																		"nativeSrc": "10817:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10817:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10828:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10828:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10821:3:13",
																				"nodeType": "YulTypedName",
																				"src": "10821:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10811:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10327:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10399:6:13",
														"nodeType": "YulTypedName",
														"src": "10399:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10407:6:13",
														"nodeType": "YulTypedName",
														"src": "10407:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10415:3:13",
														"nodeType": "YulTypedName",
														"src": "10415:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10423:5:13",
														"nodeType": "YulTypedName",
														"src": "10423:5:13",
														"type": ""
													}
												],
												"src": "10327:710:13"
											},
											{
												"body": {
													"nativeSrc": "11137:293:13",
													"nodeType": "YulBlock",
													"src": "11137:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11186:83:13",
																"nodeType": "YulBlock",
																"src": "11186:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11188:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11188:77:13"
																			},
																			"nativeSrc": "11188:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11188:79:13"
																		},
																		"nativeSrc": "11188:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11188:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11165:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11165:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11173:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11173:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11161:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11161:3:13"
																				},
																				"nativeSrc": "11161:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11161:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11180:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11180:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11157:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:13"
																		},
																		"nativeSrc": "11157:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11157:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:13"
																},
																"nativeSrc": "11150:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11150:35:13"
															},
															"nativeSrc": "11147:122:13",
															"nodeType": "YulIf",
															"src": "11147:122:13"
														},
														{
															"nativeSrc": "11278:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11278:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11305:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11305:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11292:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11292:12:13"
																},
																"nativeSrc": "11292:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11292:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11282:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11282:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11321:103:13",
															"nodeType": "YulAssignment",
															"src": "11321:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11397:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11397:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11405:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11405:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11393:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11393:3:13"
																		},
																		"nativeSrc": "11393:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11393:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11412:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11412:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11420:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11420:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11330:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "11330:62:13"
																},
																"nativeSrc": "11330:94:13",
																"nodeType": "YulFunctionCall",
																"src": "11330:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11321:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11321:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11060:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11115:6:13",
														"nodeType": "YulTypedName",
														"src": "11115:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11123:3:13",
														"nodeType": "YulTypedName",
														"src": "11123:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11131:5:13",
														"nodeType": "YulTypedName",
														"src": "11131:5:13",
														"type": ""
													}
												],
												"src": "11060:370:13"
											},
											{
												"body": {
													"nativeSrc": "11569:761:13",
													"nodeType": "YulBlock",
													"src": "11569:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11615:83:13",
																"nodeType": "YulBlock",
																"src": "11615:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11617:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11617:77:13"
																			},
																			"nativeSrc": "11617:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11617:79:13"
																		},
																		"nativeSrc": "11617:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11617:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11590:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11590:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11599:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11599:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11586:3:13"
																		},
																		"nativeSrc": "11586:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11586:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11611:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11582:3:13"
																},
																"nativeSrc": "11582:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11582:32:13"
															},
															"nativeSrc": "11579:119:13",
															"nodeType": "YulIf",
															"src": "11579:119:13"
														},
														{
															"nativeSrc": "11708:302:13",
															"nodeType": "YulBlock",
															"src": "11708:302:13",
															"statements": [
																{
																	"nativeSrc": "11723:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11723:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11754:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11754:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11765:1:13",
																						"nodeType": "YulLiteral",
																						"src": "11765:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11750:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11750:3:13"
																				},
																				"nativeSrc": "11750:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11750:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11737:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11737:12:13"
																		},
																		"nativeSrc": "11737:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11737:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11727:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11727:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11815:83:13",
																		"nodeType": "YulBlock",
																		"src": "11815:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11817:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11817:77:13"
																					},
																					"nativeSrc": "11817:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11817:79:13"
																				},
																				"nativeSrc": "11817:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11817:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11787:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11787:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11795:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11795:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11784:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11784:2:13"
																		},
																		"nativeSrc": "11784:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11784:30:13"
																	},
																	"nativeSrc": "11781:117:13",
																	"nodeType": "YulIf",
																	"src": "11781:117:13"
																},
																{
																	"nativeSrc": "11912:88:13",
																	"nodeType": "YulAssignment",
																	"src": "11912:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11972:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11972:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11983:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11983:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11968:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11968:3:13"
																				},
																				"nativeSrc": "11968:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11968:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11992:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11992:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11922:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "11922:45:13"
																		},
																		"nativeSrc": "11922:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11922:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11912:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11912:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12020:303:13",
															"nodeType": "YulBlock",
															"src": "12020:303:13",
															"statements": [
																{
																	"nativeSrc": "12035:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12035:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12066:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12066:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12077:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12077:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12062:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12062:3:13"
																				},
																				"nativeSrc": "12062:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12062:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12049:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12049:12:13"
																		},
																		"nativeSrc": "12049:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12049:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12039:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12039:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12128:83:13",
																		"nodeType": "YulBlock",
																		"src": "12128:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12130:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12130:77:13"
																					},
																					"nativeSrc": "12130:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12130:79:13"
																				},
																				"nativeSrc": "12130:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12130:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12100:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12100:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12108:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12108:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12097:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12097:2:13"
																		},
																		"nativeSrc": "12097:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12097:30:13"
																	},
																	"nativeSrc": "12094:117:13",
																	"nodeType": "YulIf",
																	"src": "12094:117:13"
																},
																{
																	"nativeSrc": "12225:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12225:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12285:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12285:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12296:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12296:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12281:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12281:3:13"
																				},
																				"nativeSrc": "12281:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12281:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12305:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12305:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12235:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12235:45:13"
																		},
																		"nativeSrc": "12235:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12235:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12225:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12225:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11436:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11531:9:13",
														"nodeType": "YulTypedName",
														"src": "11531:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11542:7:13",
														"nodeType": "YulTypedName",
														"src": "11542:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11554:6:13",
														"nodeType": "YulTypedName",
														"src": "11554:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11562:6:13",
														"nodeType": "YulTypedName",
														"src": "11562:6:13",
														"type": ""
													}
												],
												"src": "11436:894:13"
											},
											{
												"body": {
													"nativeSrc": "12401:53:13",
													"nodeType": "YulBlock",
													"src": "12401:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12418:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12418:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12441:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12441:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12423:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12423:17:13"
																		},
																		"nativeSrc": "12423:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12423:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12411:6:13"
																},
																"nativeSrc": "12411:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12411:37:13"
															},
															"nativeSrc": "12411:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12411:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12336:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12389:5:13",
														"nodeType": "YulTypedName",
														"src": "12389:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12396:3:13",
														"nodeType": "YulTypedName",
														"src": "12396:3:13",
														"type": ""
													}
												],
												"src": "12336:118:13"
											},
											{
												"body": {
													"nativeSrc": "12558:124:13",
													"nodeType": "YulBlock",
													"src": "12558:124:13",
													"statements": [
														{
															"nativeSrc": "12568:26:13",
															"nodeType": "YulAssignment",
															"src": "12568:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12580:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12580:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12591:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12591:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12576:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:13"
																},
																"nativeSrc": "12576:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12576:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12568:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12568:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12648:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12648:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12661:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12661:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12672:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12672:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12657:3:13"
																		},
																		"nativeSrc": "12657:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12657:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12604:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12604:43:13"
																},
																"nativeSrc": "12604:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12604:71:13"
															},
															"nativeSrc": "12604:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12604:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12460:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12530:9:13",
														"nodeType": "YulTypedName",
														"src": "12530:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12542:6:13",
														"nodeType": "YulTypedName",
														"src": "12542:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12553:4:13",
														"nodeType": "YulTypedName",
														"src": "12553:4:13",
														"type": ""
													}
												],
												"src": "12460:222:13"
											},
											{
												"body": {
													"nativeSrc": "12771:391:13",
													"nodeType": "YulBlock",
													"src": "12771:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12817:83:13",
																"nodeType": "YulBlock",
																"src": "12817:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12819:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12819:77:13"
																			},
																			"nativeSrc": "12819:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12819:79:13"
																		},
																		"nativeSrc": "12819:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12819:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12792:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12792:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:13"
																		},
																		"nativeSrc": "12788:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12813:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12813:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:13"
																},
																"nativeSrc": "12784:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12784:32:13"
															},
															"nativeSrc": "12781:119:13",
															"nodeType": "YulIf",
															"src": "12781:119:13"
														},
														{
															"nativeSrc": "12910:117:13",
															"nodeType": "YulBlock",
															"src": "12910:117:13",
															"statements": [
																{
																	"nativeSrc": "12925:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12925:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12939:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12939:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12929:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12954:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12954:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12989:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12989:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13000:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13000:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12985:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12985:3:13"
																				},
																				"nativeSrc": "12985:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12985:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13009:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13009:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12964:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12964:20:13"
																		},
																		"nativeSrc": "12964:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12954:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12954:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13037:118:13",
															"nodeType": "YulBlock",
															"src": "13037:118:13",
															"statements": [
																{
																	"nativeSrc": "13052:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13052:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13066:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13066:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13056:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13056:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13082:63:13",
																	"nodeType": "YulAssignment",
																	"src": "13082:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13117:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13117:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13128:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13128:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13113:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13113:3:13"
																				},
																				"nativeSrc": "13113:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13113:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13137:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13137:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13092:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "13092:20:13"
																		},
																		"nativeSrc": "13092:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13092:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13082:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13082:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12688:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12733:9:13",
														"nodeType": "YulTypedName",
														"src": "12733:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12744:7:13",
														"nodeType": "YulTypedName",
														"src": "12744:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12756:6:13",
														"nodeType": "YulTypedName",
														"src": "12756:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12764:6:13",
														"nodeType": "YulTypedName",
														"src": "12764:6:13",
														"type": ""
													}
												],
												"src": "12688:474:13"
											},
											{
												"body": {
													"nativeSrc": "13196:152:13",
													"nodeType": "YulBlock",
													"src": "13196:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13216:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13216:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:13"
																},
																"nativeSrc": "13206:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13206:88:13"
															},
															"nativeSrc": "13206:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13206:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13310:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13310:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13313:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13313:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:13"
																},
																"nativeSrc": "13303:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13303:15:13"
															},
															"nativeSrc": "13303:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13303:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13334:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13334:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13337:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13337:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:13"
																},
																"nativeSrc": "13327:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13327:15:13"
															},
															"nativeSrc": "13327:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13327:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13168:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13168:180:13"
											},
											{
												"body": {
													"nativeSrc": "13405:269:13",
													"nodeType": "YulBlock",
													"src": "13405:269:13",
													"statements": [
														{
															"nativeSrc": "13415:22:13",
															"nodeType": "YulAssignment",
															"src": "13415:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13429:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13429:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13425:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13425:3:13"
																},
																"nativeSrc": "13425:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13425:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:13"
																}
															]
														},
														{
															"nativeSrc": "13446:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13446:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13476:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13476:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13482:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13472:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:13"
																},
																"nativeSrc": "13472:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13472:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13450:18:13",
																	"nodeType": "YulTypedName",
																	"src": "13450:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13523:51:13",
																"nodeType": "YulBlock",
																"src": "13523:51:13",
																"statements": [
																	{
																		"nativeSrc": "13537:27:13",
																		"nodeType": "YulAssignment",
																		"src": "13537:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13551:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13551:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13559:4:13",
																					"nodeType": "YulLiteral",
																					"src": "13559:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13547:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13547:3:13"
																			},
																			"nativeSrc": "13547:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13547:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13537:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13537:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13503:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13503:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13496:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:13"
																},
																"nativeSrc": "13496:26:13",
																"nodeType": "YulFunctionCall",
																"src": "13496:26:13"
															},
															"nativeSrc": "13493:81:13",
															"nodeType": "YulIf",
															"src": "13493:81:13"
														},
														{
															"body": {
																"nativeSrc": "13626:42:13",
																"nodeType": "YulBlock",
																"src": "13626:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13640:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13640:16:13"
																			},
																			"nativeSrc": "13640:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13640:18:13"
																		},
																		"nativeSrc": "13640:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13640:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13590:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13590:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13613:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13621:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13610:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13610:2:13"
																		},
																		"nativeSrc": "13610:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13587:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13587:2:13"
																},
																"nativeSrc": "13587:38:13",
																"nodeType": "YulFunctionCall",
																"src": "13587:38:13"
															},
															"nativeSrc": "13584:84:13",
															"nodeType": "YulIf",
															"src": "13584:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13354:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13389:4:13",
														"nodeType": "YulTypedName",
														"src": "13389:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13398:6:13",
														"nodeType": "YulTypedName",
														"src": "13398:6:13",
														"type": ""
													}
												],
												"src": "13354:320:13"
											},
											{
												"body": {
													"nativeSrc": "13708:152:13",
													"nodeType": "YulBlock",
													"src": "13708:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13725:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13725:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13728:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13728:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13718:6:13"
																},
																"nativeSrc": "13718:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13718:88:13"
															},
															"nativeSrc": "13718:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13718:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13822:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13822:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13825:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13825:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13815:6:13"
																},
																"nativeSrc": "13815:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13815:15:13"
															},
															"nativeSrc": "13815:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13815:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13846:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13846:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13849:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13849:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13839:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13839:6:13"
																},
																"nativeSrc": "13839:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13839:15:13"
															},
															"nativeSrc": "13839:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13839:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13680:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13680:180:13"
											},
											{
												"body": {
													"nativeSrc": "13914:362:13",
													"nodeType": "YulBlock",
													"src": "13914:362:13",
													"statements": [
														{
															"nativeSrc": "13924:25:13",
															"nodeType": "YulAssignment",
															"src": "13924:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13947:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13947:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13929:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13929:17:13"
																},
																"nativeSrc": "13929:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13929:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13924:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13924:1:13"
																}
															]
														},
														{
															"nativeSrc": "13958:25:13",
															"nodeType": "YulAssignment",
															"src": "13958:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13981:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13981:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13963:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13963:17:13"
																},
																"nativeSrc": "13963:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13963:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13958:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13958:1:13"
																}
															]
														},
														{
															"nativeSrc": "13992:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13992:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14015:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14015:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14018:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14018:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:13"
																},
																"nativeSrc": "14011:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14011:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13996:11:13",
																	"nodeType": "YulTypedName",
																	"src": "13996:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14029:41:13",
															"nodeType": "YulAssignment",
															"src": "14029:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14058:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "14058:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14040:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14040:17:13"
																},
																"nativeSrc": "14040:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14040:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14029:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "14029:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14247:22:13",
																"nodeType": "YulBlock",
																"src": "14247:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14249:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14249:16:13"
																			},
																			"nativeSrc": "14249:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14249:18:13"
																		},
																		"nativeSrc": "14249:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14249:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14180:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "14180:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14173:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14173:6:13"
																				},
																				"nativeSrc": "14173:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14173:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14203:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "14203:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14210:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "14210:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14219:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "14219:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14206:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14206:3:13"
																						},
																						"nativeSrc": "14206:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "14206:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14200:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14200:2:13"
																				},
																				"nativeSrc": "14200:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14200:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14153:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14153:2:13"
																		},
																		"nativeSrc": "14153:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14133:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14133:6:13"
																},
																"nativeSrc": "14133:113:13",
																"nodeType": "YulFunctionCall",
																"src": "14133:113:13"
															},
															"nativeSrc": "14130:139:13",
															"nodeType": "YulIf",
															"src": "14130:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13866:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13897:1:13",
														"nodeType": "YulTypedName",
														"src": "13897:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13900:1:13",
														"nodeType": "YulTypedName",
														"src": "13900:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13906:7:13",
														"nodeType": "YulTypedName",
														"src": "13906:7:13",
														"type": ""
													}
												],
												"src": "13866:410:13"
											},
											{
												"body": {
													"nativeSrc": "14436:288:13",
													"nodeType": "YulBlock",
													"src": "14436:288:13",
													"statements": [
														{
															"nativeSrc": "14446:26:13",
															"nodeType": "YulAssignment",
															"src": "14446:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14458:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14458:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14469:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14469:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14454:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14454:3:13"
																},
																"nativeSrc": "14454:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14454:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14446:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14446:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14526:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14526:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14539:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14539:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14550:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14550:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14535:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14535:3:13"
																		},
																		"nativeSrc": "14535:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14535:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14482:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14482:43:13"
																},
																"nativeSrc": "14482:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14482:71:13"
															},
															"nativeSrc": "14482:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14482:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14607:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14607:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14620:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14620:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14631:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14631:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14616:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14616:3:13"
																		},
																		"nativeSrc": "14616:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14616:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14563:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14563:43:13"
																},
																"nativeSrc": "14563:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14563:72:13"
															},
															"nativeSrc": "14563:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14563:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14689:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14689:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14702:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14702:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14713:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14713:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14698:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:13"
																		},
																		"nativeSrc": "14698:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14698:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14645:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14645:43:13"
																},
																"nativeSrc": "14645:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14645:72:13"
															},
															"nativeSrc": "14645:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14645:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14282:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14392:9:13",
														"nodeType": "YulTypedName",
														"src": "14392:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14404:6:13",
														"nodeType": "YulTypedName",
														"src": "14404:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14412:6:13",
														"nodeType": "YulTypedName",
														"src": "14412:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14420:6:13",
														"nodeType": "YulTypedName",
														"src": "14420:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14431:4:13",
														"nodeType": "YulTypedName",
														"src": "14431:4:13",
														"type": ""
													}
												],
												"src": "14282:442:13"
											},
											{
												"body": {
													"nativeSrc": "14770:76:13",
													"nodeType": "YulBlock",
													"src": "14770:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14824:16:13",
																"nodeType": "YulBlock",
																"src": "14824:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14833:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14833:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14836:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14836:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14826:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14826:6:13"
																			},
																			"nativeSrc": "14826:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14826:12:13"
																		},
																		"nativeSrc": "14826:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14826:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14793:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14793:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14815:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14815:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14800:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "14800:14:13"
																				},
																				"nativeSrc": "14800:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14800:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14790:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14790:2:13"
																		},
																		"nativeSrc": "14790:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14790:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14783:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:13"
																},
																"nativeSrc": "14783:40:13",
																"nodeType": "YulFunctionCall",
																"src": "14783:40:13"
															},
															"nativeSrc": "14780:60:13",
															"nodeType": "YulIf",
															"src": "14780:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14730:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14763:5:13",
														"nodeType": "YulTypedName",
														"src": "14763:5:13",
														"type": ""
													}
												],
												"src": "14730:116:13"
											},
											{
												"body": {
													"nativeSrc": "14912:77:13",
													"nodeType": "YulBlock",
													"src": "14912:77:13",
													"statements": [
														{
															"nativeSrc": "14922:22:13",
															"nodeType": "YulAssignment",
															"src": "14922:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14937:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14937:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14931:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14931:5:13"
																},
																"nativeSrc": "14931:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14931:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14922:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14922:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14977:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14977:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14953:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "14953:23:13"
																},
																"nativeSrc": "14953:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14953:30:13"
															},
															"nativeSrc": "14953:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14953:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14852:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14890:6:13",
														"nodeType": "YulTypedName",
														"src": "14890:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14898:3:13",
														"nodeType": "YulTypedName",
														"src": "14898:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14906:5:13",
														"nodeType": "YulTypedName",
														"src": "14906:5:13",
														"type": ""
													}
												],
												"src": "14852:137:13"
											},
											{
												"body": {
													"nativeSrc": "15069:271:13",
													"nodeType": "YulBlock",
													"src": "15069:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15115:83:13",
																"nodeType": "YulBlock",
																"src": "15115:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15117:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "15117:77:13"
																			},
																			"nativeSrc": "15117:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15117:79:13"
																		},
																		"nativeSrc": "15117:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15117:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15090:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15090:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15099:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15099:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15086:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:13"
																		},
																		"nativeSrc": "15086:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15086:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15082:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15082:3:13"
																},
																"nativeSrc": "15082:32:13",
																"nodeType": "YulFunctionCall",
																"src": "15082:32:13"
															},
															"nativeSrc": "15079:119:13",
															"nodeType": "YulIf",
															"src": "15079:119:13"
														},
														{
															"nativeSrc": "15208:125:13",
															"nodeType": "YulBlock",
															"src": "15208:125:13",
															"statements": [
																{
																	"nativeSrc": "15223:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15223:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15237:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15237:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15227:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15227:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15252:71:13",
																	"nodeType": "YulAssignment",
																	"src": "15252:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15295:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15295:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15306:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15306:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15291:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15291:3:13"
																				},
																				"nativeSrc": "15291:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15291:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15315:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15315:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15262:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "15262:28:13"
																		},
																		"nativeSrc": "15262:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15262:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15252:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15252:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14995:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15039:9:13",
														"nodeType": "YulTypedName",
														"src": "15039:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15050:7:13",
														"nodeType": "YulTypedName",
														"src": "15050:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15062:6:13",
														"nodeType": "YulTypedName",
														"src": "15062:6:13",
														"type": ""
													}
												],
												"src": "14995:345:13"
											},
											{
												"body": {
													"nativeSrc": "15452:71:13",
													"nodeType": "YulBlock",
													"src": "15452:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15474:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15474:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15482:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15482:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15470:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15470:3:13"
																		},
																		"nativeSrc": "15470:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15470:14:13"
																	},
																	{
																		"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15486:29:13",
																		"nodeType": "YulLiteral",
																		"src": "15486:29:13",
																		"type": "",
																		"value": "Stable coin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15463:6:13"
																},
																"nativeSrc": "15463:53:13",
																"nodeType": "YulFunctionCall",
																"src": "15463:53:13"
															},
															"nativeSrc": "15463:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "15463:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
												"nativeSrc": "15346:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15444:6:13",
														"nodeType": "YulTypedName",
														"src": "15444:6:13",
														"type": ""
													}
												],
												"src": "15346:177:13"
											},
											{
												"body": {
													"nativeSrc": "15675:220:13",
													"nodeType": "YulBlock",
													"src": "15675:220:13",
													"statements": [
														{
															"nativeSrc": "15685:74:13",
															"nodeType": "YulAssignment",
															"src": "15685:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15751:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15751:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15756:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15692:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15692:58:13"
																},
																"nativeSrc": "15692:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15692:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15685:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15685:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15857:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15857:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																	"nativeSrc": "15768:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15768:88:13"
																},
																"nativeSrc": "15768:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15768:93:13"
															},
															"nativeSrc": "15768:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15768:93:13"
														},
														{
															"nativeSrc": "15870:19:13",
															"nodeType": "YulAssignment",
															"src": "15870:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15881:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15881:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15886:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:13"
																},
																"nativeSrc": "15877:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15877:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15870:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15870:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15529:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15663:3:13",
														"nodeType": "YulTypedName",
														"src": "15663:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15671:3:13",
														"nodeType": "YulTypedName",
														"src": "15671:3:13",
														"type": ""
													}
												],
												"src": "15529:366:13"
											},
											{
												"body": {
													"nativeSrc": "16072:248:13",
													"nodeType": "YulBlock",
													"src": "16072:248:13",
													"statements": [
														{
															"nativeSrc": "16082:26:13",
															"nodeType": "YulAssignment",
															"src": "16082:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16094:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16094:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16105:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16105:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16090:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:13"
																},
																"nativeSrc": "16090:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16090:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16082:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16082:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16129:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16129:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16140:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16140:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16125:3:13"
																		},
																		"nativeSrc": "16125:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16125:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16148:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16148:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16154:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16154:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16144:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16144:3:13"
																		},
																		"nativeSrc": "16144:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16144:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:13"
																},
																"nativeSrc": "16118:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16118:47:13"
															},
															"nativeSrc": "16118:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16118:47:13"
														},
														{
															"nativeSrc": "16174:139:13",
															"nodeType": "YulAssignment",
															"src": "16174:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16308:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16308:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16182:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16182:124:13"
																},
																"nativeSrc": "16182:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16182:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16174:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16174:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15901:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16052:9:13",
														"nodeType": "YulTypedName",
														"src": "16052:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16067:4:13",
														"nodeType": "YulTypedName",
														"src": "16067:4:13",
														"type": ""
													}
												],
												"src": "15901:419:13"
											},
											{
												"body": {
													"nativeSrc": "16452:206:13",
													"nodeType": "YulBlock",
													"src": "16452:206:13",
													"statements": [
														{
															"nativeSrc": "16462:26:13",
															"nodeType": "YulAssignment",
															"src": "16462:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16474:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16474:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16485:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16485:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16470:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16470:3:13"
																},
																"nativeSrc": "16470:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16470:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16462:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16462:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16542:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16542:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16555:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16555:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16566:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16566:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16551:3:13"
																		},
																		"nativeSrc": "16551:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16551:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16498:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16498:43:13"
																},
																"nativeSrc": "16498:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16498:71:13"
															},
															"nativeSrc": "16498:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16498:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16623:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16623:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16636:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16636:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16647:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16647:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16632:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16632:3:13"
																		},
																		"nativeSrc": "16632:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16632:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16579:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16579:43:13"
																},
																"nativeSrc": "16579:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16579:72:13"
															},
															"nativeSrc": "16579:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16579:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16326:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16416:9:13",
														"nodeType": "YulTypedName",
														"src": "16416:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16428:6:13",
														"nodeType": "YulTypedName",
														"src": "16428:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16436:6:13",
														"nodeType": "YulTypedName",
														"src": "16436:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16447:4:13",
														"nodeType": "YulTypedName",
														"src": "16447:4:13",
														"type": ""
													}
												],
												"src": "16326:332:13"
											},
											{
												"body": {
													"nativeSrc": "16770:70:13",
													"nodeType": "YulBlock",
													"src": "16770:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16792:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16792:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16800:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16800:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16788:3:13"
																		},
																		"nativeSrc": "16788:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16788:14:13"
																	},
																	{
																		"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16804:28:13",
																		"nodeType": "YulLiteral",
																		"src": "16804:28:13",
																		"type": "",
																		"value": "Bond token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16781:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16781:6:13"
																},
																"nativeSrc": "16781:52:13",
																"nodeType": "YulFunctionCall",
																"src": "16781:52:13"
															},
															"nativeSrc": "16781:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "16781:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
												"nativeSrc": "16664:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16762:6:13",
														"nodeType": "YulTypedName",
														"src": "16762:6:13",
														"type": ""
													}
												],
												"src": "16664:176:13"
											},
											{
												"body": {
													"nativeSrc": "16992:220:13",
													"nodeType": "YulBlock",
													"src": "16992:220:13",
													"statements": [
														{
															"nativeSrc": "17002:74:13",
															"nodeType": "YulAssignment",
															"src": "17002:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17068:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17068:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17073:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17009:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17009:58:13"
																},
																"nativeSrc": "17009:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17009:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17002:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17002:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17174:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17174:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																	"nativeSrc": "17085:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17085:88:13"
																},
																"nativeSrc": "17085:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17085:93:13"
															},
															"nativeSrc": "17085:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17085:93:13"
														},
														{
															"nativeSrc": "17187:19:13",
															"nodeType": "YulAssignment",
															"src": "17187:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17198:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17198:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17203:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17203:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17194:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17194:3:13"
																},
																"nativeSrc": "17194:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17194:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17187:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16846:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16980:3:13",
														"nodeType": "YulTypedName",
														"src": "16980:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16988:3:13",
														"nodeType": "YulTypedName",
														"src": "16988:3:13",
														"type": ""
													}
												],
												"src": "16846:366:13"
											},
											{
												"body": {
													"nativeSrc": "17389:248:13",
													"nodeType": "YulBlock",
													"src": "17389:248:13",
													"statements": [
														{
															"nativeSrc": "17399:26:13",
															"nodeType": "YulAssignment",
															"src": "17399:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17411:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17411:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17422:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17422:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17407:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17407:3:13"
																},
																"nativeSrc": "17407:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17407:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17399:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17399:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17446:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17446:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17457:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17457:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17442:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17442:3:13"
																		},
																		"nativeSrc": "17442:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17442:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17465:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17465:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17471:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17471:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17461:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17461:3:13"
																		},
																		"nativeSrc": "17461:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17461:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17435:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17435:6:13"
																},
																"nativeSrc": "17435:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17435:47:13"
															},
															"nativeSrc": "17435:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17435:47:13"
														},
														{
															"nativeSrc": "17491:139:13",
															"nodeType": "YulAssignment",
															"src": "17491:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17625:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17625:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17499:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17499:124:13"
																},
																"nativeSrc": "17499:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17499:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17491:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17491:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17218:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17369:9:13",
														"nodeType": "YulTypedName",
														"src": "17369:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17384:4:13",
														"nodeType": "YulTypedName",
														"src": "17384:4:13",
														"type": ""
													}
												],
												"src": "17218:419:13"
											},
											{
												"body": {
													"nativeSrc": "17749:122:13",
													"nodeType": "YulBlock",
													"src": "17749:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17771:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17771:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17779:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17779:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17767:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17767:3:13"
																		},
																		"nativeSrc": "17767:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17767:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468",
																		"kind": "string",
																		"nativeSrc": "17783:34:13",
																		"nodeType": "YulLiteral",
																		"src": "17783:34:13",
																		"type": "",
																		"value": "Token holders and amounts length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17760:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17760:6:13"
																},
																"nativeSrc": "17760:58:13",
																"nodeType": "YulFunctionCall",
																"src": "17760:58:13"
															},
															"nativeSrc": "17760:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "17760:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17839:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17847:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17847:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17835:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17835:3:13"
																		},
																		"nativeSrc": "17835:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17835:15:13"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "17852:11:13",
																		"nodeType": "YulLiteral",
																		"src": "17852:11:13",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17828:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17828:6:13"
																},
																"nativeSrc": "17828:36:13",
																"nodeType": "YulFunctionCall",
																"src": "17828:36:13"
															},
															"nativeSrc": "17828:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "17828:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
												"nativeSrc": "17643:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17741:6:13",
														"nodeType": "YulTypedName",
														"src": "17741:6:13",
														"type": ""
													}
												],
												"src": "17643:228:13"
											},
											{
												"body": {
													"nativeSrc": "18023:220:13",
													"nodeType": "YulBlock",
													"src": "18023:220:13",
													"statements": [
														{
															"nativeSrc": "18033:74:13",
															"nodeType": "YulAssignment",
															"src": "18033:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18099:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18099:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18104:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18104:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18040:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18040:58:13"
																},
																"nativeSrc": "18040:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18040:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18205:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18205:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																	"nativeSrc": "18116:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18116:88:13"
																},
																"nativeSrc": "18116:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18116:93:13"
															},
															"nativeSrc": "18116:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18116:93:13"
														},
														{
															"nativeSrc": "18218:19:13",
															"nodeType": "YulAssignment",
															"src": "18218:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18229:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18229:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18234:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18234:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18225:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18225:3:13"
																},
																"nativeSrc": "18225:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18225:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18218:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17877:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18011:3:13",
														"nodeType": "YulTypedName",
														"src": "18011:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18019:3:13",
														"nodeType": "YulTypedName",
														"src": "18019:3:13",
														"type": ""
													}
												],
												"src": "17877:366:13"
											},
											{
												"body": {
													"nativeSrc": "18420:248:13",
													"nodeType": "YulBlock",
													"src": "18420:248:13",
													"statements": [
														{
															"nativeSrc": "18430:26:13",
															"nodeType": "YulAssignment",
															"src": "18430:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18442:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18442:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18453:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18438:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18438:3:13"
																},
																"nativeSrc": "18438:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18438:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18430:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18430:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18477:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18477:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18488:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18488:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18473:3:13"
																		},
																		"nativeSrc": "18473:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18473:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18496:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18496:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18502:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18502:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18492:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18492:3:13"
																		},
																		"nativeSrc": "18492:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18492:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18466:6:13"
																},
																"nativeSrc": "18466:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18466:47:13"
															},
															"nativeSrc": "18466:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18466:47:13"
														},
														{
															"nativeSrc": "18522:139:13",
															"nodeType": "YulAssignment",
															"src": "18522:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18656:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18656:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18530:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18530:124:13"
																},
																"nativeSrc": "18530:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18530:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18522:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18522:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18249:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18400:9:13",
														"nodeType": "YulTypedName",
														"src": "18400:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18415:4:13",
														"nodeType": "YulTypedName",
														"src": "18415:4:13",
														"type": ""
													}
												],
												"src": "18249:419:13"
											},
											{
												"body": {
													"nativeSrc": "18702:152:13",
													"nodeType": "YulBlock",
													"src": "18702:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18719:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18719:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18722:77:13",
																		"nodeType": "YulLiteral",
																		"src": "18722:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18712:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18712:6:13"
																},
																"nativeSrc": "18712:88:13",
																"nodeType": "YulFunctionCall",
																"src": "18712:88:13"
															},
															"nativeSrc": "18712:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "18712:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18816:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18816:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18819:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18819:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18809:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18809:6:13"
																},
																"nativeSrc": "18809:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18809:15:13"
															},
															"nativeSrc": "18809:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18809:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18840:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18840:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18843:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18843:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18833:6:13"
																},
																"nativeSrc": "18833:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18833:15:13"
															},
															"nativeSrc": "18833:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18833:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18674:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18674:180:13"
											},
											{
												"body": {
													"nativeSrc": "18966:59:13",
													"nodeType": "YulBlock",
													"src": "18966:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18988:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18988:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18996:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18996:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18984:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18984:3:13"
																		},
																		"nativeSrc": "18984:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18984:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "19000:17:13",
																		"nodeType": "YulLiteral",
																		"src": "19000:17:13",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18977:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18977:6:13"
																},
																"nativeSrc": "18977:41:13",
																"nodeType": "YulFunctionCall",
																"src": "18977:41:13"
															},
															"nativeSrc": "18977:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "18977:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "18860:165:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18958:6:13",
														"nodeType": "YulTypedName",
														"src": "18958:6:13",
														"type": ""
													}
												],
												"src": "18860:165:13"
											},
											{
												"body": {
													"nativeSrc": "19177:220:13",
													"nodeType": "YulBlock",
													"src": "19177:220:13",
													"statements": [
														{
															"nativeSrc": "19187:74:13",
															"nodeType": "YulAssignment",
															"src": "19187:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19253:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19253:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19258:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19258:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19194:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19194:58:13"
																},
																"nativeSrc": "19194:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19194:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19187:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19359:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19359:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "19270:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19270:88:13"
																},
																"nativeSrc": "19270:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19270:93:13"
															},
															"nativeSrc": "19270:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19270:93:13"
														},
														{
															"nativeSrc": "19372:19:13",
															"nodeType": "YulAssignment",
															"src": "19372:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19383:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19383:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19388:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19388:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19379:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19379:3:13"
																},
																"nativeSrc": "19379:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19379:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19372:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19372:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19031:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19165:3:13",
														"nodeType": "YulTypedName",
														"src": "19165:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19173:3:13",
														"nodeType": "YulTypedName",
														"src": "19173:3:13",
														"type": ""
													}
												],
												"src": "19031:366:13"
											},
											{
												"body": {
													"nativeSrc": "19574:248:13",
													"nodeType": "YulBlock",
													"src": "19574:248:13",
													"statements": [
														{
															"nativeSrc": "19584:26:13",
															"nodeType": "YulAssignment",
															"src": "19584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19596:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19596:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19607:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19607:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19592:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19592:3:13"
																},
																"nativeSrc": "19592:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19584:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19584:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19631:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19631:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19642:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19642:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19627:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19627:3:13"
																		},
																		"nativeSrc": "19627:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19627:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19650:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19650:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19656:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19656:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19646:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19646:3:13"
																		},
																		"nativeSrc": "19646:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19646:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19620:6:13"
																},
																"nativeSrc": "19620:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19620:47:13"
															},
															"nativeSrc": "19620:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19620:47:13"
														},
														{
															"nativeSrc": "19676:139:13",
															"nodeType": "YulAssignment",
															"src": "19676:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19810:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19810:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19684:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19684:124:13"
																},
																"nativeSrc": "19684:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19684:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19676:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19676:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19403:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19554:9:13",
														"nodeType": "YulTypedName",
														"src": "19554:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19569:4:13",
														"nodeType": "YulTypedName",
														"src": "19569:4:13",
														"type": ""
													}
												],
												"src": "19403:419:13"
											},
											{
												"body": {
													"nativeSrc": "19934:68:13",
													"nodeType": "YulBlock",
													"src": "19934:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19956:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19956:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19964:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19964:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19952:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19952:3:13"
																		},
																		"nativeSrc": "19952:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19952:14:13"
																	},
																	{
																		"hexValue": "4d61747572697479206e6f74207965742072656163686564",
																		"kind": "string",
																		"nativeSrc": "19968:26:13",
																		"nodeType": "YulLiteral",
																		"src": "19968:26:13",
																		"type": "",
																		"value": "Maturity not yet reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19945:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19945:6:13"
																},
																"nativeSrc": "19945:50:13",
																"nodeType": "YulFunctionCall",
																"src": "19945:50:13"
															},
															"nativeSrc": "19945:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "19945:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
												"nativeSrc": "19828:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19926:6:13",
														"nodeType": "YulTypedName",
														"src": "19926:6:13",
														"type": ""
													}
												],
												"src": "19828:174:13"
											},
											{
												"body": {
													"nativeSrc": "20154:220:13",
													"nodeType": "YulBlock",
													"src": "20154:220:13",
													"statements": [
														{
															"nativeSrc": "20164:74:13",
															"nodeType": "YulAssignment",
															"src": "20164:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20230:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20230:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20235:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20235:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20171:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20171:58:13"
																},
																"nativeSrc": "20171:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20171:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20164:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20164:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20336:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20336:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																	"nativeSrc": "20247:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20247:88:13"
																},
																"nativeSrc": "20247:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20247:93:13"
															},
															"nativeSrc": "20247:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20247:93:13"
														},
														{
															"nativeSrc": "20349:19:13",
															"nodeType": "YulAssignment",
															"src": "20349:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20360:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20360:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20365:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20365:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20356:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20356:3:13"
																},
																"nativeSrc": "20356:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20356:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20349:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20008:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20142:3:13",
														"nodeType": "YulTypedName",
														"src": "20142:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20150:3:13",
														"nodeType": "YulTypedName",
														"src": "20150:3:13",
														"type": ""
													}
												],
												"src": "20008:366:13"
											},
											{
												"body": {
													"nativeSrc": "20551:248:13",
													"nodeType": "YulBlock",
													"src": "20551:248:13",
													"statements": [
														{
															"nativeSrc": "20561:26:13",
															"nodeType": "YulAssignment",
															"src": "20561:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20573:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20573:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20584:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20584:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20569:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20569:3:13"
																},
																"nativeSrc": "20569:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20569:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20561:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20561:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20608:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20608:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20619:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20619:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20604:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20604:3:13"
																		},
																		"nativeSrc": "20604:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20604:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20627:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20627:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20633:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20633:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20623:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20623:3:13"
																		},
																		"nativeSrc": "20623:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20623:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20597:6:13"
																},
																"nativeSrc": "20597:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20597:47:13"
															},
															"nativeSrc": "20597:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20597:47:13"
														},
														{
															"nativeSrc": "20653:139:13",
															"nodeType": "YulAssignment",
															"src": "20653:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20787:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20787:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20661:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20661:124:13"
																},
																"nativeSrc": "20661:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20661:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20653:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20653:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20380:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20531:9:13",
														"nodeType": "YulTypedName",
														"src": "20531:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20546:4:13",
														"nodeType": "YulTypedName",
														"src": "20546:4:13",
														"type": ""
													}
												],
												"src": "20380:419:13"
											},
											{
												"body": {
													"nativeSrc": "20911:66:13",
													"nodeType": "YulBlock",
													"src": "20911:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20933:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20933:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20941:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20941:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20929:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20929:3:13"
																		},
																		"nativeSrc": "20929:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20929:14:13"
																	},
																	{
																		"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
																		"kind": "string",
																		"nativeSrc": "20945:24:13",
																		"nodeType": "YulLiteral",
																		"src": "20945:24:13",
																		"type": "",
																		"value": "Can't claim zero coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20922:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20922:6:13"
																},
																"nativeSrc": "20922:48:13",
																"nodeType": "YulFunctionCall",
																"src": "20922:48:13"
															},
															"nativeSrc": "20922:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "20922:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
												"nativeSrc": "20805:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20903:6:13",
														"nodeType": "YulTypedName",
														"src": "20903:6:13",
														"type": ""
													}
												],
												"src": "20805:172:13"
											},
											{
												"body": {
													"nativeSrc": "21129:220:13",
													"nodeType": "YulBlock",
													"src": "21129:220:13",
													"statements": [
														{
															"nativeSrc": "21139:74:13",
															"nodeType": "YulAssignment",
															"src": "21139:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21205:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21205:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21210:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21210:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21146:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21146:58:13"
																},
																"nativeSrc": "21146:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21146:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21139:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21139:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21311:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21311:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																	"nativeSrc": "21222:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21222:88:13"
																},
																"nativeSrc": "21222:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21222:93:13"
															},
															"nativeSrc": "21222:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21222:93:13"
														},
														{
															"nativeSrc": "21324:19:13",
															"nodeType": "YulAssignment",
															"src": "21324:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21335:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21335:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21340:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21340:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21331:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21331:3:13"
																},
																"nativeSrc": "21331:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21331:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21324:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21324:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20983:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21117:3:13",
														"nodeType": "YulTypedName",
														"src": "21117:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21125:3:13",
														"nodeType": "YulTypedName",
														"src": "21125:3:13",
														"type": ""
													}
												],
												"src": "20983:366:13"
											},
											{
												"body": {
													"nativeSrc": "21526:248:13",
													"nodeType": "YulBlock",
													"src": "21526:248:13",
													"statements": [
														{
															"nativeSrc": "21536:26:13",
															"nodeType": "YulAssignment",
															"src": "21536:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21548:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21548:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21559:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21559:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21544:3:13"
																},
																"nativeSrc": "21544:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21544:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21536:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21536:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21583:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21583:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21594:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21594:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21579:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21579:3:13"
																		},
																		"nativeSrc": "21579:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21579:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21602:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21602:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21608:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21608:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21598:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21598:3:13"
																		},
																		"nativeSrc": "21598:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21598:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21572:6:13"
																},
																"nativeSrc": "21572:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21572:47:13"
															},
															"nativeSrc": "21572:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21572:47:13"
														},
														{
															"nativeSrc": "21628:139:13",
															"nodeType": "YulAssignment",
															"src": "21628:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21762:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21762:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21636:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21636:124:13"
																},
																"nativeSrc": "21636:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21636:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21628:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21628:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21355:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21506:9:13",
														"nodeType": "YulTypedName",
														"src": "21506:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21521:4:13",
														"nodeType": "YulTypedName",
														"src": "21521:4:13",
														"type": ""
													}
												],
												"src": "21355:419:13"
											},
											{
												"body": {
													"nativeSrc": "21843:80:13",
													"nodeType": "YulBlock",
													"src": "21843:80:13",
													"statements": [
														{
															"nativeSrc": "21853:22:13",
															"nodeType": "YulAssignment",
															"src": "21853:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21868:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21868:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21862:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21862:5:13"
																},
																"nativeSrc": "21862:13:13",
																"nodeType": "YulFunctionCall",
																"src": "21862:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21853:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21853:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21911:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21911:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "21884:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "21884:26:13"
																},
																"nativeSrc": "21884:33:13",
																"nodeType": "YulFunctionCall",
																"src": "21884:33:13"
															},
															"nativeSrc": "21884:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "21884:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "21780:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21821:6:13",
														"nodeType": "YulTypedName",
														"src": "21821:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21829:3:13",
														"nodeType": "YulTypedName",
														"src": "21829:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21837:5:13",
														"nodeType": "YulTypedName",
														"src": "21837:5:13",
														"type": ""
													}
												],
												"src": "21780:143:13"
											},
											{
												"body": {
													"nativeSrc": "22006:274:13",
													"nodeType": "YulBlock",
													"src": "22006:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "22052:83:13",
																"nodeType": "YulBlock",
																"src": "22052:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22054:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "22054:77:13"
																			},
																			"nativeSrc": "22054:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22054:79:13"
																		},
																		"nativeSrc": "22054:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "22054:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22027:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "22027:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22036:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22023:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22023:3:13"
																		},
																		"nativeSrc": "22023:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22023:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22048:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22048:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22019:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22019:3:13"
																},
																"nativeSrc": "22019:32:13",
																"nodeType": "YulFunctionCall",
																"src": "22019:32:13"
															},
															"nativeSrc": "22016:119:13",
															"nodeType": "YulIf",
															"src": "22016:119:13"
														},
														{
															"nativeSrc": "22145:128:13",
															"nodeType": "YulBlock",
															"src": "22145:128:13",
															"statements": [
																{
																	"nativeSrc": "22160:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22160:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22174:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22174:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22164:6:13",
																			"nodeType": "YulTypedName",
																			"src": "22164:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22189:74:13",
																	"nodeType": "YulAssignment",
																	"src": "22189:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22235:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "22235:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22246:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "22246:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22231:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "22231:3:13"
																				},
																				"nativeSrc": "22231:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22231:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22255:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "22255:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "22199:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "22199:31:13"
																		},
																		"nativeSrc": "22199:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22199:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22189:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "22189:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "21929:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21976:9:13",
														"nodeType": "YulTypedName",
														"src": "21976:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21987:7:13",
														"nodeType": "YulTypedName",
														"src": "21987:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21999:6:13",
														"nodeType": "YulTypedName",
														"src": "21999:6:13",
														"type": ""
													}
												],
												"src": "21929:351:13"
											},
											{
												"body": {
													"nativeSrc": "22392:72:13",
													"nodeType": "YulBlock",
													"src": "22392:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22414:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22422:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22422:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22410:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22410:3:13"
																		},
																		"nativeSrc": "22410:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22410:14:13"
																	},
																	{
																		"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "22426:30:13",
																		"nodeType": "YulLiteral",
																		"src": "22426:30:13",
																		"type": "",
																		"value": "No investor funds available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22403:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22403:6:13"
																},
																"nativeSrc": "22403:54:13",
																"nodeType": "YulFunctionCall",
																"src": "22403:54:13"
															},
															"nativeSrc": "22403:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "22403:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
												"nativeSrc": "22286:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22384:6:13",
														"nodeType": "YulTypedName",
														"src": "22384:6:13",
														"type": ""
													}
												],
												"src": "22286:178:13"
											},
											{
												"body": {
													"nativeSrc": "22616:220:13",
													"nodeType": "YulBlock",
													"src": "22616:220:13",
													"statements": [
														{
															"nativeSrc": "22626:74:13",
															"nodeType": "YulAssignment",
															"src": "22626:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22692:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22692:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22697:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22697:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22633:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22633:58:13"
																},
																"nativeSrc": "22633:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22633:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22626:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22626:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22798:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22798:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																	"nativeSrc": "22709:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22709:88:13"
																},
																"nativeSrc": "22709:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22709:93:13"
															},
															"nativeSrc": "22709:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22709:93:13"
														},
														{
															"nativeSrc": "22811:19:13",
															"nodeType": "YulAssignment",
															"src": "22811:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22822:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22822:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22827:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22827:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22818:3:13"
																},
																"nativeSrc": "22818:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22818:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22811:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22811:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22470:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22604:3:13",
														"nodeType": "YulTypedName",
														"src": "22604:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22612:3:13",
														"nodeType": "YulTypedName",
														"src": "22612:3:13",
														"type": ""
													}
												],
												"src": "22470:366:13"
											},
											{
												"body": {
													"nativeSrc": "23013:248:13",
													"nodeType": "YulBlock",
													"src": "23013:248:13",
													"statements": [
														{
															"nativeSrc": "23023:26:13",
															"nodeType": "YulAssignment",
															"src": "23023:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23035:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23035:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23046:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23046:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23031:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23031:3:13"
																},
																"nativeSrc": "23031:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23031:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23023:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23023:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23070:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23070:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23081:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23081:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23066:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23066:3:13"
																		},
																		"nativeSrc": "23066:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23066:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23089:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23089:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23095:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23095:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23085:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23085:3:13"
																		},
																		"nativeSrc": "23085:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23085:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23059:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23059:6:13"
																},
																"nativeSrc": "23059:47:13",
																"nodeType": "YulFunctionCall",
																"src": "23059:47:13"
															},
															"nativeSrc": "23059:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "23059:47:13"
														},
														{
															"nativeSrc": "23115:139:13",
															"nodeType": "YulAssignment",
															"src": "23115:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23249:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23249:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23123:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "23123:124:13"
																},
																"nativeSrc": "23123:131:13",
																"nodeType": "YulFunctionCall",
																"src": "23123:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23115:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23115:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22842:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22993:9:13",
														"nodeType": "YulTypedName",
														"src": "22993:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23008:4:13",
														"nodeType": "YulTypedName",
														"src": "23008:4:13",
														"type": ""
													}
												],
												"src": "22842:419:13"
											},
											{
												"body": {
													"nativeSrc": "23373:75:13",
													"nodeType": "YulBlock",
													"src": "23373:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23395:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23395:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23403:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23403:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23391:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23391:3:13"
																		},
																		"nativeSrc": "23391:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23391:14:13"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
																		"kind": "string",
																		"nativeSrc": "23407:33:13",
																		"nodeType": "YulLiteral",
																		"src": "23407:33:13",
																		"type": "",
																		"value": "Failed to transfer stable coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23384:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23384:6:13"
																},
																"nativeSrc": "23384:57:13",
																"nodeType": "YulFunctionCall",
																"src": "23384:57:13"
															},
															"nativeSrc": "23384:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "23384:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
												"nativeSrc": "23267:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23365:6:13",
														"nodeType": "YulTypedName",
														"src": "23365:6:13",
														"type": ""
													}
												],
												"src": "23267:181:13"
											},
											{
												"body": {
													"nativeSrc": "23600:220:13",
													"nodeType": "YulBlock",
													"src": "23600:220:13",
													"statements": [
														{
															"nativeSrc": "23610:74:13",
															"nodeType": "YulAssignment",
															"src": "23610:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23676:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23676:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23681:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23617:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "23617:58:13"
																},
																"nativeSrc": "23617:67:13",
																"nodeType": "YulFunctionCall",
																"src": "23617:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23610:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23782:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23782:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																	"nativeSrc": "23693:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "23693:88:13"
																},
																"nativeSrc": "23693:93:13",
																"nodeType": "YulFunctionCall",
																"src": "23693:93:13"
															},
															"nativeSrc": "23693:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "23693:93:13"
														},
														{
															"nativeSrc": "23795:19:13",
															"nodeType": "YulAssignment",
															"src": "23795:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23806:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23806:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23811:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23811:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23802:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23802:3:13"
																},
																"nativeSrc": "23802:12:13",
																"nodeType": "YulFunctionCall",
																"src": "23802:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23795:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23454:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23588:3:13",
														"nodeType": "YulTypedName",
														"src": "23588:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23596:3:13",
														"nodeType": "YulTypedName",
														"src": "23596:3:13",
														"type": ""
													}
												],
												"src": "23454:366:13"
											},
											{
												"body": {
													"nativeSrc": "23997:248:13",
													"nodeType": "YulBlock",
													"src": "23997:248:13",
													"statements": [
														{
															"nativeSrc": "24007:26:13",
															"nodeType": "YulAssignment",
															"src": "24007:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24019:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24019:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24030:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24030:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24015:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24015:3:13"
																},
																"nativeSrc": "24015:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24015:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24007:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24007:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24054:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24054:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24065:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24065:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24050:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24050:3:13"
																		},
																		"nativeSrc": "24050:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24050:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24073:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24073:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24079:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24079:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24069:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24069:3:13"
																		},
																		"nativeSrc": "24069:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24069:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24043:6:13"
																},
																"nativeSrc": "24043:47:13",
																"nodeType": "YulFunctionCall",
																"src": "24043:47:13"
															},
															"nativeSrc": "24043:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "24043:47:13"
														},
														{
															"nativeSrc": "24099:139:13",
															"nodeType": "YulAssignment",
															"src": "24099:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24233:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24233:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24107:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "24107:124:13"
																},
																"nativeSrc": "24107:131:13",
																"nodeType": "YulFunctionCall",
																"src": "24107:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24099:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23826:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23977:9:13",
														"nodeType": "YulTypedName",
														"src": "23977:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23992:4:13",
														"nodeType": "YulTypedName",
														"src": "23992:4:13",
														"type": ""
													}
												],
												"src": "23826:419:13"
											},
											{
												"body": {
													"nativeSrc": "24405:288:13",
													"nodeType": "YulBlock",
													"src": "24405:288:13",
													"statements": [
														{
															"nativeSrc": "24415:26:13",
															"nodeType": "YulAssignment",
															"src": "24415:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24427:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24427:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24438:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24438:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24423:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24423:3:13"
																},
																"nativeSrc": "24423:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24423:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24415:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24415:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24495:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24495:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24508:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24508:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24519:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24519:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24504:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24504:3:13"
																		},
																		"nativeSrc": "24504:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24504:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24451:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24451:43:13"
																},
																"nativeSrc": "24451:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24451:71:13"
															},
															"nativeSrc": "24451:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24451:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24576:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24589:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24589:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24600:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24600:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24585:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24585:3:13"
																		},
																		"nativeSrc": "24585:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24585:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24532:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24532:43:13"
																},
																"nativeSrc": "24532:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24532:72:13"
															},
															"nativeSrc": "24532:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24532:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24658:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24658:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24671:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24671:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24682:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24682:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24667:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24667:3:13"
																		},
																		"nativeSrc": "24667:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24667:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24614:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24614:43:13"
																},
																"nativeSrc": "24614:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24614:72:13"
															},
															"nativeSrc": "24614:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24614:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "24251:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24361:9:13",
														"nodeType": "YulTypedName",
														"src": "24361:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24373:6:13",
														"nodeType": "YulTypedName",
														"src": "24373:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24381:6:13",
														"nodeType": "YulTypedName",
														"src": "24381:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24389:6:13",
														"nodeType": "YulTypedName",
														"src": "24389:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24400:4:13",
														"nodeType": "YulTypedName",
														"src": "24400:4:13",
														"type": ""
													}
												],
												"src": "24251:442:13"
											},
											{
												"body": {
													"nativeSrc": "24825:206:13",
													"nodeType": "YulBlock",
													"src": "24825:206:13",
													"statements": [
														{
															"nativeSrc": "24835:26:13",
															"nodeType": "YulAssignment",
															"src": "24835:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24847:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24847:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24858:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24858:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24843:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24843:3:13"
																},
																"nativeSrc": "24843:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24843:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24835:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24835:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24915:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24915:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24928:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24939:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24939:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24924:3:13"
																		},
																		"nativeSrc": "24924:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24924:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24871:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24871:43:13"
																},
																"nativeSrc": "24871:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24871:71:13"
															},
															"nativeSrc": "24871:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24871:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24996:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24996:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25009:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "25009:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25020:2:13",
																				"nodeType": "YulLiteral",
																				"src": "25020:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25005:3:13"
																		},
																		"nativeSrc": "25005:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25005:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "24952:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24952:43:13"
																},
																"nativeSrc": "24952:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24952:72:13"
															},
															"nativeSrc": "24952:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24952:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24699:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24789:9:13",
														"nodeType": "YulTypedName",
														"src": "24789:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24801:6:13",
														"nodeType": "YulTypedName",
														"src": "24801:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24809:6:13",
														"nodeType": "YulTypedName",
														"src": "24809:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24820:4:13",
														"nodeType": "YulTypedName",
														"src": "24820:4:13",
														"type": ""
													}
												],
												"src": "24699:332:13"
											},
											{
												"body": {
													"nativeSrc": "25081:147:13",
													"nodeType": "YulBlock",
													"src": "25081:147:13",
													"statements": [
														{
															"nativeSrc": "25091:25:13",
															"nodeType": "YulAssignment",
															"src": "25091:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25114:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "25114:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25096:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "25096:17:13"
																},
																"nativeSrc": "25096:20:13",
																"nodeType": "YulFunctionCall",
																"src": "25096:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25091:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "25091:1:13"
																}
															]
														},
														{
															"nativeSrc": "25125:25:13",
															"nodeType": "YulAssignment",
															"src": "25125:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25148:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "25148:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25130:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "25130:17:13"
																},
																"nativeSrc": "25130:20:13",
																"nodeType": "YulFunctionCall",
																"src": "25130:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25125:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "25125:1:13"
																}
															]
														},
														{
															"nativeSrc": "25159:16:13",
															"nodeType": "YulAssignment",
															"src": "25159:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25170:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "25170:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25173:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "25173:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25166:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25166:3:13"
																},
																"nativeSrc": "25166:9:13",
																"nodeType": "YulFunctionCall",
																"src": "25166:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "25159:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25159:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25199:22:13",
																"nodeType": "YulBlock",
																"src": "25199:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25201:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "25201:16:13"
																			},
																			"nativeSrc": "25201:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25201:18:13"
																		},
																		"nativeSrc": "25201:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "25201:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25191:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "25191:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "25194:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25194:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25188:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "25188:2:13"
																},
																"nativeSrc": "25188:10:13",
																"nodeType": "YulFunctionCall",
																"src": "25188:10:13"
															},
															"nativeSrc": "25185:36:13",
															"nodeType": "YulIf",
															"src": "25185:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "25037:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25068:1:13",
														"nodeType": "YulTypedName",
														"src": "25068:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25071:1:13",
														"nodeType": "YulTypedName",
														"src": "25071:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "25077:3:13",
														"nodeType": "YulTypedName",
														"src": "25077:3:13",
														"type": ""
													}
												],
												"src": "25037:191:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stable coin transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bond token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token holders and amounts length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maturity not yet reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't claim zero coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(memPtr) {\n\n        mstore(add(memPtr, 0), \"No investor funds available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer stable coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1423": [
									{
										"length": 32,
										"start": 1825
									},
									{
										"length": 32,
										"start": 3466
									},
									{
										"length": 32,
										"start": 3931
									},
									{
										"length": 32,
										"start": 4248
									}
								],
								"1425": [
									{
										"length": 32,
										"start": 2931
									},
									{
										"length": 32,
										"start": 4894
									},
									{
										"length": 32,
										"start": 4972
									},
									{
										"length": 32,
										"start": 5032
									}
								],
								"1427": [
									{
										"length": 32,
										"start": 1887
									},
									{
										"length": 32,
										"start": 3542
									},
									{
										"length": 32,
										"start": 3992
									}
								],
								"1429": [
									{
										"length": 32,
										"start": 3578
									},
									{
										"length": 32,
										"start": 4692
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101ee575f3560e01c80638456cb591161010d578063ca19c11c116100a0578063dd62ed3e1161006f578063dd62ed3e1461056c578063e091a39b1461059c578063ec8eba14146105ba578063f57d283e146105d8576101ee565b8063ca19c11c1461050c578063ced0550f14610528578063d547741f14610532578063d59624b41461054e576101ee565b8063992642e5116100dc578063992642e514610482578063a217fddf146104a0578063a9059cbb146104be578063a920260b146104ee576101ee565b80638456cb591461040e578063904835c41461041857806391d148541461043457806395d89b4114610464576101ee565b80632f2ff15d1161018557806342966c681161015457806342966c68146103885780635c975abb146103a457806370a08231146103c257806379cc6790146103f2576101ee565b80632f2ff15d14610328578063313ce5671461034457806336568abe146103625780633f4ba83a1461037e576101ee565b806318160ddd116101c157806318160ddd1461028c57806323b872dd146102aa578063248a9ca3146102da5780632a0acc6a1461030a576101ee565b806301ffc9a7146101f257806306fdde0314610222578063095ea7b31461024057806310002dbd14610270575b5f80fd5b61020c60048036038101906102079190611ee1565b6105f4565b6040516102199190611f26565b60405180910390f35b61022a61066d565b6040516102379190611faf565b60405180910390f35b61025a6004803603810190610255919061205c565b6106fd565b6040516102679190611f26565b60405180910390f35b61028a6004803603810190610285919061209a565b61071f565b005b6102946108e3565b6040516102a191906120d4565b60405180910390f35b6102c460048036038101906102bf91906120ed565b6108ec565b6040516102d19190611f26565b60405180910390f35b6102f460048036038101906102ef9190612170565b61091a565b60405161030191906121aa565b60405180910390f35b610312610937565b60405161031f91906121aa565b60405180910390f35b610342600480360381019061033d91906121c3565b61095b565b005b61034c61097d565b604051610359919061221c565b60405180910390f35b61037c600480360381019061037791906121c3565b610985565b005b610386610a00565b005b6103a2600480360381019061039d919061209a565b610a35565b005b6103ac610a49565b6040516103b99190611f26565b60405180910390f35b6103dc60048036038101906103d79190612235565b610a5e565b6040516103e991906120d4565b60405180910390f35b61040c6004803603810190610407919061205c565b610aa3565b005b610416610ac3565b005b610432600480360381019061042d9190612460565b610af8565b005b61044e600480360381019061044991906121c3565b610c94565b60405161045b9190611f26565b60405180910390f35b61046c610cf8565b6040516104799190611faf565b60405180910390f35b61048a610d88565b60405161049791906124e5565b60405180910390f35b6104a8610dac565b6040516104b591906121aa565b60405180910390f35b6104d860048036038101906104d3919061205c565b610db2565b6040516104e59190611f26565b60405180910390f35b6104f6610dd4565b60405161050391906120d4565b60405180910390f35b6105266004803603810190610521919061209a565b610df8565b005b61053061106b565b005b61054c600480360381019061054791906121c3565b611230565b005b610556611252565b60405161056391906120d4565b60405180910390f35b610586600480360381019061058191906124fe565b611276565b60405161059391906120d4565b60405180910390f35b6105a46112f8565b6040516105b191906121aa565b60405180910390f35b6105c261131c565b6040516105cf91906124e5565b60405180910390f35b6105f260048036038101906105ed919061205c565b611340565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061066657506106658261146b565b5b9050919050565b60606003805461067c90612569565b80601f01602080910402602001604051908101604052809291908181526020018280546106a890612569565b80156106f35780601f106106ca576101008083540402835291602001916106f3565b820191905f5260205f20905b8154815290600101906020018083116106d657829003601f168201915b5050505050905090565b5f806107076114d4565b90506107148185856114db565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33307f00000000000000000000000000000000000000000000000000000000000000008561078991906125c6565b6040518463ffffffff1660e01b81526004016107a793929190612607565b6020604051808303815f875af11580156107c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107e79190612666565b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d906126db565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108619291906126f9565b6020604051808303815f875af115801561087d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a19190612666565b6108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d79061276a565b60405180910390fd5b50565b5f600254905090565b5f806108f66114d4565b90506109038582856114ed565b61090e85858561157f565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6109648261091a565b61096d8161166f565b6109778383611683565b50505050565b5f6012905090565b61098d6114d4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109f1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109fb828261176d565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a2a8161166f565b610a32611857565b50565b610a46610a406114d4565b826118b8565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ab582610aaf6114d4565b836114ed565b610abf82826118b8565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610aed8161166f565b610af5611937565b50565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610b228161166f565b8151835114610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d906127f8565b60405180910390fd5b5f5b8351811015610c8e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610bc157610bc0612816565b5b6020026020010151868581518110610bdc57610bdb612816565b5b60200260200101516040518463ffffffff1660e01b8152600401610c0293929190612607565b6020604051808303815f875af1158015610c1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c429190612666565b610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c789061288d565b60405180910390fd5b8080600101915050610b68565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d0790612569565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3390612569565b8015610d7e5780601f10610d5557610100808354040283529160200191610d7e565b820191905f5260205f20905b815481529060010190602001808311610d6157829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610dbc6114d4565b9050610dc981858561157f565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f0000000000000000000000000000000000000000000000000000000000000000421015610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e52906128f5565b60405180910390fd5b5f8111610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e949061295d565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610eda93929190612607565b6020604051808303815f875af1158015610ef6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f1a9190612666565b610f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f509061276a565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f000000000000000000000000000000000000000000000000000000000000000084610fc291906125c6565b6040518363ffffffff1660e01b8152600401610fdf9291906126f9565b6020604051808303815f875af1158015610ffb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061101f9190612666565b61105e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611055906126db565b60405180910390fd5b61106830826118b8565b50565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b76110958161166f565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110ef91906124e5565b602060405180830381865afa15801561110a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061112e919061298f565b90505f8111611172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116990612a04565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111ad9291906126f9565b6020604051808303815f875af11580156111c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111ed9190612666565b61122c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122390612a6c565b60405180910390fd5b5050565b6112398261091a565b6112428161166f565b61124c838361176d565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261136a8161166f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000085856040518463ffffffff1660e01b81526004016113e793929190612607565b6020604051808303815f875af1158015611403573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114279190612666565b611466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145d9061288d565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6114e88383836001611999565b505050565b5f6114f88484611276565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611579578181101561156a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161156193929190612a8a565b60405180910390fd5b61157884848484035f611999565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115ef575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115e691906124e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361165f575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161165691906124e5565b60405180910390fd5b61166a838383611b68565b505050565b6116808161167b6114d4565b611b78565b50565b5f61168e8383610c94565b61176357600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117006114d4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611767565b5f90505b92915050565b5f6117788383610c94565b1561184d575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506117ea6114d4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611851565b5f90505b92915050565b61185f611bc9565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118a16114d4565b6040516118ae91906124e5565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611928575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161191f91906124e5565b60405180910390fd5b611933825f83611b68565b5050565b61193f611c09565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119826114d4565b60405161198f91906124e5565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a09575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a0091906124e5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a79575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611a7091906124e5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611b62578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611b5991906120d4565b60405180910390a35b50505050565b611b73838383611c4a565b505050565b611b828282610c94565b611bc55780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611bbc929190612abf565b60405180910390fd5b5050565b611bd1610a49565b611c07576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c11610a49565b15611c48576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c52611c09565b611c5d838383611c62565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cb2578060025f828254611ca69190612ae6565b92505081905550611d80565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611d3b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3293929190612a8a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dc7578060025f8282540392505081905550611e11565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e6e91906120d4565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ec081611e8c565b8114611eca575f80fd5b50565b5f81359050611edb81611eb7565b92915050565b5f60208284031215611ef657611ef5611e84565b5b5f611f0384828501611ecd565b91505092915050565b5f8115159050919050565b611f2081611f0c565b82525050565b5f602082019050611f395f830184611f17565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611f8182611f3f565b611f8b8185611f49565b9350611f9b818560208601611f59565b611fa481611f67565b840191505092915050565b5f6020820190508181035f830152611fc78184611f77565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ff882611fcf565b9050919050565b61200881611fee565b8114612012575f80fd5b50565b5f8135905061202381611fff565b92915050565b5f819050919050565b61203b81612029565b8114612045575f80fd5b50565b5f8135905061205681612032565b92915050565b5f806040838503121561207257612071611e84565b5b5f61207f85828601612015565b925050602061209085828601612048565b9150509250929050565b5f602082840312156120af576120ae611e84565b5b5f6120bc84828501612048565b91505092915050565b6120ce81612029565b82525050565b5f6020820190506120e75f8301846120c5565b92915050565b5f805f6060848603121561210457612103611e84565b5b5f61211186828701612015565b935050602061212286828701612015565b925050604061213386828701612048565b9150509250925092565b5f819050919050565b61214f8161213d565b8114612159575f80fd5b50565b5f8135905061216a81612146565b92915050565b5f6020828403121561218557612184611e84565b5b5f6121928482850161215c565b91505092915050565b6121a48161213d565b82525050565b5f6020820190506121bd5f83018461219b565b92915050565b5f80604083850312156121d9576121d8611e84565b5b5f6121e68582860161215c565b92505060206121f785828601612015565b9150509250929050565b5f60ff82169050919050565b61221681612201565b82525050565b5f60208201905061222f5f83018461220d565b92915050565b5f6020828403121561224a57612249611e84565b5b5f61225784828501612015565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61229a82611f67565b810181811067ffffffffffffffff821117156122b9576122b8612264565b5b80604052505050565b5f6122cb611e7b565b90506122d78282612291565b919050565b5f67ffffffffffffffff8211156122f6576122f5612264565b5b602082029050602081019050919050565b5f80fd5b5f61231d612318846122dc565b6122c2565b905080838252602082019050602084028301858111156123405761233f612307565b5b835b8181101561236957806123558882612015565b845260208401935050602081019050612342565b5050509392505050565b5f82601f83011261238757612386612260565b5b813561239784826020860161230b565b91505092915050565b5f67ffffffffffffffff8211156123ba576123b9612264565b5b602082029050602081019050919050565b5f6123dd6123d8846123a0565b6122c2565b90508083825260208201905060208402830185811115612400576123ff612307565b5b835b8181101561242957806124158882612048565b845260208401935050602081019050612402565b5050509392505050565b5f82601f83011261244757612446612260565b5b81356124578482602086016123cb565b91505092915050565b5f806040838503121561247657612475611e84565b5b5f83013567ffffffffffffffff81111561249357612492611e88565b5b61249f85828601612373565b925050602083013567ffffffffffffffff8111156124c0576124bf611e88565b5b6124cc85828601612433565b9150509250929050565b6124df81611fee565b82525050565b5f6020820190506124f85f8301846124d6565b92915050565b5f806040838503121561251457612513611e84565b5b5f61252185828601612015565b925050602061253285828601612015565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061258057607f821691505b6020821081036125935761259261253c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125d082612029565b91506125db83612029565b92508282026125e981612029565b91508282048414831517612600576125ff612599565b5b5092915050565b5f60608201905061261a5f8301866124d6565b61262760208301856124d6565b61263460408301846120c5565b949350505050565b61264581611f0c565b811461264f575f80fd5b50565b5f815190506126608161263c565b92915050565b5f6020828403121561267b5761267a611e84565b5b5f61268884828501612652565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f6126c5601b83611f49565b91506126d082612691565b602082019050919050565b5f6020820190508181035f8301526126f2816126b9565b9050919050565b5f60408201905061270c5f8301856124d6565b61271960208301846120c5565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f612754601a83611f49565b915061275f82612720565b602082019050919050565b5f6020820190508181035f83015261278181612748565b9050919050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f6127e2602983611f49565b91506127ed82612788565b604082019050919050565b5f6020820190508181035f83015261280f816127d6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612877600f83611f49565b915061288282612843565b602082019050919050565b5f6020820190508181035f8301526128a48161286b565b9050919050565b7f4d61747572697479206e6f7420796574207265616368656400000000000000005f82015250565b5f6128df601883611f49565b91506128ea826128ab565b602082019050919050565b5f6020820190508181035f83015261290c816128d3565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612947601683611f49565b915061295282612913565b602082019050919050565b5f6020820190508181035f8301526129748161293b565b9050919050565b5f8151905061298981612032565b92915050565b5f602082840312156129a4576129a3611e84565b5b5f6129b18482850161297b565b91505092915050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f6129ee601c83611f49565b91506129f9826129ba565b602082019050919050565b5f6020820190508181035f830152612a1b816129e2565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612a56601f83611f49565b9150612a6182612a22565b602082019050919050565b5f6020820190508181035f830152612a8381612a4a565b9050919050565b5f606082019050612a9d5f8301866124d6565b612aaa60208301856120c5565b612ab760408301846120c5565b949350505050565b5f604082019050612ad25f8301856124d6565b612adf602083018461219b565b9392505050565b5f612af082612029565b9150612afb83612029565b9250828201905080821115612b1357612b12612599565b5b9291505056fea26469706673582212209cb8b3e465b50756657981eb2fe160c5e57eaa54e5b63ea9bfe6970e9cc95d7064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xCA19C11C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0xEC8EBA14 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x5D8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xD59624B4 EQ PUSH2 0x54E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x992642E5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xA920260B EQ PUSH2 0x4EE JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x464 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x37E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x30A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x20ED JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AC PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x416 PUSH2 0xAC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46C PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x530 PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x586 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x666 JUMPI POP PUSH2 0x665 DUP3 PUSH2 0x146B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x67C SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x707 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x714 DUP2 DUP6 DUP6 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH32 0x0 DUP6 PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D7 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8F6 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x903 DUP6 DUP3 DUP6 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0x90E DUP6 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x964 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x96D DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x977 DUP4 DUP4 PUSH2 0x1683 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98D PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FB DUP3 DUP3 PUSH2 0x176D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA2A DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xA32 PUSH2 0x1857 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA46 PUSH2 0xA40 PUSH2 0x14D4 JUMP JUMPDEST DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB5 DUP3 PUSH2 0xAAF PUSH2 0x14D4 JUMP JUMPDEST DUP4 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0xABF DUP3 DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAED DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0xAF5 PUSH2 0x1937 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xB22 DUP2 PUSH2 0x166F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5D SWAP1 PUSH2 0x27F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC8E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBC1 JUMPI PUSH2 0xBC0 PUSH2 0x2816 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBDC JUMPI PUSH2 0xBDB PUSH2 0x2816 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD07 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD33 SWAP1 PUSH2 0x2569 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDBC PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC9 DUP2 DUP6 DUP6 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE52 SWAP1 PUSH2 0x28F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xE9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE94 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1A SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0xF59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF50 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH32 0x0 DUP5 PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFDF SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x105E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1055 SWAP1 PUSH2 0x26DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1068 ADDRESS DUP3 PUSH2 0x18B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0x1095 DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EF SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112E SWAP2 SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP1 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AD SWAP3 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x2A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1239 DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x1242 DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH2 0x124C DUP4 DUP4 PUSH2 0x176D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x136A DUP2 PUSH2 0x166F JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145D SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1999 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14F8 DUP5 DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1579 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x156A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1561 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1578 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E6 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166A DUP4 DUP4 DUP4 PUSH2 0x1B68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1680 DUP2 PUSH2 0x167B PUSH2 0x14D4 JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x168E DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1763 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1700 PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1778 DUP4 DUP4 PUSH2 0xC94 JUMP JUMPDEST ISZERO PUSH2 0x184D JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17EA PUSH2 0x14D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1851 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185F PUSH2 0x1BC9 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18A1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18AE SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1928 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1933 DUP3 PUSH0 DUP4 PUSH2 0x1B68 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x193F PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1982 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198F SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A00 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A70 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B59 SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP4 DUP4 DUP4 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP3 DUP3 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x1BC5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BBC SWAP3 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1BD1 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x1C07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C11 PUSH2 0xA49 JUMP JUMPDEST ISZERO PUSH2 0x1C48 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C52 PUSH2 0x1C09 JUMP JUMPDEST PUSH2 0x1C5D DUP4 DUP4 DUP4 PUSH2 0x1C62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CA6 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D80 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D3B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DC7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E11 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E6E SWAP2 SWAP1 PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC0 DUP2 PUSH2 0x1E8C JUMP JUMPDEST DUP2 EQ PUSH2 0x1ECA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EDB DUP2 PUSH2 0x1EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F03 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F20 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F39 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F81 DUP3 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1F8B DUP2 DUP6 PUSH2 0x1F49 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x1FA4 DUP2 PUSH2 0x1F67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC7 DUP2 DUP5 PUSH2 0x1F77 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF8 DUP3 PUSH2 0x1FCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2008 DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP2 EQ PUSH2 0x2012 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2023 DUP2 PUSH2 0x1FFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x203B DUP2 PUSH2 0x2029 JUMP JUMPDEST DUP2 EQ PUSH2 0x2045 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2056 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2072 JUMPI PUSH2 0x2071 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x207F DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2090 DUP6 DUP3 DUP7 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20BC DUP5 DUP3 DUP6 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20CE DUP2 PUSH2 0x2029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH2 0x2103 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2111 DUP7 DUP3 DUP8 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2122 DUP7 DUP3 DUP8 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2133 DUP7 DUP3 DUP8 ADD PUSH2 0x2048 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214F DUP2 PUSH2 0x213D JUMP JUMPDEST DUP2 EQ PUSH2 0x2159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2146 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2185 JUMPI PUSH2 0x2184 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2192 DUP5 DUP3 DUP6 ADD PUSH2 0x215C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21A4 DUP2 PUSH2 0x213D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BD PUSH0 DUP4 ADD DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21E6 DUP6 DUP3 DUP7 ADD PUSH2 0x215C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21F7 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2216 DUP2 PUSH2 0x2201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x222F PUSH0 DUP4 ADD DUP5 PUSH2 0x220D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224A JUMPI PUSH2 0x2249 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2257 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x229A DUP3 PUSH2 0x1F67 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22B9 JUMPI PUSH2 0x22B8 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22CB PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP PUSH2 0x22D7 DUP3 DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x22F5 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x231D PUSH2 0x2318 DUP5 PUSH2 0x22DC JUMP JUMPDEST PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2340 JUMPI PUSH2 0x233F PUSH2 0x2307 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2369 JUMPI DUP1 PUSH2 0x2355 DUP9 DUP3 PUSH2 0x2015 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2342 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2397 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x230B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x2264 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD PUSH2 0x23D8 DUP5 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x2307 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2429 JUMPI DUP1 PUSH2 0x2415 DUP9 DUP3 PUSH2 0x2048 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2402 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x2260 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2457 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2476 JUMPI PUSH2 0x2475 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2492 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH2 0x249F DUP6 DUP3 DUP7 ADD PUSH2 0x2373 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24C0 JUMPI PUSH2 0x24BF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST PUSH2 0x24CC DUP6 DUP3 DUP7 ADD PUSH2 0x2433 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DF DUP2 PUSH2 0x1FEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F8 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2514 JUMPI PUSH2 0x2513 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2521 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2532 DUP6 DUP3 DUP7 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2580 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2593 JUMPI PUSH2 0x2592 PUSH2 0x253C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25D0 DUP3 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DB DUP4 PUSH2 0x2029 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25E9 DUP2 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2600 JUMPI PUSH2 0x25FF PUSH2 0x2599 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x261A PUSH0 DUP4 ADD DUP7 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2627 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2645 DUP2 PUSH2 0x1F0C JUMP JUMPDEST DUP2 EQ PUSH2 0x264F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2660 DUP2 PUSH2 0x263C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x267B JUMPI PUSH2 0x267A PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2688 DUP5 DUP3 DUP6 ADD PUSH2 0x2652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26C5 PUSH1 0x1B DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D0 DUP3 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F2 DUP2 PUSH2 0x26B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH0 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2719 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2754 PUSH1 0x1A DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x275F DUP3 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2781 DUP2 PUSH2 0x2748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27E2 PUSH1 0x29 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x27ED DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x280F DUP2 PUSH2 0x27D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 PUSH1 0xF DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x2843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A4 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61747572697479206E6F742079657420726561636865640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28DF PUSH1 0x18 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x28EA DUP3 PUSH2 0x28AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x290C DUP2 PUSH2 0x28D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2947 PUSH1 0x16 DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2952 DUP3 PUSH2 0x2913 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2974 DUP2 PUSH2 0x293B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2989 DUP2 PUSH2 0x2032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29A4 JUMPI PUSH2 0x29A3 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B1 DUP5 DUP3 DUP6 ADD PUSH2 0x297B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29EE PUSH1 0x1C DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x29F9 DUP3 PUSH2 0x29BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A1B DUP2 PUSH2 0x29E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A56 PUSH1 0x1F DUP4 PUSH2 0x1F49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A61 DUP3 PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A83 DUP2 PUSH2 0x2A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A9D PUSH0 DUP4 ADD DUP7 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2AAA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x2AB7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AD2 PUSH0 DUP4 ADD DUP6 PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2ADF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF0 DUP3 PUSH2 0x2029 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFB DUP4 PUSH2 0x2029 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B12 PUSH2 0x2599 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xB8 0xB3 0xE4 PUSH6 0xB50756657981 0xEB 0x2F 0xE1 PUSH1 0xC5 0xE5 PUSH31 0xAA54E5B63EA9BFE6970E9CC95D7064736F6C634300081A0033000000000000 ",
							"sourceMap": "373:3072:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1261:273:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:50:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3374:69:12;;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3303:65:12;;;:::i;:::-;;1742:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;579:35:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:33:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2485:533;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2153:326;;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;702:37:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1540:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1261:273:12:-;1331:10;1324:31;;;1356:10;1375:4;1394:8;1381:12;:21;;;;:::i;:::-;1324:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;1458:4;1452:20;;;1473:10;1484:12;1452:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1444:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1261:273;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;455:50:12:-;487:18;455:50;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3374:69:12:-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;3426:10:12::1;:8;:10::i;:::-;3374:69:::0;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3303:65:12:-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;3353:8:12::1;:6;:8::i;:::-;3303:65:::0;:::o;1742:405::-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1894:7:12::1;:14;1871:12;:19;:37;1863:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1969:9;1964:177;1988:12;:19;1984:1;:23;1964:177;;;2043:12;2036:33;;;2070:10;2082:12;2095:1;2082:15;;;;;;;;:::i;:::-;;;;;;;;2099:7;2107:1;2099:10;;;;;;;;:::i;:::-;;;;;;;;2036:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2028:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:3;;;;;;;1964:177;;;;1742:405:::0;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;579:35:12:-;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;663:33:12:-;;;:::o;2485:533::-;2599:12;2580:15;:31;;2572:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2699:1;2684:12;:16;2676:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2750:4;2744:24;;;2769:10;2788:4;2794:12;2744:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2736:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2862:10;2855:27;;;2883:10;2907:8;2894:12;:21;;;;:::i;:::-;2855:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2847:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2978:33;2992:4;2998:12;2978:5;:33::i;:::-;2485:533;:::o;2153:326::-;549:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2221:27:12::1;2258:10;2251:28;;;2288:4;2251:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2221:73;;2334:1;2312:19;:23;2304:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2391:4;2385:20;;;2406:10;2417:19;2385:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2377:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2211:268;2153:326:::0;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;702:37:12:-;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;511:62:12:-;549:24;511:62;:::o;620:37::-;;;:::o;1540:196::-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1651:12:12::1;1644:33;;;1678:12;1691:11;1703:6;1644:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1636:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1540:196:::0;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;8247:206:3:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3129:165:12:-;3257:30;3271:4;3277:2;3281:5;3257:13;:30::i;:::-;3129:165;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1112:145:6:-;1474:19:9;:17;:19::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:329::-;4155:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:119;;;4210:79;;:::i;:::-;4172:119;4330:1;4355:53;4400:7;4391:6;4380:9;4376:22;4355:53;:::i;:::-;4345:63;;4301:117;4096:329;;;;:::o;4431:118::-;4518:24;4536:5;4518:24;:::i;:::-;4513:3;4506:37;4431:118;;:::o;4555:222::-;4648:4;4686:2;4675:9;4671:18;4663:26;;4699:71;4767:1;4756:9;4752:17;4743:6;4699:71;:::i;:::-;4555:222;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:329::-;7420:6;7469:2;7457:9;7448:7;7444:23;7440:32;7437:119;;;7475:79;;:::i;:::-;7437:119;7595:1;7620:53;7665:7;7656:6;7645:9;7641:22;7620:53;:::i;:::-;7610:63;;7566:117;7361:329;;;;:::o;7696:117::-;7805:1;7802;7795:12;7819:180;7867:77;7864:1;7857:88;7964:4;7961:1;7954:15;7988:4;7985:1;7978:15;8005:281;8088:27;8110:4;8088:27;:::i;:::-;8080:6;8076:40;8218:6;8206:10;8203:22;8182:18;8170:10;8167:34;8164:62;8161:88;;;8229:18;;:::i;:::-;8161:88;8269:10;8265:2;8258:22;8048:238;8005:281;;:::o;8292:129::-;8326:6;8353:20;;:::i;:::-;8343:30;;8382:33;8410:4;8402:6;8382:33;:::i;:::-;8292:129;;;:::o;8427:311::-;8504:4;8594:18;8586:6;8583:30;8580:56;;;8616:18;;:::i;:::-;8580:56;8666:4;8658:6;8654:17;8646:25;;8726:4;8720;8716:15;8708:23;;8427:311;;;:::o;8744:117::-;8853:1;8850;8843:12;8884:710;8980:5;9005:81;9021:64;9078:6;9021:64;:::i;:::-;9005:81;:::i;:::-;8996:90;;9106:5;9135:6;9128:5;9121:21;9169:4;9162:5;9158:16;9151:23;;9222:4;9214:6;9210:17;9202:6;9198:30;9251:3;9243:6;9240:15;9237:122;;;9270:79;;:::i;:::-;9237:122;9385:6;9368:220;9402:6;9397:3;9394:15;9368:220;;;9477:3;9506:37;9539:3;9527:10;9506:37;:::i;:::-;9501:3;9494:50;9573:4;9568:3;9564:14;9557:21;;9444:144;9428:4;9423:3;9419:14;9412:21;;9368:220;;;9372:21;8986:608;;8884:710;;;;;:::o;9617:370::-;9688:5;9737:3;9730:4;9722:6;9718:17;9714:27;9704:122;;9745:79;;:::i;:::-;9704:122;9862:6;9849:20;9887:94;9977:3;9969:6;9962:4;9954:6;9950:17;9887:94;:::i;:::-;9878:103;;9694:293;9617:370;;;;:::o;9993:311::-;10070:4;10160:18;10152:6;10149:30;10146:56;;;10182:18;;:::i;:::-;10146:56;10232:4;10224:6;10220:17;10212:25;;10292:4;10286;10282:15;10274:23;;9993:311;;;:::o;10327:710::-;10423:5;10448:81;10464:64;10521:6;10464:64;:::i;:::-;10448:81;:::i;:::-;10439:90;;10549:5;10578:6;10571:5;10564:21;10612:4;10605:5;10601:16;10594:23;;10665:4;10657:6;10653:17;10645:6;10641:30;10694:3;10686:6;10683:15;10680:122;;;10713:79;;:::i;:::-;10680:122;10828:6;10811:220;10845:6;10840:3;10837:15;10811:220;;;10920:3;10949:37;10982:3;10970:10;10949:37;:::i;:::-;10944:3;10937:50;11016:4;11011:3;11007:14;11000:21;;10887:144;10871:4;10866:3;10862:14;10855:21;;10811:220;;;10815:21;10429:608;;10327:710;;;;;:::o;11060:370::-;11131:5;11180:3;11173:4;11165:6;11161:17;11157:27;11147:122;;11188:79;;:::i;:::-;11147:122;11305:6;11292:20;11330:94;11420:3;11412:6;11405:4;11397:6;11393:17;11330:94;:::i;:::-;11321:103;;11137:293;11060:370;;;;:::o;11436:894::-;11554:6;11562;11611:2;11599:9;11590:7;11586:23;11582:32;11579:119;;;11617:79;;:::i;:::-;11579:119;11765:1;11754:9;11750:17;11737:31;11795:18;11787:6;11784:30;11781:117;;;11817:79;;:::i;:::-;11781:117;11922:78;11992:7;11983:6;11972:9;11968:22;11922:78;:::i;:::-;11912:88;;11708:302;12077:2;12066:9;12062:18;12049:32;12108:18;12100:6;12097:30;12094:117;;;12130:79;;:::i;:::-;12094:117;12235:78;12305:7;12296:6;12285:9;12281:22;12235:78;:::i;:::-;12225:88;;12020:303;11436:894;;;;;:::o;12336:118::-;12423:24;12441:5;12423:24;:::i;:::-;12418:3;12411:37;12336:118;;:::o;12460:222::-;12553:4;12591:2;12580:9;12576:18;12568:26;;12604:71;12672:1;12661:9;12657:17;12648:6;12604:71;:::i;:::-;12460:222;;;;:::o;12688:474::-;12756:6;12764;12813:2;12801:9;12792:7;12788:23;12784:32;12781:119;;;12819:79;;:::i;:::-;12781:119;12939:1;12964:53;13009:7;13000:6;12989:9;12985:22;12964:53;:::i;:::-;12954:63;;12910:117;13066:2;13092:53;13137:7;13128:6;13117:9;13113:22;13092:53;:::i;:::-;13082:63;;13037:118;12688:474;;;;;:::o;13168:180::-;13216:77;13213:1;13206:88;13313:4;13310:1;13303:15;13337:4;13334:1;13327:15;13354:320;13398:6;13435:1;13429:4;13425:12;13415:22;;13482:1;13476:4;13472:12;13503:18;13493:81;;13559:4;13551:6;13547:17;13537:27;;13493:81;13621:2;13613:6;13610:14;13590:18;13587:38;13584:84;;13640:18;;:::i;:::-;13584:84;13405:269;13354:320;;;:::o;13680:180::-;13728:77;13725:1;13718:88;13825:4;13822:1;13815:15;13849:4;13846:1;13839:15;13866:410;13906:7;13929:20;13947:1;13929:20;:::i;:::-;13924:25;;13963:20;13981:1;13963:20;:::i;:::-;13958:25;;14018:1;14015;14011:9;14040:30;14058:11;14040:30;:::i;:::-;14029:41;;14219:1;14210:7;14206:15;14203:1;14200:22;14180:1;14173:9;14153:83;14130:139;;14249:18;;:::i;:::-;14130:139;13914:362;13866:410;;;;:::o;14282:442::-;14431:4;14469:2;14458:9;14454:18;14446:26;;14482:71;14550:1;14539:9;14535:17;14526:6;14482:71;:::i;:::-;14563:72;14631:2;14620:9;14616:18;14607:6;14563:72;:::i;:::-;14645;14713:2;14702:9;14698:18;14689:6;14645:72;:::i;:::-;14282:442;;;;;;:::o;14730:116::-;14800:21;14815:5;14800:21;:::i;:::-;14793:5;14790:32;14780:60;;14836:1;14833;14826:12;14780:60;14730:116;:::o;14852:137::-;14906:5;14937:6;14931:13;14922:22;;14953:30;14977:5;14953:30;:::i;:::-;14852:137;;;;:::o;14995:345::-;15062:6;15111:2;15099:9;15090:7;15086:23;15082:32;15079:119;;;15117:79;;:::i;:::-;15079:119;15237:1;15262:61;15315:7;15306:6;15295:9;15291:22;15262:61;:::i;:::-;15252:71;;15208:125;14995:345;;;;:::o;15346:177::-;15486:29;15482:1;15474:6;15470:14;15463:53;15346:177;:::o;15529:366::-;15671:3;15692:67;15756:2;15751:3;15692:67;:::i;:::-;15685:74;;15768:93;15857:3;15768:93;:::i;:::-;15886:2;15881:3;15877:12;15870:19;;15529:366;;;:::o;15901:419::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16154:9;16148:4;16144:20;16140:1;16129:9;16125:17;16118:47;16182:131;16308:4;16182:131;:::i;:::-;16174:139;;15901:419;;;:::o;16326:332::-;16447:4;16485:2;16474:9;16470:18;16462:26;;16498:71;16566:1;16555:9;16551:17;16542:6;16498:71;:::i;:::-;16579:72;16647:2;16636:9;16632:18;16623:6;16579:72;:::i;:::-;16326:332;;;;;:::o;16664:176::-;16804:28;16800:1;16792:6;16788:14;16781:52;16664:176;:::o;16846:366::-;16988:3;17009:67;17073:2;17068:3;17009:67;:::i;:::-;17002:74;;17085:93;17174:3;17085:93;:::i;:::-;17203:2;17198:3;17194:12;17187:19;;16846:366;;;:::o;17218:419::-;17384:4;17422:2;17411:9;17407:18;17399:26;;17471:9;17465:4;17461:20;17457:1;17446:9;17442:17;17435:47;17499:131;17625:4;17499:131;:::i;:::-;17491:139;;17218:419;;;:::o;17643:228::-;17783:34;17779:1;17771:6;17767:14;17760:58;17852:11;17847:2;17839:6;17835:15;17828:36;17643:228;:::o;17877:366::-;18019:3;18040:67;18104:2;18099:3;18040:67;:::i;:::-;18033:74;;18116:93;18205:3;18116:93;:::i;:::-;18234:2;18229:3;18225:12;18218:19;;17877:366;;;:::o;18249:419::-;18415:4;18453:2;18442:9;18438:18;18430:26;;18502:9;18496:4;18492:20;18488:1;18477:9;18473:17;18466:47;18530:131;18656:4;18530:131;:::i;:::-;18522:139;;18249:419;;;:::o;18674:180::-;18722:77;18719:1;18712:88;18819:4;18816:1;18809:15;18843:4;18840:1;18833:15;18860:165;19000:17;18996:1;18988:6;18984:14;18977:41;18860:165;:::o;19031:366::-;19173:3;19194:67;19258:2;19253:3;19194:67;:::i;:::-;19187:74;;19270:93;19359:3;19270:93;:::i;:::-;19388:2;19383:3;19379:12;19372:19;;19031:366;;;:::o;19403:419::-;19569:4;19607:2;19596:9;19592:18;19584:26;;19656:9;19650:4;19646:20;19642:1;19631:9;19627:17;19620:47;19684:131;19810:4;19684:131;:::i;:::-;19676:139;;19403:419;;;:::o;19828:174::-;19968:26;19964:1;19956:6;19952:14;19945:50;19828:174;:::o;20008:366::-;20150:3;20171:67;20235:2;20230:3;20171:67;:::i;:::-;20164:74;;20247:93;20336:3;20247:93;:::i;:::-;20365:2;20360:3;20356:12;20349:19;;20008:366;;;:::o;20380:419::-;20546:4;20584:2;20573:9;20569:18;20561:26;;20633:9;20627:4;20623:20;20619:1;20608:9;20604:17;20597:47;20661:131;20787:4;20661:131;:::i;:::-;20653:139;;20380:419;;;:::o;20805:172::-;20945:24;20941:1;20933:6;20929:14;20922:48;20805:172;:::o;20983:366::-;21125:3;21146:67;21210:2;21205:3;21146:67;:::i;:::-;21139:74;;21222:93;21311:3;21222:93;:::i;:::-;21340:2;21335:3;21331:12;21324:19;;20983:366;;;:::o;21355:419::-;21521:4;21559:2;21548:9;21544:18;21536:26;;21608:9;21602:4;21598:20;21594:1;21583:9;21579:17;21572:47;21636:131;21762:4;21636:131;:::i;:::-;21628:139;;21355:419;;;:::o;21780:143::-;21837:5;21868:6;21862:13;21853:22;;21884:33;21911:5;21884:33;:::i;:::-;21780:143;;;;:::o;21929:351::-;21999:6;22048:2;22036:9;22027:7;22023:23;22019:32;22016:119;;;22054:79;;:::i;:::-;22016:119;22174:1;22199:64;22255:7;22246:6;22235:9;22231:22;22199:64;:::i;:::-;22189:74;;22145:128;21929:351;;;;:::o;22286:178::-;22426:30;22422:1;22414:6;22410:14;22403:54;22286:178;:::o;22470:366::-;22612:3;22633:67;22697:2;22692:3;22633:67;:::i;:::-;22626:74;;22709:93;22798:3;22709:93;:::i;:::-;22827:2;22822:3;22818:12;22811:19;;22470:366;;;:::o;22842:419::-;23008:4;23046:2;23035:9;23031:18;23023:26;;23095:9;23089:4;23085:20;23081:1;23070:9;23066:17;23059:47;23123:131;23249:4;23123:131;:::i;:::-;23115:139;;22842:419;;;:::o;23267:181::-;23407:33;23403:1;23395:6;23391:14;23384:57;23267:181;:::o;23454:366::-;23596:3;23617:67;23681:2;23676:3;23617:67;:::i;:::-;23610:74;;23693:93;23782:3;23693:93;:::i;:::-;23811:2;23806:3;23802:12;23795:19;;23454:366;;;:::o;23826:419::-;23992:4;24030:2;24019:9;24015:18;24007:26;;24079:9;24073:4;24069:20;24065:1;24054:9;24050:17;24043:47;24107:131;24233:4;24107:131;:::i;:::-;24099:139;;23826:419;;;:::o;24251:442::-;24400:4;24438:2;24427:9;24423:18;24415:26;;24451:71;24519:1;24508:9;24504:17;24495:6;24451:71;:::i;:::-;24532:72;24600:2;24589:9;24585:18;24576:6;24532:72;:::i;:::-;24614;24682:2;24671:9;24667:18;24658:6;24614:72;:::i;:::-;24251:442;;;;;;:::o;24699:332::-;24820:4;24858:2;24847:9;24843:18;24835:26;;24871:71;24939:1;24928:9;24924:17;24915:6;24871:71;:::i;:::-;24952:72;25020:2;25009:9;25005:18;24996:6;24952:72;:::i;:::-;24699:332;;;;;:::o;25037:191::-;25077:3;25096:20;25114:1;25096:20;:::i;:::-;25091:25;;25130:20;25148:1;25130:20;:::i;:::-;25125:25;;25173:1;25170;25166:9;25159:16;;25194:3;25191:1;25188:10;25185:36;;;25201:18;;:::i;:::-;25185:36;25037:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2217400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN()": "437",
								"BOND_ISSUER()": "391",
								"DEFAULT_ADMIN_ROLE()": "397",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"buyBond(uint256)": "infinite",
								"claimFaceValue(uint256)": "infinite",
								"claimInvestorFunds()": "infinite",
								"decimals()": "406",
								"distributeInterest(address,uint256)": "infinite",
								"distributeInterestAll(address[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3212",
								"interestCoin()": "infinite",
								"maturityDate()": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2540",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"stableCoin()": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unitSize()": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 745,
									"end": 1255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "426F6E44654669546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4244460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 487,
									"end": 505,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
								},
								{
									"begin": 978,
									"end": 991,
									"modifierDepth": 1,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 960,
									"end": 970,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 960,
									"end": 970,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 970,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 960,
									"end": 992,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 960,
									"end": 992,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 549,
									"end": 573,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
								},
								{
									"begin": 1026,
									"end": 1036,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1012,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 1002,
									"end": 1012,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1012,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1037,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1037,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1060,
									"end": 1071,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1071,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1096,
									"end": 1109,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1081,
									"end": 1109,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1130,
									"end": 1139,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1139,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1119,
									"end": 1139,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1139,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1139,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1139,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1139,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1177,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1149,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1177,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1177,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1177,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1177,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1187,
									"end": 1248,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1193,
									"end": 1203,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1237,
									"end": 1245,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1237,
									"end": 1245,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1237,
									"end": 1245,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1237,
									"end": 1247,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1247,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1247,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1237,
									"end": 1247,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1231,
									"end": 1247,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1231,
									"end": 1247,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1218,
									"end": 1227,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1215,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1206,
									"end": 1227,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1206,
									"end": 1227,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1205,
									"end": 1247,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1205,
									"end": 1247,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1187,
									"end": 1192,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1187,
									"end": 1192,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1187,
									"end": 1192,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1187,
									"end": 1248,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1187,
									"end": 1248,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1187,
									"end": 1248,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1187,
									"end": 1248,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1187,
									"end": 1248,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 745,
									"end": 1255,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3294,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3129,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3271,
									"end": 3275,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3277,
									"end": 3279,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3257,
									"end": 3270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3257,
									"end": 3270,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3257,
									"end": 3270,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3257,
									"end": 3287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3257,
									"end": 3287,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3129,
									"end": 3294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1234,
									"end": 1238,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1242,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1244,
									"end": 1249,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1897,
									"end": 1901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1329,
									"end": 1335,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1361,
									"end": 1367,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1383,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1426,
									"end": 1429,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1414,
									"end": 1423,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1405,
									"end": 1412,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1401,
									"end": 1424,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1430,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1433,
									"end": 1512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1553,
									"end": 1554,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 1634,
									"end": 1641,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1614,
									"end": 1623,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1632,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1578,
									"end": 1642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1642,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1524,
									"end": 1652,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1693,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 1773,
									"end": 1780,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1764,
									"end": 1770,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1753,
									"end": 1762,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 1749,
									"end": 1771,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1717,
									"end": 1781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1781,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1781,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1832,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1903,
									"end": 1909,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1892,
									"end": 1901,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 1888,
									"end": 1910,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1856,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1846,
									"end": 1920,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1846,
									"end": 1920,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1801,
									"end": 1930,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1969,
									"end": 1971,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2051,
									"end": 2058,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 2042,
									"end": 2048,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2040,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 2027,
									"end": 2049,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1995,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1985,
									"end": 2059,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1985,
									"end": 2059,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1940,
									"end": 2069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2108,
									"end": 2111,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 2191,
									"end": 2198,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 2182,
									"end": 2188,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2171,
									"end": 2180,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2189,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2135,
									"end": 2199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2199,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2079,
									"end": 2209,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2248,
									"end": 2251,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2331,
									"end": 2338,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 2322,
									"end": 2328,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2311,
									"end": 2320,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2275,
									"end": 2339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2339,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2339,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2219,
									"end": 2349,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2388,
									"end": 2391,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2471,
									"end": 2478,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2468,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2451,
									"end": 2460,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 2447,
									"end": 2469,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2415,
									"end": 2479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2405,
									"end": 2479,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2405,
									"end": 2479,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2359,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2554,
									"end": 2560,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2593,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2502,
									"end": 2601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2607,
									"end": 2787,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2607,
									"end": 2787,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2655,
									"end": 2732,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2652,
									"end": 2653,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2733,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2752,
									"end": 2756,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2749,
									"end": 2750,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2742,
									"end": 2757,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2776,
									"end": 2780,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2773,
									"end": 2774,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2766,
									"end": 2781,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2793,
									"end": 2973,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2793,
									"end": 2973,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2841,
									"end": 2918,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2838,
									"end": 2839,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2831,
									"end": 2919,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2938,
									"end": 2942,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2935,
									"end": 2936,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2928,
									"end": 2943,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2962,
									"end": 2966,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2959,
									"end": 2960,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2952,
									"end": 2967,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3054,
									"end": 3058,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3050,
									"end": 3062,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3040,
									"end": 3062,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3040,
									"end": 3062,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3107,
									"end": 3108,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3105,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3097,
									"end": 3109,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3128,
									"end": 3146,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3184,
									"end": 3188,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 3176,
									"end": 3182,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3172,
									"end": 3189,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3189,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3246,
									"end": 3248,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3238,
									"end": 3244,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3235,
									"end": 3249,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3215,
									"end": 3233,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3212,
									"end": 3250,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3265,
									"end": 3283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 3299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3354,
									"end": 3358,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3377,
									"end": 3380,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3369,
									"end": 3380,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3369,
									"end": 3380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3400,
									"end": 3403,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3397,
									"end": 3398,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3404,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3434,
									"end": 3438,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3431,
									"end": 3432,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3305,
									"end": 3446,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3489,
									"end": 3495,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3536,
									"end": 3538,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3531,
									"end": 3533,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3524,
									"end": 3529,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3520,
									"end": 3534,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3539,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3506,
									"end": 3539,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3506,
									"end": 3539,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3452,
									"end": 3545,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3595,
									"end": 3603,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3645,
									"end": 3650,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3551,
									"end": 3658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3733,
									"end": 3739,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3771,
									"end": 3781,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3767,
									"end": 3785,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 3836,
									"end": 3902,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3825,
									"end": 3834,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3806,
									"end": 3903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3954,
									"end": 3962,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3943,
									"end": 3952,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3924,
									"end": 3963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3912,
									"end": 3963,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 3912,
									"end": 3963,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3996,
									"end": 4000,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3992,
									"end": 4001,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3985,
									"end": 3990,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3981,
									"end": 4002,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4002,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3972,
									"end": 4002,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4045,
									"end": 4049,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4035,
									"end": 4043,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4031,
									"end": 4050,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4024,
									"end": 4029,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4021,
									"end": 4051,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4011,
									"end": 4051,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4011,
									"end": 4051,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3740,
									"end": 4057,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3740,
									"end": 4057,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 4057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4091,
									"end": 4094,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4105,
									"end": 4117,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4105,
									"end": 4117,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4179,
									"end": 4188,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4257,
									"end": 4262,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 4239,
									"end": 4263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4230,
									"end": 4264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 4212,
									"end": 4265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4199,
									"end": 4265,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4199,
									"end": 4265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4129,
									"end": 4271,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4341,
									"end": 4346,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4334,
									"end": 4346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4334,
									"end": 4346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4277,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4499,
									"end": 4506,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4468,
									"end": 4507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4602,
									"end": 4618,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4578,
									"end": 4619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4570,
									"end": 4576,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4563,
									"end": 4567,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4557,
									"end": 4568,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4529,
									"end": 4620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4523,
									"end": 4527,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4621,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4434,
									"end": 4627,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4678,
									"end": 4681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4633,
									"end": 4706,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4789,
									"end": 4821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 4888,
									"end": 4894,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4874,
									"end": 4878,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4830,
									"end": 4895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4765,
									"end": 4901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4712,
									"end": 4901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4984,
									"end": 4987,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4974,
									"end": 4988,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 5075,
									"end": 5076,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5068,
									"end": 5073,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 5038,
									"end": 5077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5011,
									"end": 5012,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5004,
									"end": 5009,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5013,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4991,
									"end": 5013,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4991,
									"end": 5013,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4907,
									"end": 5093,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5200,
									"end": 5202,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5195,
									"end": 5198,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5192,
									"end": 5203,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5266,
									"end": 5271,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 5234,
									"end": 5272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "tag",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 5318,
									"end": 5347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "tag",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5308,
									"end": 5316,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5304,
									"end": 5348,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5501,
									"end": 5503,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5489,
									"end": 5499,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5486,
									"end": 5504,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5522,
									"end": 5530,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5507,
									"end": 5530,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5507,
									"end": 5530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5619,
									"end": 5622,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 5601,
									"end": 5623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5591,
									"end": 5599,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5587,
									"end": 5624,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5574,
									"end": 5585,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 5545,
									"end": 5625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5204,
									"end": 5635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5204,
									"end": 5635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5099,
									"end": 5642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5702,
									"end": 5710,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5752,
									"end": 5757,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5746,
									"end": 5750,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5742,
									"end": 5758,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 5721,
									"end": 5758,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5721,
									"end": 5758,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5815,
									"end": 5821,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 5896,
									"end": 5897,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5884,
									"end": 5889,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5881,
									"end": 5882,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5877,
									"end": 5890,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5848,
									"end": 5899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "tag",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5844,
									"end": 5900,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5929,
									"end": 5933,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 5927,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 5934,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5909,
									"end": 5934,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5909,
									"end": 5934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5822,
									"end": 5940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5771,
									"end": 5940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6021,
									"end": 6025,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6192,
									"end": 6195,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6186,
									"end": 6190,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 6167,
									"end": 6196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "tag",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6159,
									"end": 6196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6159,
									"end": 6196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6229,
									"end": 6232,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6226,
									"end": 6227,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6222,
									"end": 6233,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6216,
									"end": 6220,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6213,
									"end": 6234,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6234,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6205,
									"end": 6234,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5945,
									"end": 6240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6395,
									"end": 6398,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 6362,
									"end": 6399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "tag",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6464,
									"end": 6482,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6456,
									"end": 6462,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6453,
									"end": 6483,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6486,
									"end": 6504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "tag",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 6530,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6675,
									"end": 6681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6667,
									"end": 6673,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6665,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 6615,
									"end": 6682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6709,
									"end": 6710,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6733,
									"end": 6737,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6720,
									"end": 6737,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6720,
									"end": 6737,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6765,
									"end": 6767,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6757,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6754,
									"end": 6768,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6782,
									"end": 6783,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7439,
									"end": 7440,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7456,
									"end": 7462,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7505,
									"end": 7514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7500,
									"end": 7503,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 7496,
									"end": 7515,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7490,
									"end": 7516,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7481,
									"end": 7516,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7481,
									"end": 7516,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7616,
									"end": 7622,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 7614,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 7556,
									"end": 7623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7543,
									"end": 7624,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7412,
									"end": 7634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6829,
									"end": 6833,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6825,
									"end": 6834,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6817,
									"end": 6823,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6813,
									"end": 6835,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 6895,
									"end": 6899,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 6863,
									"end": 6900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6922,
									"end": 6923,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6950,
									"end": 6957,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6944,
									"end": 6958,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7029,
									"end": 7038,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7027,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7020,
									"end": 7039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7014,
									"end": 7040,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7006,
									"end": 7012,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6999,
									"end": 7041,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7080,
									"end": 7081,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7068,
									"end": 7082,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7058,
									"end": 7082,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7058,
									"end": 7082,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7127,
									"end": 7129,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7116,
									"end": 7125,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7112,
									"end": 7130,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7099,
									"end": 7130,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7099,
									"end": 7130,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6973,
									"end": 6977,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6970,
									"end": 6971,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6966,
									"end": 6978,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6961,
									"end": 6978,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6961,
									"end": 6978,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "tag",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7172,
									"end": 7178,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7163,
									"end": 7170,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7160,
									"end": 7179,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7230,
									"end": 7239,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7225,
									"end": 7228,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7221,
									"end": 7240,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7215,
									"end": 7241,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 7315,
									"end": 7319,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7307,
									"end": 7313,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7303,
									"end": 7320,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7292,
									"end": 7301,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 7273,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7258,
									"end": 7322,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7180,
									"end": 7336,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "tag",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7378,
									"end": 7379,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7370,
									"end": 7376,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7366,
									"end": 7380,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7362,
									"end": 7384,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7356,
									"end": 7360,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7349,
									"end": 7385,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6245,
									"end": 7640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7646,
									"end": 7826,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 7646,
									"end": 7826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7694,
									"end": 7771,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7691,
									"end": 7692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7684,
									"end": 7772,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7791,
									"end": 7795,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7788,
									"end": 7789,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 7781,
									"end": 7796,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7815,
									"end": 7819,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 7812,
									"end": 7813,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7805,
									"end": 7820,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7934,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 7832,
									"end": 7934,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7874,
									"end": 7882,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7921,
									"end": 7926,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7918,
									"end": 7919,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7914,
									"end": 7927,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7893,
									"end": 7927,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7893,
									"end": 7927,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7934,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7832,
									"end": 7934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8001,
									"end": 8006,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8008,
									"end": 8012,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8032,
									"end": 8038,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8023,
									"end": 8038,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8023,
									"end": 8038,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8056,
									"end": 8061,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8047,
									"end": 8061,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8047,
									"end": 8061,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "tag",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8091,
									"end": 8092,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8081,
									"end": 8089,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8078,
									"end": 8093,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8186,
									"end": 8190,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8181,
									"end": 8184,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8177,
									"end": 8191,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 8171,
									"end": 8175,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8168,
									"end": 8192,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8165,
									"end": 8215,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8165,
									"end": 8215,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8165,
									"end": 8215,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8195,
									"end": 8213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8195,
									"end": 8213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 8195,
									"end": 8213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8195,
									"end": 8213,
									"name": "tag",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8195,
									"end": 8213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8165,
									"end": 8215,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8165,
									"end": 8215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8245,
									"end": 8246,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8235,
									"end": 8243,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8231,
									"end": 8247,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8228,
									"end": 8679,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8228,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8228,
									"end": 8679,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8660,
									"end": 8664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8653,
									"end": 8658,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8649,
									"end": 8665,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8640,
									"end": 8665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8228,
									"end": 8679,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8228,
									"end": 8679,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8710,
									"end": 8714,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8704,
									"end": 8708,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8700,
									"end": 8715,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8692,
									"end": 8715,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8692,
									"end": 8715,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8740,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8763,
									"end": 8771,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8740,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 8740,
									"end": 8772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8740,
									"end": 8772,
									"name": "tag",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8740,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8728,
									"end": 8772,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8728,
									"end": 8772,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8070,
									"end": 8782,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7940,
									"end": 8788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8848,
									"end": 8853,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9039,
									"end": 9047,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9029,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9029,
									"end": 9069,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9060,
									"end": 9061,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9051,
									"end": 9061,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9051,
									"end": 9061,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9062,
									"end": 9067,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 9062,
									"end": 9067,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9029,
									"end": 9069,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9029,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9088,
									"end": 9092,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9078,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9078,
									"end": 9114,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9105,
									"end": 9106,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9096,
									"end": 9106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9096,
									"end": 9106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9107,
									"end": 9112,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 9107,
									"end": 9112,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9078,
									"end": 9114,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9078,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9174,
									"end": 9178,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9222,
									"end": 9223,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9258,
									"end": 9259,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9167,
									"end": 9444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9167,
									"end": 9444,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "tag",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9235,
									"end": 9236,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9226,
									"end": 9236,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9236,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9237,
									"end": 9242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9237,
									"end": 9242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 9237,
									"end": 9242,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9253,
									"end": 9444,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9298,
									"end": 9301,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9288,
									"end": 9296,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9285,
									"end": 9302,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9282,
									"end": 9325,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9282,
									"end": 9325,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9282,
									"end": 9325,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9305,
									"end": 9323,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9305,
									"end": 9323,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9305,
									"end": 9323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9305,
									"end": 9323,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9305,
									"end": 9323,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9282,
									"end": 9325,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9282,
									"end": 9325,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9354,
									"end": 9362,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9351,
									"end": 9352,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9347,
									"end": 9363,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9338,
									"end": 9363,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9338,
									"end": 9363,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9389,
									"end": 9392,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9382,
									"end": 9387,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9379,
									"end": 9393,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9376,
									"end": 9416,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9376,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9376,
									"end": 9416,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9396,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9396,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9396,
									"end": 9414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9396,
									"end": 9414,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9396,
									"end": 9414,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9376,
									"end": 9416,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9376,
									"end": 9416,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9429,
									"end": 9434,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9429,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 9429,
									"end": 9434,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9167,
									"end": 9444,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9167,
									"end": 9444,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9167,
									"end": 9444,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9553,
									"end": 9555,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9543,
									"end": 9551,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9534,
									"end": 9537,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 9528,
									"end": 9532,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9525,
									"end": 9538,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9521,
									"end": 9557,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9503,
									"end": 9505,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 9493,
									"end": 9501,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9490,
									"end": 9506,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9485,
									"end": 9487,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 9479,
									"end": 9483,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9476,
									"end": 9488,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9472,
									"end": 9507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9456,
									"end": 9567,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9453,
									"end": 9699,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9453,
									"end": 9699,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9453,
									"end": 9699,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9609,
									"end": 9617,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9603,
									"end": 9607,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9599,
									"end": 9618,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9590,
									"end": 9618,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9590,
									"end": 9618,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9644,
									"end": 9647,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9637,
									"end": 9642,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9634,
									"end": 9648,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9631,
									"end": 9671,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9631,
									"end": 9671,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9631,
									"end": 9671,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9669,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9651,
									"end": 9669,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9651,
									"end": 9669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9669,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9651,
									"end": 9669,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9631,
									"end": 9671,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9631,
									"end": 9671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9684,
									"end": 9689,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 9684,
									"end": 9689,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9453,
									"end": 9699,
									"name": "tag",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9453,
									"end": 9699,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9724,
									"end": 9766,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9762,
									"end": 9765,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9752,
									"end": 9760,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9746,
									"end": 9750,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9743,
									"end": 9744,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9724,
									"end": 9766,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 9724,
									"end": 9766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9724,
									"end": 9766,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9724,
									"end": 9766,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9709,
									"end": 9766,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9709,
									"end": 9766,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9709,
									"end": 9766,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9709,
									"end": 9766,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9798,
									"end": 9802,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9793,
									"end": 9796,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9789,
									"end": 9803,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9782,
									"end": 9787,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9779,
									"end": 9804,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9776,
									"end": 9827,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9776,
									"end": 9827,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9776,
									"end": 9827,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9807,
									"end": 9825,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 9807,
									"end": 9825,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9807,
									"end": 9825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9807,
									"end": 9825,
									"name": "tag",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 9807,
									"end": 9825,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9776,
									"end": 9827,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9776,
									"end": 9827,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9856,
									"end": 9860,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9849,
									"end": 9854,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9845,
									"end": 9861,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9836,
									"end": 9861,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9836,
									"end": 9861,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "tag",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8794,
									"end": 9867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9873,
									"end": 9959,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 9873,
									"end": 9959,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9908,
									"end": 9915,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9948,
									"end": 9952,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9941,
									"end": 9946,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9937,
									"end": 9953,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9926,
									"end": 9953,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9926,
									"end": 9953,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9873,
									"end": 9959,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9873,
									"end": 9959,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9873,
									"end": 9959,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9873,
									"end": 9959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10023,
									"end": 10028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10047,
									"end": 10070,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10065,
									"end": 10069,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10047,
									"end": 10070,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10047,
									"end": 10070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10047,
									"end": 10070,
									"name": "tag",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10047,
									"end": 10070,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10039,
									"end": 10070,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10039,
									"end": 10070,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10091,
									"end": 10116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10107,
									"end": 10115,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10091,
									"end": 10116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 10091,
									"end": 10116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10091,
									"end": 10116,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10091,
									"end": 10116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10079,
									"end": 10116,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10079,
									"end": 10116,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10135,
									"end": 10239,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10172,
									"end": 10238,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10162,
									"end": 10170,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10156,
									"end": 10160,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10135,
									"end": 10239,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 10135,
									"end": 10239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10135,
									"end": 10239,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10135,
									"end": 10239,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10126,
									"end": 10239,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10126,
									"end": 10239,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 10246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10252,
									"end": 10432,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 10252,
									"end": 10432,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10300,
									"end": 10377,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10297,
									"end": 10298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10290,
									"end": 10378,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10397,
									"end": 10401,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 10394,
									"end": 10395,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 10387,
									"end": 10402,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10421,
									"end": 10425,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 10418,
									"end": 10419,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10411,
									"end": 10426,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10479,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10495,
									"end": 10515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 10513,
									"end": 10514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10495,
									"end": 10515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10495,
									"end": 10515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10495,
									"end": 10515,
									"name": "tag",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 10495,
									"end": 10515,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10490,
									"end": 10515,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10490,
									"end": 10515,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10529,
									"end": 10549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 10547,
									"end": 10548,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10529,
									"end": 10549,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10529,
									"end": 10549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10529,
									"end": 10549,
									"name": "tag",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 10529,
									"end": 10549,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10524,
									"end": 10549,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10524,
									"end": 10549,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10568,
									"end": 10569,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10558,
									"end": 10593,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10558,
									"end": 10593,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10573,
									"end": 10591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 10573,
									"end": 10591,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 10573,
									"end": 10591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10573,
									"end": 10591,
									"name": "tag",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 10573,
									"end": 10591,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10558,
									"end": 10593,
									"name": "tag",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10558,
									"end": 10593,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10615,
									"end": 10616,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10612,
									"end": 10613,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10608,
									"end": 10617,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 10603,
									"end": 10617,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10603,
									"end": 10617,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10438,
									"end": 10623,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10669,
									"end": 10676,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10692,
									"end": 10712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10710,
									"end": 10711,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10692,
									"end": 10712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10692,
									"end": 10712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10692,
									"end": 10712,
									"name": "tag",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10692,
									"end": 10712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10687,
									"end": 10712,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10687,
									"end": 10712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10726,
									"end": 10746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 10744,
									"end": 10745,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10726,
									"end": 10746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10726,
									"end": 10746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10726,
									"end": 10746,
									"name": "tag",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 10726,
									"end": 10746,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10721,
									"end": 10746,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10721,
									"end": 10746,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10781,
									"end": 10782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10778,
									"end": 10779,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10774,
									"end": 10783,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 10803,
									"end": 10833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 10821,
									"end": 10832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10803,
									"end": 10833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10803,
									"end": 10833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10803,
									"end": 10833,
									"name": "tag",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 10803,
									"end": 10833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10792,
									"end": 10833,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10792,
									"end": 10833,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10982,
									"end": 10983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10973,
									"end": 10980,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10969,
									"end": 10984,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 10966,
									"end": 10967,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10963,
									"end": 10985,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 10944,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10936,
									"end": 10945,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10916,
									"end": 10999,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 10893,
									"end": 11032,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 10893,
									"end": 11032,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11012,
									"end": 11030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 11012,
									"end": 11030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 11012,
									"end": 11030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11012,
									"end": 11030,
									"name": "tag",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 11012,
									"end": 11030,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10893,
									"end": 11032,
									"name": "tag",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 10893,
									"end": 11032,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10677,
									"end": 11039,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10629,
									"end": 11039,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11045,
									"end": 11163,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 11045,
									"end": 11163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11132,
									"end": 11156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11150,
									"end": 11155,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11132,
									"end": 11156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 11132,
									"end": 11156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11132,
									"end": 11156,
									"name": "tag",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11132,
									"end": 11156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11127,
									"end": 11130,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11120,
									"end": 11157,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11045,
									"end": 11163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11045,
									"end": 11163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11045,
									"end": 11163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11262,
									"end": 11266,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11300,
									"end": 11302,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11289,
									"end": 11298,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11285,
									"end": 11303,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11277,
									"end": 11303,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11277,
									"end": 11303,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11313,
									"end": 11384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11381,
									"end": 11382,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11370,
									"end": 11379,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11366,
									"end": 11383,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11357,
									"end": 11363,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11313,
									"end": 11384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 11313,
									"end": 11384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11313,
									"end": 11384,
									"name": "tag",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11313,
									"end": 11384,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11169,
									"end": 11391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11437,
									"end": 11440,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11456,
									"end": 11476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11474,
									"end": 11475,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11456,
									"end": 11476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11456,
									"end": 11476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11456,
									"end": 11476,
									"name": "tag",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11456,
									"end": 11476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11451,
									"end": 11476,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11451,
									"end": 11476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11490,
									"end": 11510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "243"
								},
								{
									"begin": 11508,
									"end": 11509,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11490,
									"end": 11510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11490,
									"end": 11510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11490,
									"end": 11510,
									"name": "tag",
									"source": 13,
									"value": "243"
								},
								{
									"begin": 11490,
									"end": 11510,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11485,
									"end": 11510,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11485,
									"end": 11510,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11533,
									"end": 11534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11530,
									"end": 11531,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11526,
									"end": 11535,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11519,
									"end": 11535,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11519,
									"end": 11535,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11554,
									"end": 11557,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 11551,
									"end": 11552,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11548,
									"end": 11558,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 11545,
									"end": 11581,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 11545,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 11545,
									"end": 11581,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11561,
									"end": 11579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 11561,
									"end": 11579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 11561,
									"end": 11579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11561,
									"end": 11579,
									"name": "tag",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 11561,
									"end": 11579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11545,
									"end": 11581,
									"name": "tag",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 11545,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11397,
									"end": 11588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11594,
									"end": 11712,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 11594,
									"end": 11712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11681,
									"end": 11705,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 11699,
									"end": 11704,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11681,
									"end": 11705,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11681,
									"end": 11705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11681,
									"end": 11705,
									"name": "tag",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 11681,
									"end": 11705,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11676,
									"end": 11679,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11669,
									"end": 11706,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11594,
									"end": 11712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11594,
									"end": 11712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11594,
									"end": 11712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11867,
									"end": 11871,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11905,
									"end": 11907,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 11894,
									"end": 11903,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11890,
									"end": 11908,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11882,
									"end": 11908,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11882,
									"end": 11908,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11918,
									"end": 11989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 11986,
									"end": 11987,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11975,
									"end": 11984,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11971,
									"end": 11988,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11962,
									"end": 11968,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 11918,
									"end": 11989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 11918,
									"end": 11989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11918,
									"end": 11989,
									"name": "tag",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 11918,
									"end": 11989,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11999,
									"end": 12071,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "250"
								},
								{
									"begin": 12067,
									"end": 12069,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12056,
									"end": 12065,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12052,
									"end": 12070,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12043,
									"end": 12049,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 11999,
									"end": 12071,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 11999,
									"end": 12071,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11999,
									"end": 12071,
									"name": "tag",
									"source": 13,
									"value": "250"
								},
								{
									"begin": 11999,
									"end": 12071,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12081,
									"end": 12153,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 12149,
									"end": 12151,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 12138,
									"end": 12147,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12134,
									"end": 12152,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12125,
									"end": 12131,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12081,
									"end": 12153,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 12081,
									"end": 12153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12081,
									"end": 12153,
									"name": "tag",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 12081,
									"end": 12153,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11718,
									"end": 12160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12259,
									"end": 12263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12297,
									"end": 12299,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12286,
									"end": 12295,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12282,
									"end": 12300,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12274,
									"end": 12300,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12274,
									"end": 12300,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 12378,
									"end": 12379,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12367,
									"end": 12376,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12363,
									"end": 12380,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12354,
									"end": 12360,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 12310,
									"end": 12381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "tag",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 12310,
									"end": 12381,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12166,
									"end": 12388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1429"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1427"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1425"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1423"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3445,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cb8b3e465b50756657981eb2fe160c5e57eaa54e5b63ea9bfe6970e9cc95d7064736f6c634300081a0033",
									".code": [
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "CA19C11C"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "E091A39B"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "EC8EBA14"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "F57D283E"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "CA19C11C"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "CED0550F"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "D59624B4"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "992642E5"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "992642E5"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "A920260B"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "904835C4"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "2A0ACC6A"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "10002DBD"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3445,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1261,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3374,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3303,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1742,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1742,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 663,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 663,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 663,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2485,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2485,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2153,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 739,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 702,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 702,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1540,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1540,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 1324,
											"end": 1355,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1355,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1355,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1375,
											"end": 1379,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1402,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1381,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 1381,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1324,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1324,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1324,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1316,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1316,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1462,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1472,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1472,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1452,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1452,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1452,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1444,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1444,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1261,
											"end": 1534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3426,
											"end": 3434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3426,
											"end": 3436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3426,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3353,
											"end": 3359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 3353,
											"end": 3361,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3353,
											"end": 3361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3368,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1908,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 1863,
											"end": 1954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 1863,
											"end": 1954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2007,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2007,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2043,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 2036,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2070,
											"end": 2080,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2094,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2095,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2082,
											"end": 2097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2107,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2099,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2036,
											"end": 2110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2036,
											"end": 2110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2036,
											"end": 2110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2028,
											"end": 2130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2028,
											"end": 2130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 696,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 663,
											"end": 696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2599,
											"end": 2611,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1429"
										},
										{
											"begin": 2580,
											"end": 2595,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2611,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2572,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2572,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2676,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2769,
											"end": 2779,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2744,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2744,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 2736,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2872,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2883,
											"end": 2893,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2894,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2855,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2855,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2847,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2992,
											"end": 2996,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 2978,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3011,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2978,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2221,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2251,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 2288,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2251,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2251,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2251,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2335,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2304,
											"end": 2367,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2304,
											"end": 2367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2391,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2385,
											"end": 2405,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2406,
											"end": 2416,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2417,
											"end": 2436,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2385,
											"end": 2437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2437,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2385,
											"end": 2437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2385,
											"end": 2437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2377,
											"end": 2472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 2377,
											"end": 2472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2211,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 739,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1429"
										},
										{
											"begin": 702,
											"end": 739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 702,
											"end": 739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 1644,
											"end": 1677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1677,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1678,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 1691,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1644,
											"end": 1710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1710,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1644,
											"end": 1710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1644,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1636,
											"end": 1729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1636,
											"end": 1729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1540,
											"end": 1736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3294,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3129,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3271,
											"end": 3275,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3277,
											"end": 3279,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3257,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3287,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3257,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3129,
											"end": 3294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4202,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4210,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 4400,
											"end": 4407,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 4355,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 4536,
											"end": 4541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 4518,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 4699,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7472,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 7475,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 7620,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7795,
											"end": 7807,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 7999,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 7819,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7867,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7961,
											"end": 7962,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7954,
											"end": 7969,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 7992,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 7993,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 8110,
											"end": 8114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 8088,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8216,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8203,
											"end": 8225,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8201,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8164,
											"end": 8226,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8229,
											"end": 8247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8265,
											"end": 8267,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8048,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 8353,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 8408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 8382,
											"end": 8415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8586,
											"end": 8592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8583,
											"end": 8613,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8616,
											"end": 8634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8666,
											"end": 8670,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8658,
											"end": 8664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8654,
											"end": 8671,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8855,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8980,
											"end": 8985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 9078,
											"end": 9084,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 9021,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 9005,
											"end": 9086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9106,
											"end": 9111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9128,
											"end": 9133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9142,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9220,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9227,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9254,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9249,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 9270,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9394,
											"end": 9409,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9477,
											"end": 9480,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 9539,
											"end": 9542,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 9506,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9501,
											"end": 9504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9544,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9568,
											"end": 9571,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9564,
											"end": 9578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9578,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9423,
											"end": 9426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9730,
											"end": 9734,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9722,
											"end": 9728,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9714,
											"end": 9741,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 9745,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 9977,
											"end": 9980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 9975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9962,
											"end": 9966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9950,
											"end": 9967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 9887,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 9981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 9981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9694,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10179,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 10182,
											"end": 10200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10232,
											"end": 10236,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10224,
											"end": 10230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10237,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10296,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10282,
											"end": 10297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10274,
											"end": 10297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10274,
											"end": 10297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10423,
											"end": 10428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 10521,
											"end": 10527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 10464,
											"end": 10528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 10448,
											"end": 10529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10616,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10601,
											"end": 10617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10669,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 10670,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10694,
											"end": 10697,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 10713,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 10834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10845,
											"end": 10851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10840,
											"end": 10843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10852,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10970,
											"end": 10980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10949,
											"end": 10986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10944,
											"end": 10947,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 10987,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11016,
											"end": 11020,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11011,
											"end": 11014,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11021,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 11031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10871,
											"end": 10875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11173,
											"end": 11177,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11178,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11184,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 11188,
											"end": 11267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11312,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 11420,
											"end": 11423,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11405,
											"end": 11409,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11397,
											"end": 11403,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11410,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 11330,
											"end": 11424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 11613,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11590,
											"end": 11597,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11586,
											"end": 11609,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11614,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 11617,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11766,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11763,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 11768,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11787,
											"end": 11793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11784,
											"end": 11814,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 11817,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 11992,
											"end": 11999,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11981,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 11990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 11922,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 12000,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 12000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11708,
											"end": 12010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12077,
											"end": 12079,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12066,
											"end": 12075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12049,
											"end": 12081,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12100,
											"end": 12106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12097,
											"end": 12127,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12130,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 12305,
											"end": 12312,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12285,
											"end": 12294,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12281,
											"end": 12303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 12235,
											"end": 12313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12313,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12020,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 12441,
											"end": 12446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12423,
											"end": 12447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12411,
											"end": 12448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12553,
											"end": 12557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12593,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12580,
											"end": 12589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12670,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12648,
											"end": 12654,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 12604,
											"end": 12675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12756,
											"end": 12762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12815,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12799,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12811,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 12819,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 13009,
											"end": 13016,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 12998,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 12964,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 13137,
											"end": 13144,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13128,
											"end": 13134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13126,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 13092,
											"end": 13145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13216,
											"end": 13293,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13310,
											"end": 13311,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13303,
											"end": 13318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13337,
											"end": 13341,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13342,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13429,
											"end": 13433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13425,
											"end": 13437,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13483,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13476,
											"end": 13480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13559,
											"end": 13563,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 13551,
											"end": 13557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13621,
											"end": 13623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13624,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13587,
											"end": 13625,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 13640,
											"end": 13658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13405,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13860,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 13680,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13805,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13725,
											"end": 13726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13718,
											"end": 13806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13829,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13822,
											"end": 13823,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13815,
											"end": 13830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13849,
											"end": 13853,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13846,
											"end": 13847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13854,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13906,
											"end": 13913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 13947,
											"end": 13948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13929,
											"end": 13949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 13981,
											"end": 13982,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13963,
											"end": 13983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13958,
											"end": 13983,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13958,
											"end": 13983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14015,
											"end": 14016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 14058,
											"end": 14069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 14040,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14220,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14210,
											"end": 14217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14221,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14200,
											"end": 14222,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14181,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14173,
											"end": 14182,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14153,
											"end": 14236,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 14249,
											"end": 14267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14471,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14458,
											"end": 14467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14454,
											"end": 14472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 14550,
											"end": 14551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14548,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14526,
											"end": 14532,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 14482,
											"end": 14553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 14631,
											"end": 14633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14629,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14616,
											"end": 14634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14613,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 14563,
											"end": 14635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 14713,
											"end": 14715,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14702,
											"end": 14711,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14698,
											"end": 14716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14689,
											"end": 14695,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 14645,
											"end": 14717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 14800,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14793,
											"end": 14798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14790,
											"end": 14822,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 14911,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14937,
											"end": 14943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 14944,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14922,
											"end": 14944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14922,
											"end": 14944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 14977,
											"end": 14982,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 14953,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15062,
											"end": 15068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15090,
											"end": 15097,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15086,
											"end": 15109,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15082,
											"end": 15114,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 15117,
											"end": 15196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 15315,
											"end": 15322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15306,
											"end": 15312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15295,
											"end": 15304,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 15262,
											"end": 15323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15208,
											"end": 15333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15486,
											"end": 15515,
											"name": "PUSH",
											"source": 13,
											"value": "537461626C6520636F696E207472616E73666572206661696C65640000000000"
										},
										{
											"begin": 15482,
											"end": 15483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15474,
											"end": 15480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15470,
											"end": 15484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 15756,
											"end": 15758,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 15751,
											"end": 15754,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 15692,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 15857,
											"end": 15860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 15768,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15886,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15877,
											"end": 15889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16138,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16125,
											"end": 16142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16165,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 16308,
											"end": 16312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 16182,
											"end": 16313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16485,
											"end": 16487,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16474,
											"end": 16483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16470,
											"end": 16488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 16566,
											"end": 16567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16555,
											"end": 16564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16551,
											"end": 16568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16542,
											"end": 16548,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 16498,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 16647,
											"end": 16649,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16650,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16623,
											"end": 16629,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 16579,
											"end": 16651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16804,
											"end": 16832,
											"name": "PUSH",
											"source": 13,
											"value": "426F6E6420746F6B656E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16792,
											"end": 16798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16788,
											"end": 16802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16781,
											"end": 16833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16988,
											"end": 16991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 17073,
											"end": 17075,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 17068,
											"end": 17071,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 17009,
											"end": 17076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17002,
											"end": 17076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17002,
											"end": 17076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 17085,
											"end": 17178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17203,
											"end": 17205,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17198,
											"end": 17201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17194,
											"end": 17206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17187,
											"end": 17206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17187,
											"end": 17206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17424,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17411,
											"end": 17420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17407,
											"end": 17425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17471,
											"end": 17480,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17465,
											"end": 17469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17461,
											"end": 17481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17457,
											"end": 17458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17446,
											"end": 17455,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 17625,
											"end": 17629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 17499,
											"end": 17630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17491,
											"end": 17630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17491,
											"end": 17630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17783,
											"end": 17817,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468"
										},
										{
											"begin": 17779,
											"end": 17780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17771,
											"end": 17777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17767,
											"end": 17781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17760,
											"end": 17818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17852,
											"end": 17863,
											"name": "PUSH",
											"source": 13,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17847,
											"end": 17849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17839,
											"end": 17845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17835,
											"end": 17850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17828,
											"end": 17864,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18019,
											"end": 18022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 18104,
											"end": 18106,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 18099,
											"end": 18102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 18040,
											"end": 18107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 18205,
											"end": 18208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 18116,
											"end": 18209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18225,
											"end": 18237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18415,
											"end": 18419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18442,
											"end": 18451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18430,
											"end": 18456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18430,
											"end": 18456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18496,
											"end": 18500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18512,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18488,
											"end": 18489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18477,
											"end": 18486,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 18656,
											"end": 18660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18530,
											"end": 18661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18674,
											"end": 18854,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 18674,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18799,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18719,
											"end": 18720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18819,
											"end": 18823,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 18816,
											"end": 18817,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18809,
											"end": 18824,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18843,
											"end": 18847,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18840,
											"end": 18841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18833,
											"end": 18848,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19017,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 18994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 18998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18977,
											"end": 19018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 19258,
											"end": 19260,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 19253,
											"end": 19256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 19194,
											"end": 19261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 19359,
											"end": 19362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 19270,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19383,
											"end": 19386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19379,
											"end": 19391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19372,
											"end": 19391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19372,
											"end": 19391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19569,
											"end": 19573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19607,
											"end": 19609,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19596,
											"end": 19605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19592,
											"end": 19610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19584,
											"end": 19610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19584,
											"end": 19610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19656,
											"end": 19665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19646,
											"end": 19666,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19642,
											"end": 19643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19631,
											"end": 19640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19627,
											"end": 19644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19620,
											"end": 19667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 19810,
											"end": 19814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 19684,
											"end": 19815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19676,
											"end": 19815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19676,
											"end": 19815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20002,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 19828,
											"end": 20002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19968,
											"end": 19994,
											"name": "PUSH",
											"source": 13,
											"value": "4D61747572697479206E6F742079657420726561636865640000000000000000"
										},
										{
											"begin": 19964,
											"end": 19965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19956,
											"end": 19962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19952,
											"end": 19966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19945,
											"end": 19995,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20374,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 20008,
											"end": 20374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20150,
											"end": 20153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20171,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 20235,
											"end": 20237,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 20230,
											"end": 20233,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20171,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 20171,
											"end": 20238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20171,
											"end": 20238,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 20171,
											"end": 20238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20164,
											"end": 20238,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20164,
											"end": 20238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20247,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 20336,
											"end": 20339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20247,
											"end": 20340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 20247,
											"end": 20340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20247,
											"end": 20340,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 20247,
											"end": 20340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20365,
											"end": 20367,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20356,
											"end": 20368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20349,
											"end": 20368,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20349,
											"end": 20368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20008,
											"end": 20374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20799,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 20380,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20546,
											"end": 20550,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20584,
											"end": 20586,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20573,
											"end": 20582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20587,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20633,
											"end": 20642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20627,
											"end": 20631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20623,
											"end": 20643,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20619,
											"end": 20620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20608,
											"end": 20617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20604,
											"end": 20621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20597,
											"end": 20644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20661,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 20787,
											"end": 20791,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20661,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 20661,
											"end": 20792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20661,
											"end": 20792,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 20661,
											"end": 20792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20653,
											"end": 20792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20653,
											"end": 20792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20805,
											"end": 20977,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 20805,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20945,
											"end": 20969,
											"name": "PUSH",
											"source": 13,
											"value": "43616E277420636C61696D207A65726F20636F696E7300000000000000000000"
										},
										{
											"begin": 20941,
											"end": 20942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20933,
											"end": 20939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20929,
											"end": 20943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20922,
											"end": 20970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20805,
											"end": 20977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20805,
											"end": 20977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20983,
											"end": 21349,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 20983,
											"end": 21349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21125,
											"end": 21128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21146,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 21210,
											"end": 21212,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 21205,
											"end": 21208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21146,
											"end": 21213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 21146,
											"end": 21213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21146,
											"end": 21213,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 21146,
											"end": 21213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21139,
											"end": 21213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21139,
											"end": 21213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 21311,
											"end": 21314,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 21222,
											"end": 21315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21315,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 21222,
											"end": 21315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21340,
											"end": 21342,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21335,
											"end": 21338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21331,
											"end": 21343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21324,
											"end": 21343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20983,
											"end": 21349,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20983,
											"end": 21349,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20983,
											"end": 21349,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20983,
											"end": 21349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21355,
											"end": 21774,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 21355,
											"end": 21774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21521,
											"end": 21525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21559,
											"end": 21561,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21548,
											"end": 21557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21544,
											"end": 21562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21536,
											"end": 21562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21536,
											"end": 21562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21608,
											"end": 21617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21602,
											"end": 21606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21598,
											"end": 21618,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21594,
											"end": 21595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21583,
											"end": 21592,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21579,
											"end": 21596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21572,
											"end": 21619,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21636,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 21762,
											"end": 21766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21636,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 21636,
											"end": 21767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21636,
											"end": 21767,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 21636,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21628,
											"end": 21767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21628,
											"end": 21767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21355,
											"end": 21774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21355,
											"end": 21774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21355,
											"end": 21774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21355,
											"end": 21774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21837,
											"end": 21842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21868,
											"end": 21874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21862,
											"end": 21875,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21853,
											"end": 21875,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21853,
											"end": 21875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21884,
											"end": 21917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 21911,
											"end": 21916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21884,
											"end": 21917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 21884,
											"end": 21917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21884,
											"end": 21917,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 21884,
											"end": 21917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21780,
											"end": 21923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21999,
											"end": 22005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22048,
											"end": 22050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22036,
											"end": 22045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22034,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22023,
											"end": 22046,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22019,
											"end": 22051,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 22016,
											"end": 22135,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22016,
											"end": 22135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 22016,
											"end": 22135,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 22054,
											"end": 22133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 22054,
											"end": 22133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22133,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 22054,
											"end": 22133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22016,
											"end": 22135,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 22016,
											"end": 22135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22174,
											"end": 22175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22199,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 22255,
											"end": 22262,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22246,
											"end": 22252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22235,
											"end": 22244,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22231,
											"end": 22253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22199,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 22199,
											"end": 22263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22199,
											"end": 22263,
											"name": "tag",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 22199,
											"end": 22263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22189,
											"end": 22263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22189,
											"end": 22263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22145,
											"end": 22273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21929,
											"end": 22280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22286,
											"end": 22464,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 22286,
											"end": 22464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22426,
											"end": 22456,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20696E766573746F722066756E647320617661696C61626C652E00000000"
										},
										{
											"begin": 22422,
											"end": 22423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22414,
											"end": 22420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22410,
											"end": 22424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22403,
											"end": 22457,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22286,
											"end": 22464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22286,
											"end": 22464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22836,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 22470,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22612,
											"end": 22615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22633,
											"end": 22700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 22697,
											"end": 22699,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 22692,
											"end": 22695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22633,
											"end": 22700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 22633,
											"end": 22700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22633,
											"end": 22700,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 22633,
											"end": 22700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22626,
											"end": 22700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22626,
											"end": 22700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22709,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 22798,
											"end": 22801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22709,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 22709,
											"end": 22802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22709,
											"end": 22802,
											"name": "tag",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 22709,
											"end": 22802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22827,
											"end": 22829,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22822,
											"end": 22825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22818,
											"end": 22830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22811,
											"end": 22830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22811,
											"end": 22830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22836,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22836,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22842,
											"end": 23261,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 22842,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23008,
											"end": 23012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23046,
											"end": 23048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23035,
											"end": 23044,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23031,
											"end": 23049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23023,
											"end": 23049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23023,
											"end": 23049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23095,
											"end": 23104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23089,
											"end": 23093,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23085,
											"end": 23105,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23081,
											"end": 23082,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23070,
											"end": 23079,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23066,
											"end": 23083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23059,
											"end": 23106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 23249,
											"end": 23253,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 23123,
											"end": 23254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23254,
											"name": "tag",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 23123,
											"end": 23254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23115,
											"end": 23254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23115,
											"end": 23254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22842,
											"end": 23261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22842,
											"end": 23261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22842,
											"end": 23261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22842,
											"end": 23261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23267,
											"end": 23448,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 23267,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23407,
											"end": 23440,
											"name": "PUSH",
											"source": 13,
											"value": "4661696C656420746F207472616E7366657220737461626C6520636F696E7300"
										},
										{
											"begin": 23403,
											"end": 23404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23395,
											"end": 23401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23391,
											"end": 23405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23384,
											"end": 23441,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23267,
											"end": 23448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23267,
											"end": 23448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23820,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 23454,
											"end": 23820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23596,
											"end": 23599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23617,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 23681,
											"end": 23683,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 23676,
											"end": 23679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23617,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 23617,
											"end": 23684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23617,
											"end": 23684,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 23617,
											"end": 23684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23610,
											"end": 23684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23610,
											"end": 23684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23693,
											"end": 23786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 23782,
											"end": 23785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23693,
											"end": 23786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 23693,
											"end": 23786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23693,
											"end": 23786,
											"name": "tag",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 23693,
											"end": 23786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23811,
											"end": 23813,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23806,
											"end": 23809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23802,
											"end": 23814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23795,
											"end": 23814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23795,
											"end": 23814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23454,
											"end": 23820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 24245,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 23826,
											"end": 24245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23992,
											"end": 23996,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24030,
											"end": 24032,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24019,
											"end": 24028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24015,
											"end": 24033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24007,
											"end": 24033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24007,
											"end": 24033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24079,
											"end": 24088,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24073,
											"end": 24077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24069,
											"end": 24089,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24054,
											"end": 24063,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24050,
											"end": 24067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24043,
											"end": 24090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24107,
											"end": 24238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 24233,
											"end": 24237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24107,
											"end": 24238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 24107,
											"end": 24238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24107,
											"end": 24238,
											"name": "tag",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 24107,
											"end": 24238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24099,
											"end": 24238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24099,
											"end": 24238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 24245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 24245,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 24245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23826,
											"end": 24245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24400,
											"end": 24404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24438,
											"end": 24440,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 24427,
											"end": 24436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24423,
											"end": 24441,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24415,
											"end": 24441,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24415,
											"end": 24441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24451,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 24519,
											"end": 24520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24508,
											"end": 24517,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24504,
											"end": 24521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24495,
											"end": 24501,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24451,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 24451,
											"end": 24522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24451,
											"end": 24522,
											"name": "tag",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 24451,
											"end": 24522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24532,
											"end": 24604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 24600,
											"end": 24602,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24589,
											"end": 24598,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24585,
											"end": 24603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24576,
											"end": 24582,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24532,
											"end": 24604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 24532,
											"end": 24604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24532,
											"end": 24604,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 24532,
											"end": 24604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24614,
											"end": 24686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 24682,
											"end": 24684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24671,
											"end": 24680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24667,
											"end": 24685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24658,
											"end": 24664,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24614,
											"end": 24686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 24614,
											"end": 24686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24614,
											"end": 24686,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 24614,
											"end": 24686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24251,
											"end": 24693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24820,
											"end": 24824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24858,
											"end": 24860,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24847,
											"end": 24856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24843,
											"end": 24861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24835,
											"end": 24861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24835,
											"end": 24861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24871,
											"end": 24942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 24939,
											"end": 24940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24928,
											"end": 24937,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24924,
											"end": 24941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24915,
											"end": 24921,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24871,
											"end": 24942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 24871,
											"end": 24942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24871,
											"end": 24942,
											"name": "tag",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 24871,
											"end": 24942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 25020,
											"end": 25022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25009,
											"end": 25018,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25005,
											"end": 25023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24996,
											"end": 25002,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 24952,
											"end": 25024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25024,
											"name": "tag",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 24952,
											"end": 25024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24699,
											"end": 25031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25077,
											"end": 25080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25096,
											"end": 25116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 25114,
											"end": 25115,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25096,
											"end": 25116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 25096,
											"end": 25116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25096,
											"end": 25116,
											"name": "tag",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 25096,
											"end": 25116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25091,
											"end": 25116,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25091,
											"end": 25116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25130,
											"end": 25150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 25148,
											"end": 25149,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25130,
											"end": 25150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 25130,
											"end": 25150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25130,
											"end": 25150,
											"name": "tag",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 25130,
											"end": 25150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25125,
											"end": 25150,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25125,
											"end": 25150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25173,
											"end": 25174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25170,
											"end": 25171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25166,
											"end": 25175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25159,
											"end": 25175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25159,
											"end": 25175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25194,
											"end": 25197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 25191,
											"end": 25192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25188,
											"end": 25198,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 25185,
											"end": 25221,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25185,
											"end": 25221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 25185,
											"end": 25221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25201,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 25201,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 25201,
											"end": 25219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25201,
											"end": 25219,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 25201,
											"end": 25219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25185,
											"end": 25221,
											"name": "tag",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 25185,
											"end": 25221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/BonDeFiToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN()": "2a0acc6a",
							"BOND_ISSUER()": "e091a39b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"buyBond(uint256)": "10002dbd",
							"claimFaceValue(uint256)": "ca19c11c",
							"claimInvestorFunds()": "ced0550f",
							"decimals()": "313ce567",
							"distributeInterest(address,uint256)": "f57d283e",
							"distributeInterestAll(address[],uint256[])": "904835c4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"interestCoin()": "ec8eba14",
							"maturityDate()": "d59624b4",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"stableCoin()": "992642e5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unitSize()": "a920260b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"administrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondIssuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_interestCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unitSize\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOND_ISSUER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"buyBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"claimFaceValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInvestorFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenHolders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeInterestAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BonDeFiToken.sol\":\"BonDeFiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/BonDeFiToken.sol\":{\"keccak256\":\"0xec87b440976d58f1fb50422aa8e2e75830e5bbdfe8222968c200c3cb07007fb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23414bb25cf4a919210576a214778d6ec15999204b22135bb700bf308386eb9b\",\"dweb:/ipfs/QmPmxzcSDCHb59M6Yr7st2am3GxjJQ9CuAQ2VyDvXxAP2E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1245,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1386,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1385,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1385,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1385,
								1397,
								378,
								1244
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1215,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1245,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1031,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1245,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1113,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "483:7:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "492:5:5"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1126,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 1154,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1142,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 1154,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1155,
							"src": "448:733:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1188
						],
						"Pausable": [
							1361
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1031,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1157,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1160,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1362,
							"src": "186:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1159,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1361,
										"src": "194:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1162,
										"name": "ERC20",
										"nameLocations": [
											"964:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "964:5:6"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:6"
								},
								{
									"baseName": {
										"id": 1164,
										"name": "Pausable",
										"nameLocations": [
											"971:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "971:8:6"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:6"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:6",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1361,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1210:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "1240:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "1244:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1188_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1220:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:6",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "1196:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:6"
									},
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1129:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1143:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:6"
									},
									"scope": 1188,
									"src": "1112:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1189,
							"src": "929:330:6",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "124:1136:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1109,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1191,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1194,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:7"
									},
									"id": 1195,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1214,
							"linearizedBaseContracts": [
								1214,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1214,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1214,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1210,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1214,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1215,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1244
						]
					},
					"id": 1245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1217,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1244,
							"linearizedBaseContracts": [
								1244
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1222,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1224,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1244,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1231,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1230,
												"id": 1233,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1244,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1239,
												"id": 1241,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1244,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1245,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"Pausable": [
							1361
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1245,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1247,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1250,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "645:7:9"
									},
									"id": 1251,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1244
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1253,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1361,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1252,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1258,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1263,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1266,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1269,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1361,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1281,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1284,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1286,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1289,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1292,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1294,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1253,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1301,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1361,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1307,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1309,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1311,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1361,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1319,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1322,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1324,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1361,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1361,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1355,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1354,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1361,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1362,
							"src": "615:2214:9",
							"usedErrors": [
								1266,
								1269
							],
							"usedEvents": [
								1258,
								1263
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1385
						],
						"IERC165": [
							1397
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1398,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1397,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1367,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1397,
										"src": "687:7:10"
									},
									"id": 1368,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1397
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1376,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1378,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1377,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1397",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1382,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1385,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1386,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1397
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1397,
							"linearizedBaseContracts": [
								1397
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1397,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"contracts/BonDeFiToken.sol": {
				"ast": {
					"absolutePath": "contracts/BonDeFiToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"BonDeFiToken": [
							1741
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						],
						"ERC20Pausable": [
							1188
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						],
						"Pausable": [
							1361
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1399,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1031,
							"src": "107:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1155,
							"src": "163:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1189,
							"src": "238:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 296,
							"src": "313:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1404,
										"name": "ERC20",
										"nameLocations": [
											"398:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "398:5:12"
									},
									"id": 1405,
									"nodeType": "InheritanceSpecifier",
									"src": "398:5:12"
								},
								{
									"baseName": {
										"id": 1406,
										"name": "ERC20Burnable",
										"nameLocations": [
											"405:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "405:13:12"
									},
									"id": 1407,
									"nodeType": "InheritanceSpecifier",
									"src": "405:13:12"
								},
								{
									"baseName": {
										"id": 1408,
										"name": "ERC20Pausable",
										"nameLocations": [
											"420:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "420:13:12"
									},
									"id": 1409,
									"nodeType": "InheritanceSpecifier",
									"src": "420:13:12"
								},
								{
									"baseName": {
										"id": 1410,
										"name": "AccessControl",
										"nameLocations": [
											"435:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "435:13:12"
									},
									"id": 1411,
									"nodeType": "InheritanceSpecifier",
									"src": "435:13:12"
								}
							],
							"canonicalName": "BonDeFiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741,
								295,
								1385,
								1397,
								378,
								1188,
								1361,
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "BonDeFiToken",
							"nameLocation": "382:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2a0acc6a",
									"id": 1416,
									"mutability": "constant",
									"name": "ADMIN",
									"nameLocation": "479:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "455:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1412,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "455:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e",
												"id": 1414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "497:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												},
												"value": "ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												}
											],
											"id": 1413,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "487:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "487:18:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e091a39b",
									"id": 1421,
									"mutability": "constant",
									"name": "BOND_ISSUER",
									"nameLocation": "535:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "511:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1417,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424f4e445f495353554552",
												"id": 1419,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "559:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												},
												"value": "BOND_ISSUER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												}
											],
											"id": 1418,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "549:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "549:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "992642e5",
									"id": 1423,
									"mutability": "immutable",
									"name": "stableCoin",
									"nameLocation": "604:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "579:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec8eba14",
									"id": 1425,
									"mutability": "immutable",
									"name": "interestCoin",
									"nameLocation": "645:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "620:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1424,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a920260b",
									"id": 1427,
									"mutability": "immutable",
									"name": "unitSize",
									"nameLocation": "688:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "663:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d59624b4",
									"id": 1429,
									"mutability": "immutable",
									"name": "maturityDate",
									"nameLocation": "727:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "702:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "950:305:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1451,
															"name": "ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "971:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1452,
															"name": "administrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "978:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1450,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "960:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "960:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "BOND_ISSUER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "1013:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1457,
															"name": "bondIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "1026:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1455,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1002:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "1002:35:12"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "1047:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1461,
														"name": "_stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "1060:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1047:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "1047:24:12"
											},
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "interestCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "1081:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1465,
														"name": "_interestCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "1096:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1081:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "1081:28:12"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1468,
														"name": "unitSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "1119:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1469,
														"name": "_unitSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "1130:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1119:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "1119:20:12"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1472,
														"name": "maturityDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1149:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1473,
														"name": "_maturityDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "1164:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1149:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "1149:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1477,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1193:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1197:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1193:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1479,
																			"name": "faceValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "1206:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1480,
																			"name": "_unitSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1443,
																			"src": "1218:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1206:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1205:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1231:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1484,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "1237:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1237:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1231:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1205:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1476,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1187:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1187:61:12"
											}
										]
									},
									"id": 1491,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426f6e44654669546f6b656e",
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "923:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3fddf2bad6afd8a45ed2476e6e2a090065b40d520ebbbdd55a12550c2481156d",
														"typeString": "literal_string \"BonDeFiToken\""
													},
													"value": "BonDeFiToken"
												},
												{
													"hexValue": "424446",
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "939:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bf2b8008f98b96100fd77045ddd88c23563999a18b216795533257ffc9153f24",
														"typeString": "literal_string \"BDF\""
													},
													"value": "BDF"
												}
											],
											"id": 1448,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1445,
												"name": "ERC20",
												"nameLocations": [
													"917:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "917:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:28:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "administrator",
												"nameLocation": "765:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "757:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "bondIssuer",
												"nameLocation": "788:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "780:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "800:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_interestCoin",
												"nameLocation": "828:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "820:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "faceValue",
												"nameLocation": "855:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "847:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_maturityDate",
												"nameLocation": "874:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "866:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_unitSize",
												"nameLocation": "897:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "889:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:151:12"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "950:0:12"
									},
									"scope": 1741,
									"src": "745:510:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "1306:228:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1501,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1356:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1360:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1356:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1505,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1375:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1367:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1503,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1367:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1367:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1507,
																		"name": "amountTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "1381:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1508,
																		"name": "unitSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "1394:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1381:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "1331:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1497,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1324:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1324:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1343:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1324:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1324:79:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1404:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1316:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:118:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "1316:118:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1519,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1473:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1477:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1473:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1521,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "1484:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1516,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1458:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1515,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "1452:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1452:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1464:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "1452:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1452:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1498:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1444:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "1444:83:12"
											}
										]
									},
									"functionSelector": "10002dbd",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyBond",
									"nameLocation": "1270:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "1286:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "1278:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:22:12"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:12"
									},
									"scope": 1741,
									"src": "1261:273:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "1626:110:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1542,
																	"name": "interestCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "1678:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1543,
																	"name": "tokenHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1691:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1544,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "1703:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1539,
																			"name": "interestCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "1651:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1538,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1644:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1644:20:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1665:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1644:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1644:66:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1711:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1636:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1636:93:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "1636:93:12"
											}
										]
									},
									"functionSelector": "f57d283e",
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1534,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1620:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1535,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1533,
												"name": "onlyRole",
												"nameLocations": [
													"1611:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1611:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1611:15:12"
										}
									],
									"name": "distributeInterest",
									"nameLocation": "1549:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1576:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1568:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1596:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1588:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:36:12"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1626:0:12"
									},
									"scope": 1741,
									"src": "1540:196:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "1853:294:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1563,
																	"name": "tokenHolders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "1871:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1871:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1565,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "1894:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1902:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1894:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1871:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1910:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															},
															"value": "Token holders and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1863:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1863:91:12"
											},
											{
												"body": {
													"id": 1599,
													"nodeType": "Block",
													"src": "2014:127:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1587,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2070:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2074:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2070:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1589,
																					"name": "tokenHolders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1553,
																					"src": "2082:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1591,
																				"indexExpression": {
																					"id": 1590,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "2095:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2082:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1592,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1556,
																					"src": "2099:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1594,
																				"indexExpression": {
																					"id": 1593,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "2107:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2099:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1584,
																						"name": "interestCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1425,
																						"src": "2043:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1583,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "2036:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2036:20:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1108",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2057:12:12",
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1107,
																			"src": "2036:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2036:74:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 1582,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2028:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2028:102:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1598,
															"nodeType": "ExpressionStatement",
															"src": "2028:102:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1575,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "1984:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1576,
															"name": "tokenHolders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "1988:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2001:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1988:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"initializationExpression": {
													"assignments": [
														1572
													],
													"declarations": [
														{
															"constant": false,
															"id": 1572,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1977:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1600,
															"src": "1969:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1571,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1969:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1574,
													"initialValue": {
														"hexValue": "30",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1981:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1969:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2009:3:12",
														"subExpression": {
															"id": 1579,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "2009:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1581,
													"nodeType": "ExpressionStatement",
													"src": "2009:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1964:177:12"
											}
										]
									},
									"functionSelector": "904835c4",
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1559,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1846:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1560,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1558,
												"name": "onlyRole",
												"nameLocations": [
													"1837:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1837:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1837:15:12"
										}
									],
									"name": "distributeInterestAll",
									"nameLocation": "1751:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "tokenHolders",
												"nameLocation": "1790:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1773:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1551,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1773:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1552,
													"nodeType": "ArrayTypeName",
													"src": "1773:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1821:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "1804:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1554,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1804:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1555,
													"nodeType": "ArrayTypeName",
													"src": "1804:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:57:12"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1853:0:12"
									},
									"scope": 1741,
									"src": "1742:405:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "2211:268:12",
										"statements": [
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "amountInvestorCoins",
														"nameLocation": "2229:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 1639,
														"src": "2221:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2221:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1616,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2288:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2280:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2280:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2280:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1611,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "2258:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1610,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2251:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2251:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1108",
																"typeString": "contract IERC20"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2270:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "2251:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2221:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1621,
																"name": "amountInvestorCoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "2312:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2312:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															},
															"value": "No investor funds available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															}
														],
														"id": 1620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2304:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "2304:63:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1632,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2406:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2410:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2406:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1634,
																	"name": "amountInvestorCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "2417:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1629,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2391:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1628,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2385:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2385:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2397:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "2385:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2385:52:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2438:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															},
															"value": "Failed to transfer stable coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															}
														],
														"id": 1627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2377:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2377:95:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "2377:95:12"
											}
										]
									},
									"functionSelector": "ced0550f",
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1605,
													"name": "BOND_ISSUER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "2199:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1604,
												"name": "onlyRole",
												"nameLocations": [
													"2190:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2190:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2190:21:12"
										}
									],
									"name": "claimInvestorFunds",
									"nameLocation": "2162:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:2:12"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2211:0:12"
									},
									"scope": 1741,
									"src": "2153:326:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "2537:481:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1646,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2580:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2586:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2580:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1648,
																"name": "maturityDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "2599:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2580:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61747572697479206e6f74207965742072656163686564",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2612:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																"typeString": "literal_string \"Maturity not yet reached\""
															},
															"value": "Maturity not yet reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																"typeString": "literal_string \"Maturity not yet reached\""
															}
														],
														"id": 1645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2572:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2572:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "amountTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "2684:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2699:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2684:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2701:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															},
															"value": "Can't claim zero coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															}
														],
														"id": 1653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2676:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "2676:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1665,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2769:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2773:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2769:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1669,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2788:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2780:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1667,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2780:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2780:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1671,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "2794:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1662,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2750:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1661,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2744:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2744:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2756:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 713,
																"src": "2744:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2744:63:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2808:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2736:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:101:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "2736:101:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1681,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2883:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2887:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2883:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1683,
																		"name": "amountTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "2894:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1684,
																		"name": "unitSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "2907:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2894:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1678,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "2862:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1677,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2855:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2874:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1075,
																"src": "2855:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2855:61:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2917:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2847:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "2847:100:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1693,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2992:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1741",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2984:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1691,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2984:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2984:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1695,
															"name": "amountTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "2998:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1690,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2978:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2978:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "2978:33:12"
											}
										]
									},
									"functionSelector": "ca19c11c",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimFaceValue",
									"nameLocation": "2494:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "2517:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "2509:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:22:12"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:12"
									},
									"scope": 1741,
									"src": "2485:533:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837,
										1187
									],
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "3247:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1714,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "3271:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "3277:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1716,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "3281:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1711,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3257:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BonDeFiToken_$1741_$",
																"typeString": "type(contract super BonDeFiToken)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3263:7:12",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "3257:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "3257:30:12"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3138:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1709,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1707,
												"name": "ERC20",
												"nameLocations": [
													"3221:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "3221:5:12"
											},
											{
												"id": 1708,
												"name": "ERC20Pausable",
												"nameLocations": [
													"3228:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1188,
												"src": "3228:13:12"
											}
										],
										"src": "3212:30:12"
									},
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3154:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3146:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3168:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3160:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3180:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3172:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:41:12"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3247:0:12"
									},
									"scope": 1741,
									"src": "3129:165:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "3343:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1726,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "3353:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "3353:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1723,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "3336:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1722,
												"name": "onlyRole",
												"nameLocations": [
													"3327:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3327:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3327:15:12"
										}
									],
									"name": "pause",
									"nameLocation": "3312:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:2:12"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3343:0:12"
									},
									"scope": 1741,
									"src": "3303:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "3416:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1736,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "3426:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3426:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "3426:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1733,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "3409:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1732,
												"name": "onlyRole",
												"nameLocations": [
													"3400:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3400:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3400:15:12"
										}
									],
									"name": "unpause",
									"nameLocation": "3383:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:2:12"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3416:0:12"
									},
									"scope": 1741,
									"src": "3374:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1742,
							"src": "373:3072:12",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "81:3365:12"
				},
				"id": 12
			}
		}
	}
}